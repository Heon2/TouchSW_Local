; generated by Component: ARM Compiler 5.06 update 4 (build 422) Tool: ArmCC [4d3604]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o.\bin\systick.o --asm_dir=.\list\ --list_dir=.\list\ --depend=.\bin\systick.d --cpu=Cortex-M3 --apcs=interwork -O3 -Otime --diag_suppress=9931 -I..\..\App -I..\..\App\Algorithm -I..\..\App\Algorithm\Baseline -I..\..\App\Algorithm\Coord -I..\..\App\Algorithm\Label -I..\..\App\Algorithm\Noise -I..\..\Env -I..\..\Hal -I..\..\Hal\system -I..\..\Hal\system\CMSIS -I..\..\Hal\gpio -I..\..\Hal\i2c -I..\..\Hal\pwmdrv -I..\..\Hal\timer -I..\..\Hal\wdgt -I..\..\Hal\spi -I..\..\Hal\dspA -I..\..\Hal\dspB -I..\..\Hal\scrb -I..\..\Hal\usb -I..\..\Hal\usb\FWOTG210_F000 -I..\..\Hal\usb\FWOTG210_F000\OTG_peripheral -I..\..\Hal\usb\FWOTG210_F000\OTG_peripheral_Config -I..\..\Module -I..\..\Module\SRIC -I..\..\Protocol -I..\..\Hal\dma -I..\..\Tool_BinCvt\BinToolApp\src -I..\..\Boot -I..\..\Parameter -I..\..\Hal\misc -I..\..\Hal\flitf -I..\..\Env\env_model_L -I..\..\Env\env_model_L\customer\DEFAULT -I..\..\Env -I.\RTE\_MFTP_FPGA -IC:\Keil_v5\ARM\PACK\ARM\CMSIS\5.0.1\Device\ARM\ARMCM3\Include -IC:\Keil_v5\ARM\CMSIS\Include -D__UVISION_VERSION=523 -DARMCM3 -D_USE_APP_80K_ -DUSE_BOOTLOADER_16KB --wchar32 --omf_browse=.\bin\systick.crf ..\..\Hal\timer\systick.c]
                          THUMB

                          AREA ||i.SysTick_DeInitialize||, CODE, READONLY, ALIGN=1

                  SysTick_DeInitialize PROC
;;;62     
;;;63     void SysTick_DeInitialize(void)
000000  f04f21e0          MOV      r1,#0xe000e000
;;;64     {
;;;65     	SysTick->CTRL = 0x0;
000004  2000              MOVS     r0,#0
000006  6108              STR      r0,[r1,#0x10]
;;;66     }
000008  4770              BX       lr
;;;67     
                          ENDP


                          AREA ||i.SysTick_Initialize||, CODE, READONLY, ALIGN=2

                  SysTick_Initialize PROC
;;;54     
;;;55     void SysTick_Initialize(uint32_t clk)
000000  4a0a              LDR      r2,|L2.44|
;;;56     {
;;;57     	Fncp_Systick_IRQHandler = &SysTick_InterruptHandler;
000002  4909              LDR      r1,|L2.40|
;;;58     
;;;59     	SysTick_Config(SYSTICK_MAXCOUNT);
;;;60     	_core_clock_ = clk;
;;;61     }
000004  6011              STR      r1,[r2,#0]  ; Fncp_Systick_IRQHandler
000006  f04f21e0          MOV      r1,#0xe000e000
00000a  f64f72ff          MOV      r2,#0xffff
00000e  614a              STR      r2,[r1,#0x14]
000010  4b07              LDR      r3,|L2.48|
000012  22e0              MOVS     r2,#0xe0
000014  f8832d14          STRB     r2,[r3,#0xd14]
000018  2200              MOVS     r2,#0
00001a  618a              STR      r2,[r1,#0x18]
00001c  2207              MOVS     r2,#7
00001e  610a              STR      r2,[r1,#0x10]
000020  4904              LDR      r1,|L2.52|
000022  6048              STR      r0,[r1,#4]            ;60  ; _core_clock_
000024  4770              BX       lr
;;;62     
                          ENDP

000026  0000              DCW      0x0000
                  |L2.40|
                          DCD      SysTick_InterruptHandler
                  |L2.44|
                          DCD      Fncp_Systick_IRQHandler
                  |L2.48|
                          DCD      0xe000e00f
                  |L2.52|
                          DCD      ||.data||

                          AREA ||i.SysTick_InterruptHandler||, CODE, READONLY, ALIGN=2

                  SysTick_InterruptHandler PROC
;;;39     
;;;40     void SysTick_InterruptHandler(void)
000000  4805              LDR      r0,|L3.24|
;;;41     {
;;;42     	//56bit counter를 만들기 위해 32bit카운트 변수 추가
;;;43     	if (_systick_high_rank_count_ == 0)
000002  6801              LDR      r1,[r0,#0]  ; _systick_high_rank_count_
000004  2900              CMP      r1,#0
;;;44     	{
;;;45     		_systick_high_rank_count_ = SYSTICK_MAX_HIGHT_RANK_COUNT;
000006  bf0e              ITEE     EQ
000008  f04f31ff          MOVEQ    r1,#0xffffffff
;;;46     	}
;;;47     	else
;;;48     	{
;;;49     		--_systick_high_rank_count_;
00000c  6801              LDRNE    r1,[r0,#0]  ; _systick_high_rank_count_
00000e  1e49              SUBNE    r1,r1,#1
000010  6001              STR      r1,[r0,#0]  ; _systick_high_rank_count_
;;;50     	}
;;;51     
;;;52     	QueueCommonData_USB();
000012  f7ffbffe          B.W      QueueCommonData_USB
;;;53     }
;;;54     
                          ENDP

000016  0000              DCW      0x0000
                  |L3.24|
                          DCD      ||.data||

                          AREA ||i.delay_ms||, CODE, READONLY, ALIGN=2

                  delay_ms PROC
;;;197     */
;;;198    void delay_ms(uint32_t time)
000000  b4f0              PUSH     {r4-r7}
000002  f8dfc070          LDR      r12,|L4.116|
;;;199    {
;;;200    	delay_us(time * 1000);
000006  f44f717a          MOV      r1,#0x3e8
00000a  4348              MULS     r0,r1,r0
00000c  f8dc1004          LDR      r1,[r12,#4]  ; _core_clock_
000010  f44f3280          MOV      r2,#0x10000
000014  fbb2f1f1          UDIV     r1,r2,r1
000018  f1a1030a          SUB      r3,r1,#0xa
00001c  fbb0f1f3          UDIV     r1,r0,r3
000020  fbb0f5f3          UDIV     r5,r0,r3
000024  fb030611          MLS      r6,r3,r1,r0
000028  2400              MOVS     r4,#0
00002a  f04f22e0          MOV      r2,#0xe000e000
00002e  2d00              CMP      r5,#0
000030  dd10              BLE      |L4.84|
                  |L4.50|
000032  6990              LDR      r0,[r2,#0x18]         ;199
000034  b281              UXTH     r1,r0                 ;199
                  |L4.54|
000036  6990              LDR      r0,[r2,#0x18]         ;199
000038  b280              UXTH     r0,r0                 ;199
00003a  1a08              SUBS     r0,r1,r0              ;199
00003c  bf48              IT       MI                    ;199
00003e  f5003080          ADDMI    r0,r0,#0x10000        ;199
000042  f8dc7004          LDR      r7,[r12,#4]           ;199  ; _core_clock_
000046  fbb0f7f7          UDIV     r7,r0,r7              ;199
00004a  429f              CMP      r7,r3                 ;199
00004c  d3f3              BCC      |L4.54|
00004e  1c64              ADDS     r4,r4,#1              ;199
000050  42ac              CMP      r4,r5                 ;199
000052  dbee              BLT      |L4.50|
                  |L4.84|
000054  6990              LDR      r0,[r2,#0x18]         ;199
000056  b281              UXTH     r1,r0                 ;199
                  |L4.88|
000058  6990              LDR      r0,[r2,#0x18]         ;199
00005a  b280              UXTH     r0,r0                 ;199
00005c  1a08              SUBS     r0,r1,r0              ;199
00005e  bf48              IT       MI                    ;199
000060  f5003080          ADDMI    r0,r0,#0x10000        ;199
000064  f8dc3004          LDR      r3,[r12,#4]           ;199  ; _core_clock_
000068  fbb0f0f3          UDIV     r0,r0,r3              ;199
00006c  42b0              CMP      r0,r6                 ;199
00006e  d3f3              BCC      |L4.88|
;;;201    }
000070  bcf0              POP      {r4-r7}
000072  4770              BX       lr
                          ENDP

                  |L4.116|
                          DCD      ||.data||

                          AREA ||i.delay_ms_useSystick||, CODE, READONLY, ALIGN=2

                  delay_ms_useSystick PROC
;;;148     */
;;;149    void delay_ms_useSystick(uint32_t time)
000000  b470              PUSH     {r4-r6}
;;;150    {
;;;151    	uint32_t start = getSysTick();
000002  f04f24e0          MOV      r4,#0xe000e000
000006  69a1              LDR      r1,[r4,#0x18]
;;;152    	do {
;;;153    	} while (getMSfromTick(getElapsedSYSTICK(start))<time);
000008  4b0b              LDR      r3,|L5.56|
00000a  b28a              UXTH     r2,r1                 ;151
00000c  f04f3cff          MOV      r12,#0xffffffff
                  |L5.16|
000010  69a1              LDR      r1,[r4,#0x18]
000012  b289              UXTH     r1,r1
000014  1a51              SUBS     r1,r2,r1
000016  bf48              IT       MI
000018  f5013180          ADDMI    r1,r1,#0x10000
00001c  685d              LDR      r5,[r3,#4]  ; _core_clock_
00001e  eb050645          ADD      r6,r5,r5,LSL #1
000022  ebc615c5          RSB      r5,r6,r5,LSL #7
000026  eb0c05c5          ADD      r5,r12,r5,LSL #3
00002a  fbb1f1f5          UDIV     r1,r1,r5
00002e  4281              CMP      r1,r0
000030  d3ee              BCC      |L5.16|
;;;154    }
000032  bc70              POP      {r4-r6}
000034  4770              BX       lr
;;;155    /**
                          ENDP

000036  0000              DCW      0x0000
                  |L5.56|
                          DCD      ||.data||

                          AREA ||i.delay_systick||, CODE, READONLY, ALIGN=1

                  delay_systick PROC
;;;162     */
;;;163    void delay_systick(uint32_t tick_count)
000000  f04f23e0          MOV      r3,#0xe000e000
;;;164    {
;;;165    	uint32_t start = getSysTick();
000004  6999              LDR      r1,[r3,#0x18]
000006  b28a              UXTH     r2,r1
                  |L6.8|
000008  6999              LDR      r1,[r3,#0x18]
00000a  b289              UXTH     r1,r1
00000c  1a51              SUBS     r1,r2,r1
00000e  bf48              IT       MI
000010  f5013180          ADDMI    r1,r1,#0x10000
;;;166    	do {
;;;167    	} while (getElapsedSYSTICK(start)<tick_count);
000014  4281              CMP      r1,r0
000016  d3f7              BCC      |L6.8|
;;;168    }
000018  4770              BX       lr
;;;169    /**
                          ENDP


                          AREA ||i.delay_us||, CODE, READONLY, ALIGN=2

                  delay_us PROC
;;;177    
;;;178    void delay_us(uint32_t time)
000000  b4f0              PUSH     {r4-r7}
;;;179    {
;;;180    	int i,count,remainder,block;
;;;181    	block = SYSTICK_MAXCOUNT / _core_clock_ -10;
000002  4d1a              LDR      r5,|L7.108|
000004  6869              LDR      r1,[r5,#4]  ; _core_clock_
000006  f44f3280          MOV      r2,#0x10000
00000a  fbb2f1f1          UDIV     r1,r2,r1
00000e  f1a1030a          SUB      r3,r1,#0xa
;;;182    	count = time / block;//200ms단위로 딜레이
;;;183    	remainder = time % block;//나머지 딜레이
000012  fbb0f1f3          UDIV     r1,r0,r3
000016  fbb0f4f3          UDIV     r4,r0,r3              ;182
00001a  fb030611          MLS      r6,r3,r1,r0
;;;184    	for (i=0; i<count; ++i)
00001e  f04f0c00          MOV      r12,#0
000022  f04f22e0          MOV      r2,#0xe000e000
000026  2c00              CMP      r4,#0
000028  dd10              BLE      |L7.76|
                  |L7.42|
00002a  6990              LDR      r0,[r2,#0x18]         ;179
00002c  b281              UXTH     r1,r0                 ;179
                  |L7.46|
00002e  6990              LDR      r0,[r2,#0x18]         ;179
000030  b280              UXTH     r0,r0                 ;179
000032  1a08              SUBS     r0,r1,r0              ;179
000034  bf48              IT       MI                    ;179
000036  f5003080          ADDMI    r0,r0,#0x10000        ;179
00003a  686f              LDR      r7,[r5,#4]            ;179  ; _core_clock_
00003c  fbb0f7f7          UDIV     r7,r0,r7              ;179
000040  429f              CMP      r7,r3                 ;179
000042  d3f4              BCC      |L7.46|
000044  f10c0c01          ADD      r12,r12,#1            ;179
000048  45a4              CMP      r12,r4
00004a  dbee              BLT      |L7.42|
                  |L7.76|
00004c  6990              LDR      r0,[r2,#0x18]
00004e  b281              UXTH     r1,r0
                  |L7.80|
000050  6990              LDR      r0,[r2,#0x18]
000052  b280              UXTH     r0,r0
000054  1a08              SUBS     r0,r1,r0
000056  bf48              IT       MI
000058  f5003080          ADDMI    r0,r0,#0x10000
00005c  686b              LDR      r3,[r5,#4]  ; _core_clock_
00005e  fbb0f0f3          UDIV     r0,r0,r3
000062  42b0              CMP      r0,r6
000064  d3f4              BCC      |L7.80|
;;;185    	{
;;;186    		delay_us_useSystick(block);
;;;187    	}
;;;188    	delay_us_useSystick(remainder);
;;;189    }
000066  bcf0              POP      {r4-r7}
000068  4770              BX       lr
;;;190    /**
                          ENDP

00006a  0000              DCW      0x0000
                  |L7.108|
                          DCD      ||.data||

                          AREA ||i.delay_us_useSystick||, CODE, READONLY, ALIGN=2

                  delay_us_useSystick PROC
;;;134     */
;;;135    void delay_us_useSystick(uint32_t time)
000000  b410              PUSH     {r4}
;;;136    {
;;;137    	uint32_t start = getSysTick();
000002  f04f23e0          MOV      r3,#0xe000e000
000006  6999              LDR      r1,[r3,#0x18]
;;;138    	do {
;;;139    	} while (getUSfromTick(getElapsedSYSTICK(start))<time);
000008  f8dfc020          LDR      r12,|L8.44|
00000c  b28a              UXTH     r2,r1                 ;137
                  |L8.14|
00000e  6999              LDR      r1,[r3,#0x18]         ;137
000010  b289              UXTH     r1,r1                 ;137
000012  1a51              SUBS     r1,r2,r1              ;137
000014  bf48              IT       MI                    ;137
000016  f5013180          ADDMI    r1,r1,#0x10000        ;137
00001a  f8dc4004          LDR      r4,[r12,#4]  ; _core_clock_
00001e  fbb1f1f4          UDIV     r1,r1,r4
000022  4281              CMP      r1,r0
000024  d3f3              BCC      |L8.14|
;;;140    }
000026  bc10              POP      {r4}
000028  4770              BX       lr
;;;141    /**
                          ENDP

00002a  0000              DCW      0x0000
                  |L8.44|
                          DCD      ||.data||

                          AREA ||i.getElapsedLongSYSTICK||, CODE, READONLY, ALIGN=2

                  getElapsedLongSYSTICK PROC
;;;104     */
;;;105    uint64_t getElapsedLongSYSTICK(uint64_t start)
000000  4a0d              LDR      r2,|L9.56|
;;;106    {
000002  b410              PUSH     {r4}
;;;107    	int64_t elapsedTick;
;;;108    	elapsedTick = start-getLongSysTick();
000004  6813              LDR      r3,[r2,#0]  ; _systick_high_rank_count_
000006  2200              MOVS     r2,#0
000008  0414              LSLS     r4,r2,#16
00000a  ea444c13          ORR      r12,r4,r3,LSR #16
00000e  041c              LSLS     r4,r3,#16
000010  f04f23e0          MOV      r3,#0xe000e000
000014  699b              LDR      r3,[r3,#0x18]
000016  ea4c0202          ORR      r2,r12,r2
00001a  b29b              UXTH     r3,r3
00001c  4323              ORRS     r3,r3,r4
00001e  1ac0              SUBS     r0,r0,r3
000020  4191              SBCS     r1,r1,r2
;;;109    	if (elapsedTick < 0)
;;;110    	{
;;;111    		elapsedTick = SYSTICK_MAX_LONG_COUNT + elapsedTick;
;;;112    	}
;;;113    	return elapsedTick;
;;;114    }
000022  bf5c              ITT      PL
000024  bc10              POPPL    {r4}
000026  4770              BXPL     lr
000028  f64f72fe          MOV      r2,#0xfffe            ;111
00002c  1880              ADDS     r0,r0,r2              ;111
00002e  bc10              POP      {r4}
000030  f1410100          ADC      r1,r1,#0              ;111
000034  4770              BX       lr
;;;115    /**
                          ENDP

000036  0000              DCW      0x0000
                  |L9.56|
                          DCD      ||.data||

                          AREA ||i.getElapsedSYSTICK||, CODE, READONLY, ALIGN=1

                  getElapsedSYSTICK PROC
;;;86     
;;;87     uint32_t getElapsedSYSTICK(uint32_t start)
000000  f04f21e0          MOV      r1,#0xe000e000
;;;88     {
;;;89     	int32_t elapsedTick;
;;;90     	elapsedTick = start - getSysTick();
000004  6989              LDR      r1,[r1,#0x18]
000006  b289              UXTH     r1,r1
000008  1a40              SUBS     r0,r0,r1
00000a  bf48              IT       MI
00000c  f5003080          ADDMI    r0,r0,#0x10000
;;;91     	if (elapsedTick < 0)
;;;92     	{
;;;93     		elapsedTick += SYSTICK_MAXCOUNT;
;;;94     	}
;;;95     	return elapsedTick;
;;;96     }
000010  4770              BX       lr
;;;97     /**
                          ENDP


                          AREA ||i.getElapsedSYSTICK2||, CODE, READONLY, ALIGN=1

                  getElapsedSYSTICK2 PROC
;;;78     //}
;;;79     uint32_t getElapsedSYSTICK2(uint32_t start,uint32_t end)
000000  1a40              SUBS     r0,r0,r1
;;;80     {
;;;81     	int32_t elapsedTick;
;;;82     	elapsedTick = start-end;
000002  bf48              IT       MI
000004  f5003080          ADDMI    r0,r0,#0x10000
;;;83     	if (elapsedTick < 0) elapsedTick += SYSTICK_MAXCOUNT;
;;;84     	return elapsedTick;
;;;85     }
000008  4770              BX       lr
;;;86     
                          ENDP


                          AREA ||i.getElapsedTime_us||, CODE, READONLY, ALIGN=2

                  getElapsedTime_us PROC
;;;122     */
;;;123    uint64_t getElapsedTime_us(uint64_t start_tick)
000000  b570              PUSH     {r4-r6,lr}
000002  4a10              LDR      r2,|L12.68|
000004  f8d2c000          LDR      r12,[r2,#0]  ; _systick_high_rank_count_
000008  2300              MOVS     r3,#0
00000a  041d              LSLS     r5,r3,#16
00000c  ea45441c          ORR      r4,r5,r12,LSR #16
000010  ea4f450c          LSL      r5,r12,#16
000014  f04f2ce0          MOV      r12,#0xe000e000
000018  f8dcc018          LDR      r12,[r12,#0x18]
00001c  431c              ORRS     r4,r4,r3
00001e  fa1ffc8c          UXTH     r12,r12
000022  ea450c0c          ORR      r12,r5,r12
000026  ebb0000c          SUBS     r0,r0,r12
00002a  41a1              SBCS     r1,r1,r4
;;;124    {
00002c  d505              BPL      |L12.58|
00002e  f64f7cfe          MOV      r12,#0xfffe
000032  eb10000c          ADDS     r0,r0,r12
000036  f1410100          ADC      r1,r1,#0
                  |L12.58|
;;;125    	return getUSfromTick(getElapsedLongSYSTICK(start_tick));
00003a  6852              LDR      r2,[r2,#4]  ; _core_clock_
00003c  f7fffffe          BL       __aeabi_uldivmod
;;;126    }
000040  bd70              POP      {r4-r6,pc}
;;;127    /**
                          ENDP

000042  0000              DCW      0x0000
                  |L12.68|
                          DCD      ||.data||

                          AREA ||.data||, DATA, ALIGN=2

                  _systick_high_rank_count_
                          DCD      0x00000000
                  _core_clock_
                          DCD      0x00000000

;*** Start embedded assembler ***

#line 1 "..\\..\\Hal\\timer\\systick.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___9_systick_c_1241419f____REV16|
#line 388 "..\\..\\Hal\\system\\CMSIS\\cmsis_armcc.h"
|__asm___9_systick_c_1241419f____REV16| PROC
#line 389

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___9_systick_c_1241419f____REVSH|
#line 402
|__asm___9_systick_c_1241419f____REVSH| PROC
#line 403

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___9_systick_c_1241419f____RRX|
#line 587
|__asm___9_systick_c_1241419f____RRX| PROC
#line 588

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
