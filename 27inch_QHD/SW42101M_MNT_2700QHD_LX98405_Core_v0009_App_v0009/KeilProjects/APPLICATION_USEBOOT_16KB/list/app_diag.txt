; generated by Component: ARM Compiler 5.06 update 4 (build 422) Tool: ArmCC [4d3604]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o.\bin\app_diag.o --asm_dir=.\list\ --list_dir=.\list\ --depend=.\bin\app_diag.d --cpu=Cortex-M3 --apcs=interwork -O3 -Otime --diag_suppress=9931 -I..\..\App -I..\..\App\Algorithm -I..\..\App\Algorithm\Baseline -I..\..\App\Algorithm\Coord -I..\..\App\Algorithm\Label -I..\..\App\Algorithm\Noise -I..\..\Env -I..\..\Hal -I..\..\Hal\system -I..\..\Hal\system\CMSIS -I..\..\Hal\gpio -I..\..\Hal\i2c -I..\..\Hal\pwmdrv -I..\..\Hal\timer -I..\..\Hal\wdgt -I..\..\Hal\spi -I..\..\Hal\dspA -I..\..\Hal\dspB -I..\..\Hal\scrb -I..\..\Hal\usb -I..\..\Hal\usb\FWOTG210_F000 -I..\..\Hal\usb\FWOTG210_F000\OTG_peripheral -I..\..\Hal\usb\FWOTG210_F000\OTG_peripheral_Config -I..\..\Module -I..\..\Module\SRIC -I..\..\Protocol -I..\..\Hal\dma -I..\..\Tool_BinCvt\BinToolApp\src -I..\..\Boot -I..\..\Parameter -I..\..\Hal\misc -I..\..\Hal\flitf -I..\..\Env\env_model_L -I..\..\Env\env_model_L\customer\DEFAULT -I..\..\Env -I.\RTE\_MFTP_FPGA -IC:\Keil_v5\ARM\PACK\ARM\CMSIS\5.0.1\Device\ARM\ARMCM3\Include -IC:\Keil_v5\ARM\CMSIS\Include -D__UVISION_VERSION=523 -DARMCM3 -D_USE_APP_80K_ -DUSE_BOOTLOADER_16KB --wchar32 --omf_browse=.\bin\app_diag.crf ..\..\App\app_diag.c]
                          THUMB

                          AREA ||i.app_diag_Init||, CODE, READONLY, ALIGN=2

                  app_diag_Init PROC
;;;54     void SRIC_Stop(void);
;;;55     void app_diag_Init(void)
000000  b510              PUSH     {r4,lr}
;;;56     {
;;;57     	sptAlgorithmInfo = algorithm_GetInfo();		
000002  f7fffffe          BL       algorithm_GetInfo
000006  4901              LDR      r1,|L1.12|
000008  6048              STR      r0,[r1,#4]  ; sptAlgorithmInfo
;;;58     }
00000a  bd10              POP      {r4,pc}
;;;59     
                          ENDP

                  |L1.12|
                          DCD      ||.data||

                          AREA ||i.app_diag_oper_handler||, CODE, READONLY, ALIGN=2

                  app_diag_oper_handler PROC
;;;226    __IO uint32_t ulFrameOSCount;
;;;227    eTouchOperMainState_t app_diag_oper_handler(void)
000000  e92d4ff0          PUSH     {r4-r11,lr}
;;;228    {
000004  b08f              SUB      sp,sp,#0x3c
;;;229    	eTouchOperMainState_t main_state;
;;;230    	eDiagOperSubState_t sub_state;
;;;231    	bool_t bLoop = YES;
000006  2001              MOVS     r0,#1
000008  9009              STR      r0,[sp,#0x24]
00000a  f7fffffe          BL       algorithm_GetInfo
00000e  49fe              LDR      r1,|L2.1032|
;;;232    	int i, FrameCnt;
;;;233    	uint8_t r, c;
;;;234    	int deltaData;
;;;235    
;;;236        int k, j;
;;;237        int tcnt = 1;
;;;238    
;;;239    	app_diag_Init();
;;;240    	
;;;241    	sub_state = TOUCH_DIAG_OPER_ENTER;
;;;242    	sptAlgorithmInfo->bDiagMode = YES;
000010  2201              MOVS     r2,#1
;;;243     
;;;244        while(bLoop)
;;;245        {
;;;246        	switch(sub_state)
;;;247        	{
;;;248    			case TOUCH_DIAG_OPER_ENTER:
;;;249    			{
;;;250    				sub_state = TOUCH_DIAG_OPER_WAIT;
;;;251    				break;
;;;252    			}
;;;253    			case TOUCH_DIAG_OPER_WAIT:
;;;254    			{
;;;255    				protocol_swip_PendReadyStatus();
;;;256    				sub_state = TOUCH_DIAG_OPER_NORMAL;
;;;257    				break;
;;;258    			}
;;;259    			case TOUCH_DIAG_OPER_NORMAL:
;;;260    			{
;;;261    				const tModuleCommonConf_t * lptModuleCommonConf = module_GetCommonConfig();
;;;262    				const tAlgorithmModeConf_t * lptAlgorithmConf = algorithm_GetModeConfig();
;;;263    
;;;264    				switch(protocol_swip_GetTestType())
;;;265    				{
;;;266    					case CTT_ABS:	// = MNT RAWDATA
;;;267    					{
;;;268    						for(r = 0; r < lptModuleCommonConf->ucScreenRow_; r++)
;;;269    						{
;;;270    							for(c = 0; c < lptModuleCommonConf->ucScreenCol_; c++)
000012  4dff              LDR      r5,|L2.1040|
000014  6048              STR      r0,[r1,#4]            ;242  ; sptAlgorithmInfo
000016  f5005080          ADD      r0,r0,#0x1000         ;242
00001a  f8dfb3f0          LDR      r11,|L2.1036|
00001e  f8802f96          STRB     r2,[r0,#0xf96]        ;242
000022  9506              STR      r5,[sp,#0x18]         ;244
000024  e00a              B        |L2.60|
                  |L2.38|
000026  9808              LDR      r0,[sp,#0x20]         ;246
000028  b140              CBZ      r0,|L2.60|
00002a  2803              CMP      r0,#3                 ;246
00002c  d00e              BEQ      |L2.76|
00002e  2804              CMP      r0,#4                 ;246
000030  d006              BEQ      |L2.64|
000032  2805              CMP      r0,#5                 ;246
000034  f0408500          BNE.W    |L2.2616|
000038  f000bd0a          B.W      |L2.2640|
                  |L2.60|
00003c  2004              MOVS     r0,#4                 ;250
00003e  e002              B        |L2.70|
                  |L2.64|
000040  f7fffffe          BL       protocol_swip_PendReadyStatus
000044  2003              MOVS     r0,#3                 ;256
                  |L2.70|
000046  9008              STR      r0,[sp,#0x20]         ;250
000048  f000bcf6          B.W      |L2.2616|
                  |L2.76|
00004c  f7fffffe          BL       module_GetCommonConfig
000050  4604              MOV      r4,r0                 ;261
000052  f7fffffe          BL       algorithm_GetModeConfig
000056  4605              MOV      r5,r0                 ;262
000058  f7fffffe          BL       protocol_swip_GetTestType
00005c  2808              CMP      r0,#8                 ;264
00005e  f08084e9          BCS.W    |L2.2612|
000062  e8dff010          TBH      [pc,r0,LSL #1]        ;264
000066  04e7              DCW      0x04e7
000068  000800b1          DCW      0x0008,0x00b1
00006c  04e704e7          DCW      0x04e7,0x04e7
000070  01ad01dd          DCW      0x01ad,0x01dd
000074  034e              DCW      0x034e
000076  7960              LDRB     r0,[r4,#5]            ;268
000078  2300              MOVS     r3,#0                 ;268
00007a  2800              CMP      r0,#0                 ;268
00007c  bf84              ITT      HI                    ;268
00007e  2100              MOVHI    r1,#0                 ;268
000080  f8dfc390          LDRHI    r12,|L2.1044|
000084  d918              BLS      |L2.184|
                  |L2.134|
000086  7922              LDRB     r2,[r4,#4]
000088  b18a              CBZ      r2,|L2.174|
00008a  eb030043          ADD      r0,r3,r3,LSL #1
00008e  eb0c1080          ADD      r0,r12,r0,LSL #6
000092  1e80              SUBS     r0,r0,#2
;;;271    							{
;;;272    								HAL_WRITE_ABS_IMAGE(r, c, 0);
;;;273    							}
;;;274    						}
;;;275    
;;;276    						for(i = 0; i < lptAlgorithmConf->BaseLine.ucDiscardFrameNum; i++)
;;;277    						{
;;;278    							module_wait_full_sample_done();
;;;279    						}
;;;280    
;;;281    						// ABS
;;;282    //						ulFrame1Count = protocol_swip_GetABSCount();
;;;283    //						if(ulFrame1Count == 0)
;;;284    						{
;;;285    							ulFrame1Count = 10;     // Default value
;;;286    						}
;;;287    
;;;288    						for(i=0; i<ulFrame1Count; i++)
;;;289    						{
;;;290    							module_wait_full_sample_done();
;;;291    
;;;292    							for(r = lptModuleCommonConf->ucScreenRow_; r--; )
;;;293    							{
;;;294    								for(c = lptModuleCommonConf->ucScreenCol_; c--; )
;;;295    								{
;;;296    									HAL_WRITE_ABS_IMAGE(r, c, QUOT(HAL_READ_RAW_IMAGE(r,c), ulFrame1Count) + HAL_READ_ABS_IMAGE(r,c));
;;;297    								}
;;;298    							}
;;;299    						}
;;;300    
;;;301    						const tSWIPTestDataFmt_t * tTestDataFmt = &(tSWIPTestDataFmt_t)
;;;302    						{
;;;303    							.bIsRotated = NO,
;;;304    							.ucCol_ = lptModuleCommonConf->ucScreenCol_,
;;;305    							.ucRow_ = lptModuleCommonConf->ucScreenRow_,
;;;306    							.ucBufferCol_ = COL_MAX,
;;;307    							.ucKey_ = 0,
;;;308    							.tDataType = datatypeof(uint16_t)
;;;309    						};
;;;310    
;;;311    						protocol_swip_PendTestResult(tTestDataFmt, (const void *)HAL_GET_ABS_IMAGE_PTR());
;;;312    						break;
;;;313    					}
;;;314    #if !defined(FINGER_ONLY)
;;;315    					case CTT_DC_ABS:
;;;316    					{
;;;317    						protocol_LogCode(LT_DIAGNOSIS, (22)/*System is Entered!*/);
;;;318    
;;;319    						for( r=0; r<lptModuleCommonConf->ucScreenRow_; r++ )
;;;320    						{
;;;321    							for( c=0; c<lptModuleCommonConf->ucScreenCol_; c++ )
;;;322    							{
;;;323    								HAL_WRITE_DC_ABS_IMAGE(r, c, 0);
;;;324    							}
;;;325    						}
;;;326    
;;;327    						// DC ABS
;;;328    						int re = 8;
;;;329    						ePartialSensing_t RetVal = PARTIAL_PEN_BEACON;
;;;330    						sensingRowStart = 0;
;;;331    						setSensingMode(SET_SM_FINGERPEN_MODE);
;;;332    
;;;333    						module_wait_Vsync_signal(LOCAL_MODE, lptAlgorithmConf->BaseLine.ucDiscardFrameNum);
;;;334    
;;;335    						while(YES)
;;;336    						{
;;;337    							RetVal = module_wait_local_sample_done();
;;;338    							if(RetVal == PARTIAL_FINGER4)
;;;339    								break;
;;;340    						}
;;;341    
;;;342    						ulFrame1Count = protocol_swip_GetDCABSCount();
;;;343    						if(ulFrame1Count == 0)
;;;344    						{
;;;345    							ulFrame1Count = 10;     // Default value
;;;346    						}
;;;347    
;;;348    						for(i=0; i<ulFrame1Count;)
;;;349    						{
;;;350    							RetVal = module_wait_local_sample_done();
;;;351    							switch( RetVal )
;;;352    							{
;;;353    								case PARTIAL_PEN_COORD1:
;;;354    								case PARTIAL_PEN_COORD2:
;;;355    								case PARTIAL_PEN_COORD3:
;;;356    								case PARTIAL_PEN_COORD4:
;;;357    								{
;;;358    									for( r=re; r--; )
;;;359    									{
;;;360    										for( c=lptModuleCommonConf->ucScreenCol_; c--; )
;;;361    										{
;;;362    											HAL_WRITE_DC_ABS_IMAGE(r+sensingRowStart, c, QUOT(HAL_READ_LOCAL_RAW_IMAGE(r,c), DiffCnt) + HAL_READ_DC_ABS_IMAGE(r+sensingRowStart,c));
;;;363    										}
;;;364    									}
;;;365    									i++;
;;;366    
;;;367    									if(i == ulFrame1Count)
;;;368    									{
;;;369    										sensingRowStart += 8;
;;;370    										if(sensingRowStart == 48)
;;;371    										{
;;;372    											sensingRowStart = 0;
;;;373    										}
;;;374    										else
;;;375    										{
;;;376    											i = 0;
;;;377    											if(sensingRowStart == 40)
;;;378    											{
;;;379    												re = 5;
;;;380    											}
;;;381    										}
;;;382    									}
;;;383    								}
;;;384    								break;
;;;385    
;;;386    								default:
;;;387    									break;
;;;388    							}
;;;389    						}
;;;390    						setSensingMode(SET_SM_FINGER_MODE);
;;;391    
;;;392    						const tSWIPTestDataFmt_t * tTestDataFmt = &(tSWIPTestDataFmt_t)
;;;393    						{
;;;394    							.bIsRotated = NO,
;;;395    							.ucCol_ = lptModuleCommonConf->ucScreenCol_,
;;;396    							.ucRow_ = lptModuleCommonConf->ucScreenRow_,
;;;397    							.ucBufferCol_ = COL_MAX,
;;;398    							.ucKey_ = 0,
;;;399    							.tDataType = datatypeof(uint16_t)
;;;400    						};
;;;401    
;;;402    						protocol_swip_PendTestResult( tTestDataFmt, (const void *)HAL_GET_DC_ABS_IMAGE_PTR());
;;;403    						break;
;;;404    					}
;;;405    #endif /* !defined(FINGER_ONLY) */
;;;406    
;;;407    					case CTT_JITTER:
;;;408    					{
;;;409    						
;;;410    						uint8_t err_flag = 0;
;;;411    						for(r=0; r<lptModuleCommonConf->ucScreenRow_; r++)
;;;412    						{
;;;413    							for(c=0; c<lptModuleCommonConf->ucScreenCol_; c++)
;;;414    							{
;;;415    								HAL_WRITE_ABS_IMAGE(r, c, 0);
;;;416    								HAL_WRITE_JITTER_IMAGE(r, c, 0);
;;;417    							}
;;;418    						}
;;;419    
;;;420    						for(i=0; i<lptAlgorithmConf->BaseLine.ucDiscardFrameNum; i++)
;;;421    						{
;;;422    							module_wait_full_sample_done();
;;;423    #if LGD_ERROR_FRAME_PROCESS_EN
;;;424    							if(LGD_error_frame_process())
;;;425    							{
;;;426    								for(i=0; i<15/*lptAlgorithmConf->BaseLine.ucDiscardFrameNum*/; i++)
;;;427    								{
;;;428    									module_wait_full_sample_done();
;;;429    								}	
;;;430    							}
;;;431    #endif
;;;432    						}
;;;433    
;;;434    						// Jitter
;;;435    						ulFrame1Count = protocol_swip_GetJitterAVGCount();
;;;436    						if(ulFrame1Count == 0)
;;;437    						{
;;;438    							ulFrame1Count = 60;     // Default value
;;;439    						}
;;;440    						
;;;441    						for(FrameCnt = 0; FrameCnt < ulFrame1Count;)
;;;442    						{
;;;443    							module_wait_full_sample_done();
;;;444    #if LGD_ERROR_FRAME_PROCESS_EN
;;;445    							if(LGD_error_frame_process() == NO)
;;;446    #else
;;;447    							if (1)//(LGD_error_frame_process() == NO)
;;;448    #endif
;;;449    							{		
;;;450    								FrameCnt++;
;;;451    								if(FrameCnt == 1)
;;;452    								{
;;;453    									for(r = lptModuleCommonConf->ucScreenRow_; r--; )
;;;454    									{
;;;455    										for(c = lptModuleCommonConf->ucScreenCol_; c--; )
;;;456    										{
;;;457    											HAL_WRITE_ABS_IMAGE(r, c, HAL_READ_RAW_IMAGE(r, c));
;;;458    										}
;;;459    									}
;;;460    								}
;;;461    								else
;;;462    								{
;;;463    									for(r = lptModuleCommonConf->ucScreenRow_; r--; )
;;;464    									{
;;;465    										for(c = lptModuleCommonConf->ucScreenCol_; c--; )
;;;466    										{
;;;467    											HAL_WRITE_ABS_IMAGE(r, c, (HAL_READ_RAW_IMAGE(r, c) + HAL_READ_ABS_IMAGE(r, c))/2);
;;;468    										}
;;;469    									}
;;;470    								}
;;;471    							}
;;;472    						}
;;;473    
;;;474    						ulFrame2Count = protocol_swip_GetJitterMAXCount();
;;;475    						
;;;476    //						const tSWIPTestDataFmt_t * tTestDataFmt = &(tSWIPTestDataFmt_t)
;;;477    //						{
;;;478    //							.bIsRotated = NO,
;;;479    //							.ucCol_ = lptModuleCommonConf->ucScreenCol_,
;;;480    //							.ucRow_ = lptModuleCommonConf->ucScreenRow_,
;;;481    //							.ucBufferCol_ = COL_MAX,
;;;482    //							.ucKey_ = 0,
;;;483    //							.tDataType = datatypeof(int16_t)
;;;484    //						};
;;;485    //						protocol_swip_PendTestResult( tTestDataFmt, (const void *)HAL_GET_ABS_IMAGE_PTR());
;;;486    						if(ulFrame2Count == 0)
;;;487    						{
;;;488    							ulFrame2Count = 200;     // Default value
;;;489    						}
;;;490    
;;;491    						for(FrameCnt = 0; FrameCnt < ulFrame2Count; i++)
;;;492    						{
;;;493    							module_wait_full_sample_done();
;;;494    #if LGD_ERROR_FRAME_PROCESS_EN
;;;495    							if(LGD_error_frame_process() == NO)
;;;496    #else
;;;497    							if (1)//(LGD_error_frame_process() == NO)
;;;498    #endif
;;;499    							{
;;;500    								FrameCnt++;
;;;501    								for(r=lptModuleCommonConf->ucScreenRow_; r--; )
;;;502    								{
;;;503    									for(c=lptModuleCommonConf->ucScreenCol_; c--; )
;;;504    									{
;;;505    										deltaData = HAL_READ_RAW_IMAGE(r, c) - HAL_READ_ABS_IMAGE(r, c);
;;;506    										if(deltaData < 0) deltaData = -deltaData;
;;;507    		
;;;508    										if(deltaData > (int)HAL_READ_JITTER_IMAGE(r, c))
;;;509    										{
;;;510    											HAL_WRITE_JITTER_IMAGE(r, c, deltaData);
;;;511    										}
;;;512    									}
;;;513    								}
;;;514    							}	
;;;515    						}
;;;516    
;;;517    						const tSWIPTestDataFmt_t * tTestDataFmt = &(tSWIPTestDataFmt_t)
;;;518    						{
;;;519    							.bIsRotated = NO,
;;;520    							.ucCol_ = lptModuleCommonConf->ucScreenCol_,
;;;521    							.ucRow_ = lptModuleCommonConf->ucScreenRow_,
;;;522    							.ucBufferCol_ = COL_MAX,
;;;523    							.ucKey_ = 0,
;;;524    							.tDataType = datatypeof(int16_t)
;;;525    						};
;;;526    
;;;527    //						[ROW_MAX + 2*PAD_][COL_MAX + 2*PAD_];
;;;528    //						memset((void *)HAL_GET_JITTER_IMAGE_PTR(), 0x00, sizeof(uint16_t)*((ROW_MAX)*(COL_MAX)));
;;;529    
;;;530    						protocol_swip_PendTestResult( tTestDataFmt, (const void *)HAL_GET_JITTER_IMAGE_PTR());
;;;531    						break;
;;;532    					}
;;;533    
;;;534    					case CTT_CRC_CHECK:
;;;535    					{
;;;536    						fullBuffer = (unsigned char *)BaseAddr;
;;;537    	#if defined(USE_BOOTLOADER_16KB)
;;;538    						fw_crc_value = Crc16WordCalc((const uint16_t*)&fullBuffer[0], FW_CRC_SIZE / 2, 0) | (Crc16WordCalc((const uint16_t*)&fullBuffer[2], FW_CRC_SIZE / 2, 0) << 16);
;;;539    	#else
;;;540    						fw_crc_value = Crc16WordCalc((const uint16_t*)&fullBuffer[0], FW_SIZE / 2 - 4, 0) | (Crc16WordCalc((const uint16_t*)&fullBuffer[2], FW_SIZE / 2 - 4, 0) << 16);
;;;541    	#endif
;;;542    						fw_crc_value = fw_crc_value ^ 0xFFFFFFFF;
;;;543    						const tSWIPTestDataFmt_t * tTestDataFmt = &(tSWIPTestDataFmt_t)
;;;544    						{
;;;545    							.bIsRotated = NO,
;;;546    							.ucCol_ = 1,
;;;547    							.ucRow_ = 1,
;;;548    							.ucBufferCol_ = 1,
;;;549    							.ucKey_ = 0,
;;;550    							.tDataType = datatypeof(uint32_t)
;;;551    						};
;;;552    						protocol_swip_PendTestResult( tTestDataFmt, (const void *)((uint32_t *)&fw_crc_value));
;;;553    						free((void *)fullBuffer);
;;;554    						break;
;;;555    					}
;;;556    
;;;557    					case CTT_EVENODD_SHORT:
;;;558    					{
;;;559    
;;;560    						for(r = 0; r < lptModuleCommonConf->ucScreenRow_; r++)
;;;561    						{
;;;562    							for(c = 0; c < lptModuleCommonConf->ucScreenCol_; c++)
;;;563    							{
;;;564    								HAL_WRITE_OS_IMAGE(r, c, 0);
;;;565    							}
;;;566    						}
;;;567    
;;;568    						for(i = 0; i < lptAlgorithmConf->BaseLine.ucDiscardFrameNum; i++)
;;;569    						{
;;;570    							module_wait_full_sample_done();
;;;571    						}
;;;572    
;;;573    #if (CUSTOMER == MODEL_LGD_SW92400)
;;;574    						for(i=0; i < 5; i++)
;;;575    						{
;;;576    							app_diag_OPENSHORT_Control(i);
;;;577    
;;;578    							module_wait_full_sample_done();
;;;579    
;;;580    							for(r = lptModuleCommonConf->ucScreenRow_; r--; )
;;;581    							{
;;;582    								if(r%5 == i)
;;;583    								{
;;;584    									for(c = lptModuleCommonConf->ucScreenCol_; c--; )
;;;585    									{
;;;586    										HAL_WRITE_OS_IMAGE(r, c, HAL_READ_RAW_IMAGE(r, c));
;;;587    									}
;;;588    								}
;;;589    							}
;;;590    						}
;;;591    #elif (CUSTOMER == MODEL_LGD_LX98405)
;;;592    
;;;593    						// Even Short...
;;;594    						app_diag_EvenOdd_SHORT_Control(0);
;;;595    
;;;596    						module_wait_full_sample_done();
;;;597    
;;;598    						for (r = lptModuleCommonConf->ucScreenRow_; r--; )
;;;599    						{
;;;600    							if ( (r%5 == 0) || (r%5 == 2) || (r%5 == 3) )
;;;601    							{
;;;602    								for(c = lptModuleCommonConf->ucScreenCol_; c--; )
;;;603    								{
;;;604    									if (c%2 == 1)
;;;605    										HAL_WRITE_OS_IMAGE(r, c, HAL_READ_RAW_IMAGE(r, c));
;;;606    								}
;;;607    							}
;;;608    							else if ( (r%5 == 1) || (r%5 == 4) )
;;;609    							{
;;;610    								for(c = lptModuleCommonConf->ucScreenCol_; c--; )
;;;611    								{
;;;612    									if (c%2 == 0)
;;;613    										HAL_WRITE_OS_IMAGE(r, c, HAL_READ_RAW_IMAGE(r, c));
;;;614    								}
;;;615    							}
;;;616    						}
;;;617    
;;;618    						// Odd Short...
;;;619    						app_diag_EvenOdd_SHORT_Control(1);
;;;620    
;;;621    						module_wait_full_sample_done();
;;;622    
;;;623    						for (r = lptModuleCommonConf->ucScreenRow_; r--; )
;;;624    						{
;;;625    							if ( (r%5 == 0) || (r%5 == 2) || (r%5 == 3) )
;;;626    							{
;;;627    								for(c = lptModuleCommonConf->ucScreenCol_; c--; )
;;;628    								{
;;;629    									if (c%2 == 0)
;;;630    										HAL_WRITE_OS_IMAGE(r, c, HAL_READ_RAW_IMAGE(r, c));
;;;631    								}
;;;632    							}
;;;633    							else if ( (r%5 == 1) || (r%5 == 4) )
;;;634    							{
;;;635    								for(c = lptModuleCommonConf->ucScreenCol_; c--; )
;;;636    								{
;;;637    									if (c%2 == 1)
;;;638    										HAL_WRITE_OS_IMAGE(r, c, HAL_READ_RAW_IMAGE(r, c));
;;;639    								}
;;;640    							}
;;;641    
;;;642    						}
;;;643    
;;;644    
;;;645    //						app_diag_LX98405_Reg_Restore_Setting();
;;;646    						
;;;647    #else /* if(CUSTOMER == MODEL_LGD_SW97400B || CUSTOMER == MODEL_LGD_LX98405) */
;;;648    						app_diag_OPENSHORT_Control(0);
;;;649    
;;;650    						module_wait_full_sample_done();
;;;651    
;;;652    						for(r = lptModuleCommonConf->ucScreenRow_; r--; )
;;;653    						{
;;;654    							for(c = lptModuleCommonConf->ucScreenCol_; c--; )
;;;655    							{
;;;656    								HAL_WRITE_OS_IMAGE(r, c, HAL_READ_RAW_IMAGE(r, c));
;;;657    							}
;;;658    						}
;;;659    #endif /* (CUSTOMER == MODEL_LGD_SW92400) */
;;;660    
;;;661    						const tSWIPTestDataFmt_t * tTestDataFmt = &(tSWIPTestDataFmt_t)
;;;662    						{
;;;663    							.bIsRotated = NO,
;;;664    							.ucCol_ = lptModuleCommonConf->ucScreenCol_,
;;;665    							.ucRow_ = lptModuleCommonConf->ucScreenRow_,
;;;666    							.ucBufferCol_ = COL_MAX,
;;;667    							.ucKey_ = 0,
;;;668    							.tDataType = datatypeof(uint16_t)
;;;669    						};
;;;670    
;;;671    						protocol_swip_PendTestResult(tTestDataFmt, (const void *)HAL_GET_OS_IMAGE_PTR());
;;;672    
;;;673    						app_diag_LX98405_Reg_Restore_Setting(1);
;;;674    
;;;675    						break;
;;;676    					}
;;;677    
;;;678    					case CTT_OPEN_SHORT:
;;;679    					{
;;;680    
;;;681    						for(r = 0; r < lptModuleCommonConf->ucScreenRow_; r++)
;;;682    						{
;;;683    							for(c = 0; c < lptModuleCommonConf->ucScreenCol_; c++)
;;;684    							{
;;;685    								HAL_WRITE_OS_IMAGE(r, c, 0);
;;;686    							}
;;;687    						}
;;;688    
;;;689    						for(i = 0; i < lptAlgorithmConf->BaseLine.ucDiscardFrameNum; i++)
;;;690    						{
;;;691    							module_wait_full_sample_done();
;;;692    						}
;;;693    
;;;694    						for (i=0; i<5; i++)
;;;695    						{
;;;696    							app_diag_OPENSHORT_Control(i);
;;;697    
;;;698    							module_wait_full_sample_done();
;;;699    
;;;700    							for (r = lptModuleCommonConf->ucScreenRow_; r--; )
;;;701    							{
;;;702    								if (i == 0)
;;;703    								{
;;;704    									if (r%5 == 2)
;;;705    									{
;;;706    										for(c = lptModuleCommonConf->ucScreenCol_; c--; )
;;;707    										{
;;;708    											HAL_WRITE_OS_IMAGE(r, c, HAL_READ_RAW_IMAGE(r, c));
;;;709    										}
;;;710    									}
;;;711    								}
;;;712    								else if (i == 1)
;;;713    								{
;;;714    									if (r%5 == 1)
;;;715    									{
;;;716    										for(c = lptModuleCommonConf->ucScreenCol_; c--; )
;;;717    										{
;;;718    											HAL_WRITE_OS_IMAGE(r, c, HAL_READ_RAW_IMAGE(r, c));
;;;719    										}
;;;720    									}
;;;721    								}
;;;722    								else if (i == 2)
;;;723    								{
;;;724    									if (r%5 == 0)
;;;725    									{
;;;726    										for(c = lptModuleCommonConf->ucScreenCol_; c--; )
;;;727    										{
;;;728    											HAL_WRITE_OS_IMAGE(r, c, HAL_READ_RAW_IMAGE(r, c));
;;;729    										}
;;;730    									}
;;;731    								}
;;;732    								else if (i == 3)
;;;733    								{
;;;734    									if (r%5 == 4)
;;;735    									{
;;;736    										for(c = lptModuleCommonConf->ucScreenCol_; c--; )
;;;737    										{
;;;738    											HAL_WRITE_OS_IMAGE(r, c, HAL_READ_RAW_IMAGE(r, c));
;;;739    										}
;;;740    									}
;;;741    								}
;;;742    								else if (i == 4)
;;;743    								{
;;;744    									if (r%5 == 3)
;;;745    									{
;;;746    										for(c = lptModuleCommonConf->ucScreenCol_; c--; )
;;;747    										{
;;;748    											HAL_WRITE_OS_IMAGE(r, c, HAL_READ_RAW_IMAGE(r, c));
;;;749    										}
;;;750    									}
;;;751    								}
;;;752    
;;;753    							}
;;;754    
;;;755    						}
;;;756    
;;;757    						const tSWIPTestDataFmt_t * tTestDataFmt = &(tSWIPTestDataFmt_t)
;;;758    						{
;;;759    							.bIsRotated = NO,
;;;760    							.ucCol_ = lptModuleCommonConf->ucScreenCol_,
;;;761    							.ucRow_ = lptModuleCommonConf->ucScreenRow_,
;;;762    							.ucBufferCol_ = COL_MAX,
;;;763    							.ucKey_ = 0,
;;;764    							.tDataType = datatypeof(uint16_t)
;;;765    						};
;;;766    
;;;767    						protocol_swip_PendTestResult(tTestDataFmt, (const void *)HAL_GET_OS_IMAGE_PTR());
;;;768    
;;;769    						app_diag_LX98405_Reg_Restore_Setting(2);
;;;770    
;;;771    						break;
;;;772    					}
;;;773    				} /* switch(protocol_swip_GetTestType()) */
;;;774    
;;;775    				module_Stop();
;;;776    //				test_state = CTT_NONE; // NOTE : not used!!
;;;777    
;;;778    				break;
;;;779    			}
;;;780    
;;;781    			case TOUCH_DIAG_OPER_EXIT:
;;;782    			{
;;;783    				protocol_swip_PendReadyStatus();
;;;784    
;;;785    				bLoop = NO;
;;;786    				continue;
;;;787    				/* no break */
;;;788    			}
;;;789        	}
;;;790    
;;;791        	switch( protocol_swip_GetMode() )
;;;792        	{
;;;793    			case M_TOUCH_NORMAL:
;;;794    			{
;;;795    				sub_state = TOUCH_DIAG_OPER_EXIT;
;;;796    				main_state = TOUCH_MAIN_OPERATION_NORMAL;
;;;797    				break;
;;;798    			}
;;;799        	}
;;;800        }
;;;801    
;;;802        return main_state; // NOTE : �ʱⰪ�� ������.. swip Mode�� M_TOUCH_NORMAL�� �ƴ� ���� ������ Check�ʿ�!!
;;;803    }
000094  f0120f01          TST      r2,#1
000098  bf18              IT       NE                    ;272
00009a  f8201f02          STRHNE   r1,[r0,#2]!           ;272
00009e  7922              LDRB     r2,[r4,#4]            ;270
0000a0  0852              LSRS     r2,r2,#1              ;270
0000a2  d004              BEQ      |L2.174|
                  |L2.164|
0000a4  8041              STRH     r1,[r0,#2]            ;272
0000a6  f8201f04          STRH     r1,[r0,#4]!           ;272
0000aa  1e52              SUBS     r2,r2,#1              ;272
0000ac  d1fa              BNE      |L2.164|
                  |L2.174|
0000ae  1c58              ADDS     r0,r3,#1              ;272
0000b0  b2c3              UXTB     r3,r0                 ;272
0000b2  7960              LDRB     r0,[r4,#5]            ;272
0000b4  4298              CMP      r0,r3                 ;272
0000b6  d8e6              BHI      |L2.134|
                  |L2.184|
0000b8  78a8              LDRB     r0,[r5,#2]            ;276
0000ba  2600              MOVS     r6,#0                 ;276
0000bc  2800              CMP      r0,#0                 ;276
0000be  dd05              BLE      |L2.204|
                  |L2.192|
0000c0  f7fffffe          BL       module_wait_full_sample_done
0000c4  78a8              LDRB     r0,[r5,#2]            ;278
0000c6  1c76              ADDS     r6,r6,#1              ;278
0000c8  42b0              CMP      r0,r6                 ;278
0000ca  dcf9              BGT      |L2.192|
                  |L2.204|
0000cc  4dce              LDR      r5,|L2.1032|
0000ce  200a              MOVS     r0,#0xa               ;285
0000d0  6128              STR      r0,[r5,#0x10]         ;285  ; ulFrame1Count
0000d2  6928              LDR      r0,[r5,#0x10]         ;288  ; ulFrame1Count
0000d4  2700              MOVS     r7,#0                 ;288
0000d6  4287              CMP      r7,r0                 ;288
0000d8  bf38              IT       CC                    ;270
0000da  4ece              LDRCC    r6,|L2.1044|
0000dc  d265              BCS      |L2.426|
0000de  bf00              NOP                            ;290
                  |L2.224|
0000e0  f7fffffe          BL       module_wait_full_sample_done
0000e4  7960              LDRB     r0,[r4,#5]            ;292
0000e6  1e41              SUBS     r1,r0,#1              ;292
0000e8  f0010cff          AND      r12,r1,#0xff          ;292
0000ec  d359              BCC      |L2.418|
                  |L2.238|
0000ee  7921              LDRB     r1,[r4,#4]            ;294
0000f0  0008              MOVS     r0,r1                 ;294
0000f2  d051              BEQ      |L2.408|
0000f4  f0110201          ANDS     r2,r1,#1              ;297
0000f8  d018              BEQ      |L2.300|
0000fa  1e40              SUBS     r0,r0,#1              ;297
0000fc  eb0c034c          ADD      r3,r12,r12,LSL #1     ;296
000100  b2c0              UXTB     r0,r0                 ;294
000102  eb061383          ADD      r3,r6,r3,LSL #6       ;296
000106  eb030840          ADD      r8,r3,r0,LSL #1       ;296
00010a  f5083880          ADD      r8,r8,#0x10000        ;296
00010e  f8d59010          LDR      r9,[r5,#0x10]         ;296  ; ulFrame1Count
000112  f8b88294          LDRH     r8,[r8,#0x294]        ;296
000116  eb080859          ADD      r8,r8,r9,LSR #1       ;296
00011a  f8d59010          LDR      r9,[r5,#0x10]         ;296  ; ulFrame1Count
00011e  fbb8f8f9          UDIV     r8,r8,r9              ;296
000122  f8339010          LDRH     r9,[r3,r0,LSL #1]     ;296
000126  44c8              ADD      r8,r8,r9              ;296
000128  f8238010          STRH     r8,[r3,r0,LSL #1]     ;296
                  |L2.300|
00012c  1c4b              ADDS     r3,r1,#1              ;294
00012e  1c52              ADDS     r2,r2,#1              ;294
000130  429a              CMP      r2,r3                 ;294
000132  bfbc              ITT      LT                    ;270
000134  eb0c014c          ADDLT    r1,r12,r12,LSL #1     ;270
000138  eb061181          ADDLT    r1,r6,r1,LSL #6       ;270
00013c  da2c              BGE      |L2.408|
                  |L2.318|
00013e  1e40              SUBS     r0,r0,#1              ;294
000140  b2c0              UXTB     r0,r0                 ;294
000142  eb010840          ADD      r8,r1,r0,LSL #1       ;296
000146  f5083880          ADD      r8,r8,#0x10000        ;296
00014a  f8d59010          LDR      r9,[r5,#0x10]         ;296  ; ulFrame1Count
00014e  f8b88294          LDRH     r8,[r8,#0x294]        ;296
000152  eb080859          ADD      r8,r8,r9,LSR #1       ;296
000156  f8d59010          LDR      r9,[r5,#0x10]         ;296  ; ulFrame1Count
00015a  fbb8f8f9          UDIV     r8,r8,r9              ;296
00015e  f8319010          LDRH     r9,[r1,r0,LSL #1]     ;296
000162  44c8              ADD      r8,r8,r9              ;296
000164  f8218010          STRH     r8,[r1,r0,LSL #1]     ;296
000168  1e40              SUBS     r0,r0,#1              ;296
00016a  b2c0              UXTB     r0,r0                 ;294
00016c  eb010840          ADD      r8,r1,r0,LSL #1       ;296
000170  f5083880          ADD      r8,r8,#0x10000        ;296
000174  f8d59010          LDR      r9,[r5,#0x10]         ;296  ; ulFrame1Count
000178  f8b88294          LDRH     r8,[r8,#0x294]        ;296
00017c  eb080859          ADD      r8,r8,r9,LSR #1       ;296
000180  f8d59010          LDR      r9,[r5,#0x10]         ;296  ; ulFrame1Count
000184  1c92              ADDS     r2,r2,#2              ;296
000186  fbb8f8f9          UDIV     r8,r8,r9              ;296
00018a  f8319010          LDRH     r9,[r1,r0,LSL #1]     ;296
00018e  429a              CMP      r2,r3                 ;296
000190  44c8              ADD      r8,r8,r9              ;296
000192  f8218010          STRH     r8,[r1,r0,LSL #1]     ;296
000196  dbd2              BLT      |L2.318|
                  |L2.408|
000198  f1bc0101          SUBS     r1,r12,#1             ;294
00019c  f0010cff          AND      r12,r1,#0xff          ;294
0001a0  d2a5              BCS      |L2.238|
                  |L2.418|
0001a2  6928              LDR      r0,[r5,#0x10]         ;294  ; ulFrame1Count
0001a4  1c7f              ADDS     r7,r7,#1              ;294
0001a6  4287              CMP      r7,r0                 ;294
0001a8  d39a              BCC      |L2.224|
                  |L2.426|
0001aa  489b              LDR      r0,|L2.1048|
0001ac  e9d01000          LDRD     r1,r0,[r0,#0]         ;301
0001b0  e9cd100b          STRD     r1,r0,[sp,#0x2c]      ;301
0001b4  7960              LDRB     r0,[r4,#5]            ;301
0001b6  f88d002c          STRB     r0,[sp,#0x2c]         ;301
0001ba  7920              LDRB     r0,[r4,#4]            ;301
0001bc  f88d002d          STRB     r0,[sp,#0x2d]         ;301
0001c0  a80b              ADD      r0,sp,#0x2c           ;301
0001c2  4994              LDR      r1,|L2.1044|
0001c4  f000b8f8          B.W      |L2.952|
0001c8  7960              LDRB     r0,[r4,#5]            ;411
0001ca  f04f0c00          MOV      r12,#0                ;411
0001ce  2800              CMP      r0,#0                 ;411
0001d0  d924              BLS      |L2.540|
0001d2  4e90              LDR      r6,|L2.1044|
0001d4  f64b078e          MOV      r7,#0xb88e            ;413
0001d8  2300              MOVS     r3,#0                 ;413
                  |L2.474|
0001da  7922              LDRB     r2,[r4,#4]            ;413
0001dc  b1ba              CBZ      r2,|L2.526|
0001de  eb0c004c          ADD      r0,r12,r12,LSL #1     ;413
0001e2  eb061080          ADD      r0,r6,r0,LSL #6       ;413
0001e6  1e81              SUBS     r1,r0,#2              ;413
0001e8  4438              ADD      r0,r0,r7              ;413
0001ea  f0120f01          TST      r2,#1
0001ee  d003              BEQ      |L2.504|
0001f0  f8213f02          STRH     r3,[r1,#2]!           ;415
0001f4  f8203f02          STRH     r3,[r0,#2]!           ;416
                  |L2.504|
0001f8  7922              LDRB     r2,[r4,#4]            ;413
0001fa  0852              LSRS     r2,r2,#1              ;413
0001fc  d007              BEQ      |L2.526|
                  |L2.510|
0001fe  804b              STRH     r3,[r1,#2]            ;415
000200  8043              STRH     r3,[r0,#2]            ;416
000202  f8213f04          STRH     r3,[r1,#4]!           ;415
000206  f8203f04          STRH     r3,[r0,#4]!           ;416
00020a  1e52              SUBS     r2,r2,#1              ;416
00020c  d1f7              BNE      |L2.510|
                  |L2.526|
00020e  f10c0001          ADD      r0,r12,#1             ;416
000212  f0000cff          AND      r12,r0,#0xff          ;416
000216  7960              LDRB     r0,[r4,#5]            ;416
000218  4560              CMP      r0,r12                ;416
00021a  d8de              BHI      |L2.474|
                  |L2.540|
00021c  78a8              LDRB     r0,[r5,#2]            ;420
00021e  2600              MOVS     r6,#0                 ;420
000220  2800              CMP      r0,#0                 ;420
000222  dd05              BLE      |L2.560|
                  |L2.548|
000224  f7fffffe          BL       module_wait_full_sample_done
000228  78a8              LDRB     r0,[r5,#2]            ;422
00022a  1c76              ADDS     r6,r6,#1              ;422
00022c  42b0              CMP      r0,r6                 ;422
00022e  dcf9              BGT      |L2.548|
                  |L2.560|
000230  f7fffffe          BL       protocol_swip_GetJitterAVGCount
000234  4e74              LDR      r6,|L2.1032|
000236  6130              STR      r0,[r6,#0x10]         ;435  ; ulFrame1Count
000238  6930              LDR      r0,[r6,#0x10]         ;436  ; ulFrame1Count
00023a  2800              CMP      r0,#0                 ;436
00023c  bf04              ITT      EQ                    ;438
00023e  203c              MOVEQ    r0,#0x3c              ;438
000240  6130              STREQ    r0,[r6,#0x10]         ;438  ; ulFrame1Count
000242  2000              MOVS     r0,#0                 ;441
000244  6931              LDR      r1,[r6,#0x10]         ;441  ; ulFrame1Count
000246  4288              CMP      r0,r1                 ;441
000248  d268              BCS      |L2.796|
00024a  f7fffffe          BL       module_wait_full_sample_done
00024e  4f71              LDR      r7,|L2.1044|
000250  2501              MOVS     r5,#1                 ;450
                  |L2.594|
000252  7960              LDRB     r0,[r4,#5]            ;453
000254  1e41              SUBS     r1,r0,#1              ;453
000256  b2cb              UXTB     r3,r1                 ;453
000258  d35d              BCC      |L2.790|
                  |L2.602|
00025a  7922              LDRB     r2,[r4,#4]            ;455
00025c  b1e2              CBZ      r2,|L2.664|
00025e  eb030043          ADD      r0,r3,r3,LSL #1       ;455
000262  eb071180          ADD      r1,r7,r0,LSL #6       ;455
000266  eb010042          ADD      r0,r1,r2,LSL #1       ;455
00026a  f5003180          ADD      r1,r0,#0x10000        ;455
00026e  f5017125          ADD      r1,r1,#0x294          ;455
000272  f0120f01          TST      r2,#1
000276  d003              BEQ      |L2.640|
000278  f831cd02          LDRH     r12,[r1,#-2]!         ;457
00027c  f820cd02          STRH     r12,[r0,#-2]!         ;457
                  |L2.640|
000280  0852              LSRS     r2,r2,#1              ;455
000282  d009              BEQ      |L2.664|
                  |L2.644|
000284  f831cc02          LDRH     r12,[r1,#-2]          ;457
000288  f820cc02          STRH     r12,[r0,#-2]          ;457
00028c  f831cd04          LDRH     r12,[r1,#-4]!         ;457
000290  f820cd04          STRH     r12,[r0,#-4]!         ;457
000294  1e52              SUBS     r2,r2,#1              ;457
000296  d1f5              BNE      |L2.644|
                  |L2.664|
000298  1e59              SUBS     r1,r3,#1              ;455
00029a  b2cb              UXTB     r3,r1                 ;455
00029c  d2dd              BCS      |L2.602|
00029e  e03a              B        |L2.790|
                  |L2.672|
0002a0  f7fffffe          BL       module_wait_full_sample_done
0002a4  1c6d              ADDS     r5,r5,#1              ;443
0002a6  2d01              CMP      r5,#1                 ;451
0002a8  d0d3              BEQ      |L2.594|
0002aa  7960              LDRB     r0,[r4,#5]            ;463
0002ac  1e41              SUBS     r1,r0,#1              ;463
0002ae  b2cb              UXTB     r3,r1                 ;463
0002b0  d331              BCC      |L2.790|
                  |L2.690|
0002b2  7922              LDRB     r2,[r4,#4]            ;465
0002b4  b362              CBZ      r2,|L2.784|
0002b6  eb030043          ADD      r0,r3,r3,LSL #1       ;465
0002ba  eb071080          ADD      r0,r7,r0,LSL #6       ;465
0002be  eb000042          ADD      r0,r0,r2,LSL #1       ;465
0002c2  f5003180          ADD      r1,r0,#0x10000        ;465
0002c6  f5017125          ADD      r1,r1,#0x294          ;465
0002ca  f0120f01          TST      r2,#1
0002ce  d008              BEQ      |L2.738|
0002d0  f831cd02          LDRH     r12,[r1,#-2]!         ;467
0002d4  f8308d02          LDRH     r8,[r0,#-2]!          ;467
0002d8  44c4              ADD      r12,r12,r8            ;467
0002da  ea4f0c5c          LSR      r12,r12,#1            ;467
0002de  f8a0c000          STRH     r12,[r0,#0]           ;467
                  |L2.738|
0002e2  0852              LSRS     r2,r2,#1              ;465
0002e4  d014              BEQ      |L2.784|
0002e6  bf00              NOP                            ;467
                  |L2.744|
0002e8  f831cc02          LDRH     r12,[r1,#-2]          ;467
0002ec  f8308d02          LDRH     r8,[r0,#-2]!          ;467
0002f0  1e52              SUBS     r2,r2,#1              ;467
0002f2  44c4              ADD      r12,r12,r8            ;467
0002f4  ea4f0c5c          LSR      r12,r12,#1            ;467
0002f8  f820c902          STRH     r12,[r0],#-2          ;467
0002fc  f831cd04          LDRH     r12,[r1,#-4]!         ;467
000300  f8b08000          LDRH     r8,[r0,#0]            ;467
000304  44c4              ADD      r12,r12,r8            ;467
000306  ea4f0c5c          LSR      r12,r12,#1            ;467
00030a  f8a0c000          STRH     r12,[r0,#0]           ;467
00030e  d1eb              BNE      |L2.744|
                  |L2.784|
000310  1e59              SUBS     r1,r3,#1              ;465
000312  b2cb              UXTB     r3,r1                 ;465
000314  d2cd              BCS      |L2.690|
                  |L2.790|
000316  6930              LDR      r0,[r6,#0x10]         ;465  ; ulFrame1Count
000318  4285              CMP      r5,r0                 ;465
00031a  d3c1              BCC      |L2.672|
                  |L2.796|
00031c  f7fffffe          BL       protocol_swip_GetJitterMAXCount
000320  6170              STR      r0,[r6,#0x14]         ;474  ; ulFrame2Count
000322  6970              LDR      r0,[r6,#0x14]         ;486  ; ulFrame2Count
000324  2800              CMP      r0,#0                 ;486
000326  bf04              ITT      EQ                    ;488
000328  20c8              MOVEQ    r0,#0xc8              ;488
00032a  6170              STREQ    r0,[r6,#0x14]         ;488  ; ulFrame2Count
00032c  2500              MOVS     r5,#0                 ;491
00032e  6970              LDR      r0,[r6,#0x14]         ;491  ; ulFrame2Count
000330  4285              CMP      r5,r0                 ;491
000332  bf3c              ITT      CC                    ;413
000334  f64b088e          MOVCC    r8,#0xb88e            ;413
000338  4f36              LDRCC    r7,|L2.1044|
00033a  d230              BCS      |L2.926|
                  |L2.828|
00033c  f7fffffe          BL       module_wait_full_sample_done
000340  7960              LDRB     r0,[r4,#5]            ;501
000342  f1050501          ADD      r5,r5,#1              ;501
000346  1e41              SUBS     r1,r0,#1              ;501
000348  f0010aff          AND      r10,r1,#0xff          ;501
00034c  d324              BCC      |L2.920|
                  |L2.846|
00034e  7920              LDRB     r0,[r4,#4]            ;503
000350  b1e8              CBZ      r0,|L2.910|
000352  eb0a014a          ADD      r1,r10,r10,LSL #1     ;503
000356  eb071281          ADD      r2,r7,r1,LSL #6       ;503
00035a  eb020140          ADD      r1,r2,r0,LSL #1       ;503
00035e  f5013c81          ADD      r12,r1,#0x10200       ;503
000362  f10c0c92          ADD      r12,r12,#0x92         ;503
000366  1e8b              SUBS     r3,r1,#2              ;503
000368  eb010208          ADD      r2,r1,r8              ;503
                  |L2.876|
00036c  f83c1902          LDRH     r1,[r12],#-2          ;505
000370  f8339902          LDRH     r9,[r3],#-2           ;505
000374  ebb10109          SUBS     r1,r1,r9              ;505
000378  bf48              IT       MI                    ;506
00037a  4249              RSBMI    r1,r1,#0              ;506
00037c  f9b29000          LDRSH    r9,[r2,#0]            ;508
000380  4589              CMP      r9,r1                 ;508
000382  bfb8              IT       LT                    ;510
000384  8011              STRHLT   r1,[r2,#0]            ;510
000386  1e40              SUBS     r0,r0,#1              ;510
000388  f1a20202          SUB      r2,r2,#2              ;510
00038c  d1ee              BNE      |L2.876|
                  |L2.910|
00038e  f1ba0101          SUBS     r1,r10,#1             ;503
000392  f0010aff          AND      r10,r1,#0xff          ;503
000396  d2da              BCS      |L2.846|
                  |L2.920|
000398  6970              LDR      r0,[r6,#0x14]         ;503  ; ulFrame2Count
00039a  4285              CMP      r5,r0                 ;503
00039c  d3ce              BCC      |L2.828|
                  |L2.926|
00039e  481e              LDR      r0,|L2.1048|
0003a0  e9d01002          LDRD     r1,r0,[r0,#8]         ;517
0003a4  e9cd100b          STRD     r1,r0,[sp,#0x2c]      ;517
0003a8  7960              LDRB     r0,[r4,#5]            ;517
0003aa  f88d002c          STRB     r0,[sp,#0x2c]         ;517
0003ae  7920              LDRB     r0,[r4,#4]            ;517
0003b0  f88d002d          STRB     r0,[sp,#0x2d]         ;517
0003b4  a80b              ADD      r0,sp,#0x2c           ;517
0003b6  9906              LDR      r1,[sp,#0x18]         ;517
                  |L2.952|
0003b8  f7fffffe          BL       protocol_swip_PendTestResult
0003bc  f000bb3a          B.W      |L2.2612|
0003c0  4c11              LDR      r4,|L2.1032|
0003c2  6820              LDR      r0,[r4,#0]            ;536  ; BaseAddr
0003c4  2200              MOVS     r2,#0                 ;538
0003c6  f44f4158          MOV      r1,#0xd800            ;538
0003ca  60a0              STR      r0,[r4,#8]            ;538  ; fullBuffer
0003cc  f7fffffe          BL       Crc16WordCalc
0003d0  4605              MOV      r5,r0                 ;538
0003d2  68a0              LDR      r0,[r4,#8]            ;538  ; fullBuffer
0003d4  2200              MOVS     r2,#0                 ;538
0003d6  f44f4158          MOV      r1,#0xd800            ;538
0003da  1c80              ADDS     r0,r0,#2              ;538
0003dc  f7fffffe          BL       Crc16WordCalc
0003e0  ea454000          ORR      r0,r5,r0,LSL #16      ;538
0003e4  60e0              STR      r0,[r4,#0xc]          ;538  ; fw_crc_value
0003e6  68e0              LDR      r0,[r4,#0xc]          ;542  ; fw_crc_value
0003e8  43c0              MVNS     r0,r0                 ;542
0003ea  60e0              STR      r0,[r4,#0xc]          ;542  ; fw_crc_value
0003ec  480a              LDR      r0,|L2.1048|
0003ee  e9d01004          LDRD     r1,r0,[r0,#0x10]      ;543
0003f2  e9cd1000          STRD     r1,r0,[sp,#0]         ;543
0003f6  4668              MOV      r0,sp                 ;543
0003f8  f104010c          ADD      r1,r4,#0xc            ;552
0003fc  f7fffffe          BL       protocol_swip_PendTestResult
000400  68a0              LDR      r0,[r4,#8]            ;553  ; fullBuffer
000402  f7fffffe          BL       free
000406  e009              B        |L2.1052|
                  |L2.1032|
                          DCD      ||.data||
                  |L2.1036|
                          DCD      0x40005000
                  |L2.1040|
                          DCD      FullSharedBuff+0xb890
                  |L2.1044|
                          DCD      FullSharedBuff
                  |L2.1048|
                          DCD      ||.constdata||
                  |L2.1052|
00041c  f000bb0a          B.W      |L2.2612|
000420  7960              LDRB     r0,[r4,#5]            ;560
000422  2300              MOVS     r3,#0                 ;560
000424  2800              CMP      r0,#0                 ;560
000426  bf84              ITT      HI                    ;560
000428  2200              MOVHI    r2,#0                 ;560
00042a  f8dfc434          LDRHI    r12,|L2.2144|
00042e  d918              BLS      |L2.1122|
                  |L2.1072|
000430  7920              LDRB     r0,[r4,#4]            ;562
000432  b188              CBZ      r0,|L2.1112|
000434  eb030143          ADD      r1,r3,r3,LSL #1       ;562
000438  eb0c1181          ADD      r1,r12,r1,LSL #6      ;562
00043c  1e89              SUBS     r1,r1,#2              ;562
00043e  f0100f01          TST      r0,#1
000442  bf18              IT       NE                    ;564
000444  f8212f02          STRHNE   r2,[r1,#2]!           ;564
000448  7920              LDRB     r0,[r4,#4]            ;562
00044a  0840              LSRS     r0,r0,#1              ;562
00044c  d004              BEQ      |L2.1112|
                  |L2.1102|
00044e  804a              STRH     r2,[r1,#2]            ;564
000450  f8212f04          STRH     r2,[r1,#4]!           ;564
000454  1e40              SUBS     r0,r0,#1              ;564
000456  d1fa              BNE      |L2.1102|
                  |L2.1112|
000458  1c58              ADDS     r0,r3,#1              ;564
00045a  b2c3              UXTB     r3,r0                 ;564
00045c  7960              LDRB     r0,[r4,#5]            ;564
00045e  4298              CMP      r0,r3                 ;564
000460  d8e6              BHI      |L2.1072|
                  |L2.1122|
000462  78a8              LDRB     r0,[r5,#2]            ;568
000464  2600              MOVS     r6,#0                 ;568
000466  2800              CMP      r0,#0                 ;568
000468  dd06              BLE      |L2.1144|
00046a  bf00              NOP                            ;570
                  |L2.1132|
00046c  f7fffffe          BL       module_wait_full_sample_done
000470  78a8              LDRB     r0,[r5,#2]            ;570
000472  1c76              ADDS     r6,r6,#1              ;570
000474  42b0              CMP      r0,r6                 ;570
000476  dcf9              BGT      |L2.1132|
                  |L2.1144|
000478  4dfa              LDR      r5,|L2.2148|
00047a  2600              MOVS     r6,#0                 ;594
                  |L2.1148|
00047c  6828              LDR      r0,[r5,#0]            ;594
00047e  f0106f80          TST      r0,#0x4000000         ;594
000482  d1fb              BNE      |L2.1148|
                  |L2.1156|
000484  6828              LDR      r0,[r5,#0]            ;594
000486  f0106f80          TST      r0,#0x4000000         ;594
00048a  d0fb              BEQ      |L2.1156|
00048c  f7fffffe          BL       SRIC_Stop
000490  f7fffffe          BL       MSPI_Set_TLPMODE
                  |L2.1172|
000494  6828              LDR      r0,[r5,#0]            ;594
000496  f0106f00          TST      r0,#0x8000000         ;594
00049a  d0fb              BEQ      |L2.1172|
                  |L2.1180|
00049c  6828              LDR      r0,[r5,#0]            ;594
00049e  f0106f00          TST      r0,#0x8000000         ;594
0004a2  d1fb              BNE      |L2.1180|
0004a4  4630              MOV      r0,r6                 ;594
0004a6  f7fffffe          BL       LX98405_EvenOdd_Short_Setting
0004aa  f7fffffe          BL       LX98405_Short_Local_Global_Tune
0004ae  f7fffffe          BL       SRIC_Run
0004b2  f2410003          MOV      r0,#0x1003            ;594
0004b6  f7fffffe          BL       MSPI_Set_AITMODE
0004ba  263f              MOVS     r6,#0x3f              ;594
0004bc  f8cb60d4          STR      r6,[r11,#0xd4]        ;594
0004c0  f7fffffe          BL       module_wait_full_sample_done
0004c4  f7fffffe          BL       module_wait_full_sample_done
0004c8  7960              LDRB     r0,[r4,#5]            ;598
0004ca  1e41              SUBS     r1,r0,#1              ;598
0004cc  b2cb              UXTB     r3,r1                 ;598
0004ce  bf24              ITT      CS                    ;600
0004d0  f8df9394          LDRCS    r9,|L2.2152|
0004d4  f8df8388          LDRCS    r8,|L2.2144|
0004d8  d35a              BCC      |L2.1424|
0004da  bf00              NOP                            ;600
                  |L2.1244|
0004dc  fba91003          UMULL    r1,r0,r9,r3           ;600
0004e0  0880              LSRS     r0,r0,#2              ;600
0004e2  4240              RSBS     r0,r0,#0              ;600
0004e4  eb000080          ADD      r0,r0,r0,LSL #2       ;600
0004e8  18c0              ADDS     r0,r0,r3              ;600
0004ea  bf1c              ITT      NE                    ;600
0004ec  2802              CMPNE    r0,#2                 ;600
0004ee  2803              CMPNE    r0,#3                 ;600
0004f0  d004              BEQ      |L2.1276|
0004f2  2801              CMP      r0,#1                 ;608
0004f4  bf18              IT       NE                    ;608
0004f6  2804              CMPNE    r0,#4                 ;608
0004f8  d026              BEQ      |L2.1352|
0004fa  e046              B        |L2.1418|
                  |L2.1276|
0004fc  7927              LDRB     r7,[r4,#4]            ;602
0004fe  b317              CBZ      r7,|L2.1350|
000500  eb030043          ADD      r0,r3,r3,LSL #1       ;602
000504  eb081180          ADD      r1,r8,r0,LSL #6       ;602
000508  eb010047          ADD      r0,r1,r7,LSL #1       ;602
00050c  f5003281          ADD      r2,r0,#0x10200        ;602
000510  f1a00102          SUB      r1,r0,#2              ;602
000514  f1020292          ADD      r2,r2,#0x92           ;602
000518  f04f0000          MOV      r0,#0                 ;602
00051c  ea4f0c07          MOV.W    r12,r7                ;602
                  |L2.1312|
000520  eba70a00          SUB      r10,r7,r0             ;604
000524  f1aa0a01          SUB      r10,r10,#1            ;604
000528  f36f0a5e          BFC      r10,#1,#30            ;604
00052c  f1ba0f01          CMP      r10,#1                ;604
000530  bf04              ITT      EQ                    ;605
000532  f8b2a000          LDRHEQ   r10,[r2,#0]           ;605
000536  f8a1a000          STRHEQ   r10,[r1,#0]           ;605
00053a  1c40              ADDS     r0,r0,#1              ;605
00053c  1e89              SUBS     r1,r1,#2              ;605
00053e  1e92              SUBS     r2,r2,#2              ;605
000540  f1bc0c01          SUBS     r12,r12,#1            ;605
000544  d1ec              BNE      |L2.1312|
                  |L2.1350|
000546  e020              B        |L2.1418|
                  |L2.1352|
000548  7921              LDRB     r1,[r4,#4]            ;610
00054a  0008              MOVS     r0,r1                 ;610
00054c  d01d              BEQ      |L2.1418|
00054e  eb030243          ADD      r2,r3,r3,LSL #1       ;610
000552  eb081282          ADD      r2,r8,r2,LSL #6       ;610
000556  eb020241          ADD      r2,r2,r1,LSL #1       ;610
00055a  f5023781          ADD      r7,r2,#0x10200        ;610
00055e  3792              ADDS     r7,r7,#0x92           ;610
000560  f1a20c02          SUB      r12,r2,#2             ;610
000564  f05f0200          MOVS.W   r2,#0                 ;610
                  |L2.1384|
000568  eba10a02          SUB      r10,r1,r2             ;612
00056c  f01a0f01          TST      r10,#1                ;612
000570  bf1c              ITT      NE                    ;613
000572  f8b7a000          LDRHNE   r10,[r7,#0]           ;613
000576  f8aca000          STRHNE   r10,[r12,#0]          ;613
00057a  1e40              SUBS     r0,r0,#1              ;613
00057c  f1020201          ADD      r2,r2,#1              ;613
000580  f1a70702          SUB      r7,r7,#2              ;613
000584  f1ac0c02          SUB      r12,r12,#2            ;613
000588  d1ee              BNE      |L2.1384|
                  |L2.1418|
00058a  1e59              SUBS     r1,r3,#1              ;610
00058c  b2cb              UXTB     r3,r1                 ;610
00058e  d2a5              BCS      |L2.1244|
                  |L2.1424|
000590  2701              MOVS     r7,#1                 ;619
                  |L2.1426|
000592  6828              LDR      r0,[r5,#0]            ;619
000594  f0106f80          TST      r0,#0x4000000         ;619
000598  d1fb              BNE      |L2.1426|
                  |L2.1434|
00059a  6828              LDR      r0,[r5,#0]            ;619
00059c  f0106f80          TST      r0,#0x4000000         ;619
0005a0  d0fb              BEQ      |L2.1434|
0005a2  f7fffffe          BL       SRIC_Stop
0005a6  f7fffffe          BL       MSPI_Set_TLPMODE
                  |L2.1450|
0005aa  6828              LDR      r0,[r5,#0]            ;619
0005ac  f0106f00          TST      r0,#0x8000000         ;619
0005b0  d0fb              BEQ      |L2.1450|
                  |L2.1458|
0005b2  6828              LDR      r0,[r5,#0]            ;619
0005b4  f0106f00          TST      r0,#0x8000000         ;619
0005b8  d1fb              BNE      |L2.1458|
0005ba  4638              MOV      r0,r7                 ;619
0005bc  f7fffffe          BL       LX98405_EvenOdd_Short_Setting
0005c0  f7fffffe          BL       LX98405_Short_Local_Global_Tune
0005c4  f7fffffe          BL       SRIC_Run
0005c8  f2410003          MOV      r0,#0x1003            ;619
0005cc  f7fffffe          BL       MSPI_Set_AITMODE
0005d0  f8cb60d4          STR      r6,[r11,#0xd4]        ;619
0005d4  f7fffffe          BL       module_wait_full_sample_done
0005d8  f7fffffe          BL       module_wait_full_sample_done
0005dc  7961              LDRB     r1,[r4,#5]            ;623
0005de  1e48              SUBS     r0,r1,#1              ;623
0005e0  b2c0              UXTB     r0,r0                 ;623
0005e2  bf24              ITT      CS                    ;600
0005e4  4fa0              LDRCS    r7,|L2.2152|
0005e6  f8dfc278          LDRCS    r12,|L2.2144|
0005ea  d359              BCC      |L2.1696|
                  |L2.1516|
0005ec  fba72100          UMULL    r2,r1,r7,r0           ;625
0005f0  0889              LSRS     r1,r1,#2              ;625
0005f2  4249              RSBS     r1,r1,#0              ;625
0005f4  eb010181          ADD      r1,r1,r1,LSL #2       ;625
0005f8  1809              ADDS     r1,r1,r0              ;625
0005fa  bf1c              ITT      NE                    ;625
0005fc  2902              CMPNE    r1,#2                 ;625
0005fe  2903              CMPNE    r1,#3                 ;625
000600  d004              BEQ      |L2.1548|
000602  2901              CMP      r1,#1                 ;633
000604  bf18              IT       NE                    ;633
000606  2904              CMPNE    r1,#4                 ;633
000608  d022              BEQ      |L2.1616|
00060a  e046              B        |L2.1690|
                  |L2.1548|
00060c  7921              LDRB     r1,[r4,#4]            ;627
00060e  000a              MOVS     r2,r1                 ;627
000610  d043              BEQ      |L2.1690|
000612  eb000340          ADD      r3,r0,r0,LSL #1       ;627
000616  eb0c1383          ADD      r3,r12,r3,LSL #6      ;627
00061a  eb030342          ADD      r3,r3,r2,LSL #1       ;627
00061e  f5033981          ADD      r9,r3,#0x10200        ;627
000622  f1a30802          SUB      r8,r3,#2              ;627
000626  f1090992          ADD      r9,r9,#0x92           ;627
00062a  2300              MOVS     r3,#0                 ;627
                  |L2.1580|
00062c  eba20a03          SUB      r10,r2,r3             ;629
000630  f01a0f01          TST      r10,#1                ;629
000634  bf1c              ITT      NE                    ;630
000636  f8b9a000          LDRHNE   r10,[r9,#0]           ;630
00063a  f8a8a000          STRHNE   r10,[r8,#0]           ;630
00063e  1e49              SUBS     r1,r1,#1              ;630
000640  f1030301          ADD      r3,r3,#1              ;630
000644  f1a80802          SUB      r8,r8,#2              ;630
000648  f1a90902          SUB      r9,r9,#2              ;630
00064c  d1ee              BNE      |L2.1580|
00064e  e024              B        |L2.1690|
                  |L2.1616|
000650  7922              LDRB     r2,[r4,#4]            ;635
000652  0011              MOVS     r1,r2                 ;635
000654  d021              BEQ      |L2.1690|
000656  eb000340          ADD      r3,r0,r0,LSL #1       ;635
00065a  eb0c1383          ADD      r3,r12,r3,LSL #6      ;635
00065e  eb030342          ADD      r3,r3,r2,LSL #1       ;635
000662  f5033981          ADD      r9,r3,#0x10200        ;635
000666  f1a30802          SUB      r8,r3,#2              ;635
00066a  f1090992          ADD      r9,r9,#0x92           ;635
00066e  2300              MOVS     r3,#0                 ;635
                  |L2.1648|
000670  eba20a03          SUB      r10,r2,r3             ;637
000674  f1aa0a01          SUB      r10,r10,#1            ;637
000678  f36f0a5e          BFC      r10,#1,#30            ;637
00067c  f1ba0f01          CMP      r10,#1                ;637
000680  bf04              ITT      EQ                    ;638
000682  f8b9a000          LDRHEQ   r10,[r9,#0]           ;638
000686  f8a8a000          STRHEQ   r10,[r8,#0]           ;638
00068a  1e49              SUBS     r1,r1,#1              ;638
00068c  f1030301          ADD      r3,r3,#1              ;638
000690  f1a80802          SUB      r8,r8,#2              ;638
000694  f1a90902          SUB      r9,r9,#2              ;638
000698  d1ea              BNE      |L2.1648|
                  |L2.1690|
00069a  1e40              SUBS     r0,r0,#1              ;635
00069c  b2c0              UXTB     r0,r0                 ;635
00069e  d2a5              BCS      |L2.1516|
                  |L2.1696|
0006a0  4872              LDR      r0,|L2.2156|
0006a2  e9d01006          LDRD     r1,r0,[r0,#0x18]      ;661
0006a6  e9cd100b          STRD     r1,r0,[sp,#0x2c]      ;661
0006aa  7960              LDRB     r0,[r4,#5]            ;661
0006ac  f88d002c          STRB     r0,[sp,#0x2c]         ;661
0006b0  7920              LDRB     r0,[r4,#4]            ;661
0006b2  f88d002d          STRB     r0,[sp,#0x2d]         ;661
0006b6  a80b              ADD      r0,sp,#0x2c           ;661
0006b8  4969              LDR      r1,|L2.2144|
0006ba  f7fffffe          BL       protocol_swip_PendTestResult
0006be  2401              MOVS     r4,#1                 ;673
                  |L2.1728|
0006c0  6828              LDR      r0,[r5,#0]            ;673
0006c2  f0106f80          TST      r0,#0x4000000         ;673
0006c6  d1fb              BNE      |L2.1728|
                  |L2.1736|
0006c8  6828              LDR      r0,[r5,#0]            ;673
0006ca  f0106f80          TST      r0,#0x4000000         ;673
0006ce  d0fb              BEQ      |L2.1736|
0006d0  f7fffffe          BL       SRIC_Stop
0006d4  f7fffffe          BL       MSPI_Set_TLPMODE
                  |L2.1752|
0006d8  6828              LDR      r0,[r5,#0]            ;673
0006da  f0106f00          TST      r0,#0x8000000         ;673
0006de  d0fb              BEQ      |L2.1752|
                  |L2.1760|
0006e0  6828              LDR      r0,[r5,#0]            ;673
0006e2  f0106f00          TST      r0,#0x8000000         ;673
0006e6  d1fb              BNE      |L2.1760|
0006e8  4620              MOV      r0,r4                 ;673
0006ea  f7fffffe          BL       LX98405_Reg_Restore_Setting
0006ee  f7fffffe          BL       SRIC_Run
0006f2  f2410003          MOV      r0,#0x1003            ;673
0006f6  f7fffffe          BL       MSPI_Set_AITMODE
0006fa  f8cb60d4          STR      r6,[r11,#0xd4]        ;673
0006fe  f000b999          B.W      |L2.2612|
000702  7960              LDRB     r0,[r4,#5]            ;681
000704  2300              MOVS     r3,#0                 ;681
000706  2800              CMP      r0,#0                 ;681
000708  bf84              ITT      HI                    ;681
00070a  2000              MOVHI    r0,#0                 ;681
00070c  f8dfc150          LDRHI    r12,|L2.2144|
000710  d918              BLS      |L2.1860|
                  |L2.1810|
000712  7922              LDRB     r2,[r4,#4]            ;683
000714  b18a              CBZ      r2,|L2.1850|
000716  eb030143          ADD      r1,r3,r3,LSL #1       ;683
00071a  eb0c1181          ADD      r1,r12,r1,LSL #6      ;683
00071e  1e89              SUBS     r1,r1,#2              ;683
000720  f0120f01          TST      r2,#1
000724  bf18              IT       NE                    ;685
000726  f8210f02          STRHNE   r0,[r1,#2]!           ;685
00072a  7922              LDRB     r2,[r4,#4]            ;683
00072c  0852              LSRS     r2,r2,#1              ;683
00072e  d004              BEQ      |L2.1850|
                  |L2.1840|
000730  8048              STRH     r0,[r1,#2]            ;685
000732  f8210f04          STRH     r0,[r1,#4]!           ;685
000736  1e52              SUBS     r2,r2,#1              ;685
000738  d1fa              BNE      |L2.1840|
                  |L2.1850|
00073a  1c59              ADDS     r1,r3,#1              ;685
00073c  b2cb              UXTB     r3,r1                 ;685
00073e  7961              LDRB     r1,[r4,#5]            ;685
000740  4299              CMP      r1,r3                 ;685
000742  d8e6              BHI      |L2.1810|
                  |L2.1860|
000744  78a8              LDRB     r0,[r5,#2]            ;689
000746  2600              MOVS     r6,#0                 ;689
000748  2800              CMP      r0,#0                 ;689
00074a  dd05              BLE      |L2.1880|
                  |L2.1868|
00074c  f7fffffe          BL       module_wait_full_sample_done
000750  78a8              LDRB     r0,[r5,#2]            ;691
000752  1c76              ADDS     r6,r6,#1              ;691
000754  42b0              CMP      r0,r6                 ;691
000756  dcf9              BGT      |L2.1868|
                  |L2.1880|
000758  4f43              LDR      r7,|L2.2152|
00075a  f8df9104          LDR      r9,|L2.2144|
00075e  4e41              LDR      r6,|L2.2148|
000760  2500              MOVS     r5,#0                 ;694
000762  f04f0a3f          MOV      r10,#0x3f             ;694
000766  bf00              NOP                            ;696
                  |L2.1896|
000768  f00508ff          AND      r8,r5,#0xff           ;696
                  |L2.1900|
00076c  6830              LDR      r0,[r6,#0]            ;696
00076e  f0106f80          TST      r0,#0x4000000         ;696
000772  d1fb              BNE      |L2.1900|
                  |L2.1908|
000774  6830              LDR      r0,[r6,#0]            ;696
000776  f0106f80          TST      r0,#0x4000000         ;696
00077a  d0fb              BEQ      |L2.1908|
00077c  f7fffffe          BL       SRIC_Stop
000780  f7fffffe          BL       MSPI_Set_TLPMODE
                  |L2.1924|
000784  6830              LDR      r0,[r6,#0]            ;696
000786  f0106f00          TST      r0,#0x8000000         ;696
00078a  d0fb              BEQ      |L2.1924|
                  |L2.1932|
00078c  6830              LDR      r0,[r6,#0]            ;696
00078e  f0106f00          TST      r0,#0x8000000         ;696
000792  d1fb              BNE      |L2.1932|
000794  f7fffffe          BL       LX98405_OpenShort_SourceGnd_Setting
000798  f7fffffe          BL       LX98405_OpenShort_Local_Global_Tune
00079c  f1b80f00          CMP      r8,#0                 ;696
0007a0  d014              BEQ      |L2.1996|
0007a2  f1b80f01          CMP      r8,#1                 ;696
0007a6  bf08              IT       EQ                    ;696
0007a8  2002              MOVEQ    r0,#2                 ;696
0007aa  d013              BEQ      |L2.2004|
0007ac  f1b80f02          CMP      r8,#2                 ;696
0007b0  bf08              IT       EQ                    ;696
0007b2  2004              MOVEQ    r0,#4                 ;696
0007b4  d00e              BEQ      |L2.2004|
0007b6  f1b80f03          CMP      r8,#3                 ;696
0007ba  bf08              IT       EQ                    ;696
0007bc  2008              MOVEQ    r0,#8                 ;696
0007be  d009              BEQ      |L2.2004|
0007c0  f1b80f04          CMP      r8,#4                 ;696
0007c4  bf08              IT       EQ                    ;696
0007c6  2010              MOVEQ    r0,#0x10              ;696
0007c8  d004              BEQ      |L2.2004|
0007ca  e005              B        |L2.2008|
                  |L2.1996|
0007cc  2001              MOVS     r0,#1                 ;696
0007ce  f7fffffe          BL       LX98405_OpenShort_Mux_Low_En
0007d2  e001              B        |L2.2008|
                  |L2.2004|
0007d4  f7fffffe          BL       LX98405_OpenShort_Mux_Low_En
                  |L2.2008|
0007d8  f7fffffe          BL       SRIC_Run
0007dc  f2410003          MOV      r0,#0x1003            ;696
0007e0  f7fffffe          BL       MSPI_Set_AITMODE
0007e4  f8cba0d4          STR      r10,[r11,#0xd4]       ;696
0007e8  f7fffffe          BL       module_wait_full_sample_done
0007ec  f7fffffe          BL       module_wait_full_sample_done
0007f0  7960              LDRB     r0,[r4,#5]            ;700
0007f2  1e41              SUBS     r1,r0,#1              ;700
0007f4  b2c9              UXTB     r1,r1                 ;700
0007f6  d37c              BCC      |L2.2290|
                  |L2.2040|
0007f8  b145              CBZ      r5,|L2.2060|
0007fa  2d01              CMP      r5,#1                 ;712
0007fc  d038              BEQ      |L2.2160|
0007fe  2d02              CMP      r5,#2                 ;722
000800  d05f              BEQ      |L2.2242|
000802  2d03              CMP      r5,#3                 ;732
000804  d077              BEQ      |L2.2294|
000806  2d04              CMP      r5,#4                 ;742
000808  d076              BEQ      |L2.2296|
00080a  e0dc              B        |L2.2502|
                  |L2.2060|
00080c  fba72001          UMULL    r2,r0,r7,r1           ;704
000810  0880              LSRS     r0,r0,#2              ;704
000812  4240              RSBS     r0,r0,#0              ;704
000814  eb000080          ADD      r0,r0,r0,LSL #2       ;704
000818  4408              ADD      r0,r0,r1              ;704
00081a  2802              CMP      r0,#2                 ;704
00081c  d11f              BNE      |L2.2142|
00081e  7923              LDRB     r3,[r4,#4]            ;706
000820  b1eb              CBZ      r3,|L2.2142|
000822  eb010041          ADD      r0,r1,r1,LSL #1       ;706
000826  eb091080          ADD      r0,r9,r0,LSL #6       ;706
00082a  eb000043          ADD      r0,r0,r3,LSL #1       ;706
00082e  f5003280          ADD      r2,r0,#0x10000        ;706
000832  f5027225          ADD      r2,r2,#0x294          ;706
000836  f0130f01          TST      r3,#1
00083a  d003              BEQ      |L2.2116|
00083c  f832cd02          LDRH     r12,[r2,#-2]!         ;708
000840  f820cd02          STRH     r12,[r0,#-2]!         ;708
                  |L2.2116|
000844  085b              LSRS     r3,r3,#1              ;706
000846  d00a              BEQ      |L2.2142|
                  |L2.2120|
000848  f832cc02          LDRH     r12,[r2,#-2]          ;708
00084c  f820cc02          STRH     r12,[r0,#-2]          ;708
000850  f832cd04          LDRH     r12,[r2,#-4]!         ;708
000854  f820cd04          STRH     r12,[r0,#-4]!         ;708
000858  1e5b              SUBS     r3,r3,#1              ;708
00085a  d1f5              BNE      |L2.2120|
00085c  e0b3              B        |L2.2502|
                  |L2.2142|
00085e  e049              B        |L2.2292|
                  |L2.2144|
                          DCD      FullSharedBuff
                  |L2.2148|
                          DCD      0x40007000
                  |L2.2152|
                          DCD      0xcccccccd
                  |L2.2156|
                          DCD      ||.constdata||
                  |L2.2160|
000870  fba72001          UMULL    r2,r0,r7,r1           ;714
000874  0880              LSRS     r0,r0,#2              ;714
000876  4240              RSBS     r0,r0,#0              ;714
000878  eb000080          ADD      r0,r0,r0,LSL #2       ;714
00087c  4408              ADD      r0,r0,r1              ;714
00087e  2801              CMP      r0,#1                 ;714
000880  d138              BNE      |L2.2292|
000882  7923              LDRB     r3,[r4,#4]            ;716
000884  b3b3              CBZ      r3,|L2.2292|
000886  eb010041          ADD      r0,r1,r1,LSL #1       ;716
00088a  eb091080          ADD      r0,r9,r0,LSL #6       ;716
00088e  eb000043          ADD      r0,r0,r3,LSL #1       ;716
000892  f5003280          ADD      r2,r0,#0x10000        ;716
000896  f5027225          ADD      r2,r2,#0x294          ;716
00089a  f0130f01          TST      r3,#1
00089e  d003              BEQ      |L2.2216|
0008a0  f832cd02          LDRH     r12,[r2,#-2]!         ;718
0008a4  f820cd02          STRH     r12,[r0,#-2]!         ;718
                  |L2.2216|
0008a8  085b              LSRS     r3,r3,#1              ;716
0008aa  d023              BEQ      |L2.2292|
                  |L2.2220|
0008ac  f832cc02          LDRH     r12,[r2,#-2]          ;718
0008b0  f820cc02          STRH     r12,[r0,#-2]          ;718
0008b4  f832cd04          LDRH     r12,[r2,#-4]!         ;718
0008b8  f820cd04          STRH     r12,[r0,#-4]!         ;718
0008bc  1e5b              SUBS     r3,r3,#1              ;718
0008be  d1f5              BNE      |L2.2220|
0008c0  e081              B        |L2.2502|
                  |L2.2242|
0008c2  fba72001          UMULL    r2,r0,r7,r1           ;724
0008c6  0880              LSRS     r0,r0,#2              ;724
0008c8  4240              RSBS     r0,r0,#0              ;724
0008ca  eb000080          ADD      r0,r0,r0,LSL #2       ;724
0008ce  42c8              CMN      r0,r1                 ;724
0008d0  d179              BNE      |L2.2502|
0008d2  7923              LDRB     r3,[r4,#4]            ;726
0008d4  b173              CBZ      r3,|L2.2292|
0008d6  eb010041          ADD      r0,r1,r1,LSL #1       ;726
0008da  eb091080          ADD      r0,r9,r0,LSL #6       ;726
0008de  eb000043          ADD      r0,r0,r3,LSL #1       ;726
0008e2  f5003280          ADD      r2,r0,#0x10000        ;726
0008e6  f5027225          ADD      r2,r2,#0x294          ;726
0008ea  f0130f01          TST      r3,#1
0008ee  d008              BEQ      |L2.2306|
0008f0  e003              B        |L2.2298|
                  |L2.2290|
0008f2  e06c              B        |L2.2510|
                  |L2.2292|
0008f4  e05c              B        |L2.2480|
                  |L2.2294|
0008f6  e012              B        |L2.2334|
                  |L2.2296|
0008f8  e03b              B        |L2.2418|
                  |L2.2298|
0008fa  f832cd02          LDRH     r12,[r2,#-2]!         ;728
0008fe  f820cd02          STRH     r12,[r0,#-2]!         ;728
                  |L2.2306|
000902  085b              LSRS     r3,r3,#1              ;726
000904  d05f              BEQ      |L2.2502|
000906  bf00              NOP                            ;728
                  |L2.2312|
000908  f832cc02          LDRH     r12,[r2,#-2]          ;728
00090c  f820cc02          STRH     r12,[r0,#-2]          ;728
000910  f832cd04          LDRH     r12,[r2,#-4]!         ;728
000914  f820cd04          STRH     r12,[r0,#-4]!         ;728
000918  1e5b              SUBS     r3,r3,#1              ;728
00091a  d1f5              BNE      |L2.2312|
00091c  e053              B        |L2.2502|
                  |L2.2334|
00091e  fba72001          UMULL    r2,r0,r7,r1           ;734
000922  0880              LSRS     r0,r0,#2              ;734
000924  4240              RSBS     r0,r0,#0              ;734
000926  eb000080          ADD      r0,r0,r0,LSL #2       ;734
00092a  4408              ADD      r0,r0,r1              ;734
00092c  2804              CMP      r0,#4                 ;734
00092e  d14a              BNE      |L2.2502|
000930  7923              LDRB     r3,[r4,#4]            ;736
000932  b3eb              CBZ      r3,|L2.2480|
000934  eb010041          ADD      r0,r1,r1,LSL #1       ;736
000938  eb091080          ADD      r0,r9,r0,LSL #6       ;736
00093c  eb000043          ADD      r0,r0,r3,LSL #1       ;736
000940  f5003280          ADD      r2,r0,#0x10000        ;736
000944  f5027225          ADD      r2,r2,#0x294          ;736
000948  f0130f01          TST      r3,#1
00094c  d003              BEQ      |L2.2390|
00094e  f832cd02          LDRH     r12,[r2,#-2]!         ;738
000952  f820cd02          STRH     r12,[r0,#-2]!         ;738
                  |L2.2390|
000956  085b              LSRS     r3,r3,#1              ;736
000958  d035              BEQ      |L2.2502|
00095a  bf00              NOP                            ;738
                  |L2.2396|
00095c  f832cc02          LDRH     r12,[r2,#-2]          ;738
000960  f820cc02          STRH     r12,[r0,#-2]          ;738
000964  f832cd04          LDRH     r12,[r2,#-4]!         ;738
000968  f820cd04          STRH     r12,[r0,#-4]!         ;738
00096c  1e5b              SUBS     r3,r3,#1              ;738
00096e  d1f5              BNE      |L2.2396|
000970  e029              B        |L2.2502|
                  |L2.2418|
000972  fba72001          UMULL    r2,r0,r7,r1           ;744
000976  0880              LSRS     r0,r0,#2              ;744
000978  4240              RSBS     r0,r0,#0              ;744
00097a  eb000080          ADD      r0,r0,r0,LSL #2       ;744
00097e  4408              ADD      r0,r0,r1              ;744
000980  2803              CMP      r0,#3                 ;744
000982  d120              BNE      |L2.2502|
000984  7923              LDRB     r3,[r4,#4]            ;746
000986  b19b              CBZ      r3,|L2.2480|
000988  eb010041          ADD      r0,r1,r1,LSL #1       ;746
00098c  eb091080          ADD      r0,r9,r0,LSL #6       ;746
000990  eb000043          ADD      r0,r0,r3,LSL #1       ;746
000994  f5003280          ADD      r2,r0,#0x10000        ;746
000998  f5027225          ADD      r2,r2,#0x294          ;746
00099c  f0130f01          TST      r3,#1
0009a0  d003              BEQ      |L2.2474|
0009a2  f832cd02          LDRH     r12,[r2,#-2]!         ;748
0009a6  f820cd02          STRH     r12,[r0,#-2]!         ;748
                  |L2.2474|
0009aa  085b              LSRS     r3,r3,#1              ;746
0009ac  d00b              BEQ      |L2.2502|
                  |L2.2478|
0009ae  e000              B        |L2.2482|
                  |L2.2480|
0009b0  e009              B        |L2.2502|
                  |L2.2482|
0009b2  f832cc02          LDRH     r12,[r2,#-2]          ;748
0009b6  f820cc02          STRH     r12,[r0,#-2]          ;748
0009ba  f832cd04          LDRH     r12,[r2,#-4]!         ;748
0009be  f820cd04          STRH     r12,[r0,#-4]!         ;748
0009c2  1e5b              SUBS     r3,r3,#1              ;748
0009c4  d1f3              BNE      |L2.2478|
                  |L2.2502|
0009c6  1e49              SUBS     r1,r1,#1              ;746
0009c8  b2c9              UXTB     r1,r1                 ;746
0009ca  f4bfaf15          BCS      |L2.2040|
                  |L2.2510|
0009ce  1c6d              ADDS     r5,r5,#1              ;746
0009d0  2d05              CMP      r5,#5                 ;746
0009d2  f6ffaec9          BLT      |L2.1896|
0009d6  4823              LDR      r0,|L2.2660|
0009d8  e9d01008          LDRD     r1,r0,[r0,#0x20]      ;757
0009dc  e9cd100b          STRD     r1,r0,[sp,#0x2c]      ;757
0009e0  7960              LDRB     r0,[r4,#5]            ;757
0009e2  f88d002c          STRB     r0,[sp,#0x2c]         ;757
0009e6  7920              LDRB     r0,[r4,#4]            ;757
0009e8  f88d002d          STRB     r0,[sp,#0x2d]         ;757
0009ec  a80b              ADD      r0,sp,#0x2c           ;757
0009ee  491e              LDR      r1,|L2.2664|
0009f0  f7fffffe          BL       protocol_swip_PendTestResult
0009f4  2402              MOVS     r4,#2                 ;769
                  |L2.2550|
0009f6  6830              LDR      r0,[r6,#0]            ;769
0009f8  f0106f80          TST      r0,#0x4000000         ;769
0009fc  d1fb              BNE      |L2.2550|
                  |L2.2558|
0009fe  6830              LDR      r0,[r6,#0]            ;769
000a00  f0106f80          TST      r0,#0x4000000         ;769
000a04  d0fb              BEQ      |L2.2558|
000a06  f7fffffe          BL       SRIC_Stop
000a0a  f7fffffe          BL       MSPI_Set_TLPMODE
                  |L2.2574|
000a0e  6830              LDR      r0,[r6,#0]            ;769
000a10  f0106f00          TST      r0,#0x8000000         ;769
000a14  d0fb              BEQ      |L2.2574|
                  |L2.2582|
000a16  6830              LDR      r0,[r6,#0]            ;769
000a18  f0106f00          TST      r0,#0x8000000         ;769
000a1c  d1fb              BNE      |L2.2582|
000a1e  4620              MOV      r0,r4                 ;769
000a20  f7fffffe          BL       LX98405_Reg_Restore_Setting
000a24  f7fffffe          BL       SRIC_Run
000a28  f2410003          MOV      r0,#0x1003            ;769
000a2c  f7fffffe          BL       MSPI_Set_AITMODE
000a30  f8cba0d4          STR      r10,[r11,#0xd4]       ;769
                  |L2.2612|
000a34  f7fffffe          BL       module_Stop
                  |L2.2616|
000a38  f7fffffe          BL       protocol_swip_GetMode
000a3c  b158              CBZ      r0,|L2.2646|
000a3e  9809              LDR      r0,[sp,#0x24]         ;797
000a40  2800              CMP      r0,#0                 ;797
000a42  f47faaf0          BNE      |L2.38|
                  |L2.2630|
000a46  980a              LDR      r0,[sp,#0x28]         ;802
000a48  b00f              ADD      sp,sp,#0x3c
000a4a  e8bd8ff0          POP      {r4-r11,pc}
000a4e  bf00              NOP                            ;783
                  |L2.2640|
000a50  f7fffffe          BL       protocol_swip_PendReadyStatus
000a54  e7f7              B        |L2.2630|
                  |L2.2646|
000a56  2001              MOVS     r0,#1                 ;796
000a58  900a              STR      r0,[sp,#0x28]         ;797
000a5a  9809              LDR      r0,[sp,#0x24]         ;797
000a5c  2800              CMP      r0,#0                 ;797
000a5e  d1f7              BNE      |L2.2640|
000a60  e7f1              B        |L2.2630|
                          ENDP

000a62  0000              DCW      0x0000
                  |L2.2660|
                          DCD      ||.constdata||
                  |L2.2664|
                          DCD      FullSharedBuff

                          AREA ||.constdata||, DATA, READONLY, ALIGN=2

000000  00006000          DCB      0x00,0x00,0x60,0x00
000004  00820000          DCB      0x00,0x82,0x00,0x00
000008  00006000          DCB      0x00,0x00,0x60,0x00
00000c  00820000          DCB      0x00,0x82,0x00,0x00
000010  01010100          DCB      0x01,0x01,0x01,0x00
000014  00840000          DCB      0x00,0x84,0x00,0x00
000018  00006000          DCB      0x00,0x00,0x60,0x00
00001c  00820000          DCB      0x00,0x82,0x00,0x00
000020  00006000          DCB      0x00,0x00,0x60,0x00
000024  0082              DCB      0x00,0x82

                          AREA ||.data||, DATA, ALIGN=2

                  BaseAddr
                          DCD      0x00004000
                  sptAlgorithmInfo
                          DCD      0x00000000
                  fullBuffer
                          DCD      0x00000000
                  fw_crc_value
                          DCD      0x00000000
                  ulFrame1Count
                          DCD      0x00000000
                  ulFrame2Count
                          DCD      0x00000000

                          AREA ||area_number.7||, DATA, ALIGN=0

                          EXPORTAS ||area_number.7||, ||.data||
                  DiffCnt
000000  00                DCB      0x00

                          AREA ||area_number.8||, DATA, ALIGN=2

                          EXPORTAS ||area_number.8||, ||.data||
                  ulFrameOSCount
                          DCD      0x00000000

;*** Start embedded assembler ***

#line 1 "..\\..\\App\\app_diag.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___10_app_diag_c_BaseAddr____REV16|
#line 388 "..\\..\\Hal\\system\\CMSIS\\cmsis_armcc.h"
|__asm___10_app_diag_c_BaseAddr____REV16| PROC
#line 389

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___10_app_diag_c_BaseAddr____REVSH|
#line 402
|__asm___10_app_diag_c_BaseAddr____REVSH| PROC
#line 403

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___10_app_diag_c_BaseAddr____RRX|
#line 587
|__asm___10_app_diag_c_BaseAddr____RRX| PROC
#line 588

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
