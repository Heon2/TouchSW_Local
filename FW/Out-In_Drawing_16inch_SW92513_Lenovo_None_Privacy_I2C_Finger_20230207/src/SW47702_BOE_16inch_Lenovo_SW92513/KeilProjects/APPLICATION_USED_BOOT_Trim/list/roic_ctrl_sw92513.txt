; generated by Component: ARM Compiler 5.06 update 4 (build 422) Tool: ArmCC [4d3604]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o.\bin\roic_ctrl_sw92513.o --asm_dir=.\list\ --list_dir=.\list\ --depend=.\bin\roic_ctrl_sw92513.d --cpu=Cortex-M3 --apcs=interwork -O3 -Otime --diag_suppress=9931 -I..\..\App -I..\..\App\Algorithm -I..\..\App\Algorithm\Baseline -I..\..\App\Algorithm\Coord -I..\..\App\Algorithm\Label -I..\..\App\Algorithm\Noise -I..\..\Env -I..\..\Hal -I..\..\Hal\system -I..\..\Hal\system\CMSIS -I..\..\Hal\gpio -I..\..\Hal\i2c -I..\..\Hal\pwmdrv -I..\..\Hal\timer -I..\..\Hal\wdgt -I..\..\Hal\spi -I..\..\Hal\dspA -I..\..\Hal\dspB -I..\..\Hal\scrb -I..\..\Hal\usb -I..\..\Hal\usb\FWOTG210_F000 -I..\..\Hal\usb\FWOTG210_F000\OTG_peripheral -I..\..\Hal\usb\FWOTG210_F000\OTG_peripheral_Config -I..\..\Hal\gdma -I..\..\Hal\syscfg -I..\..\Hal\flitf -I..\..\Module -I..\..\Module\SRIC -I..\..\Protocol -I..\..\Tool_BinCvt\BinToolApp\src -I..\..\Boot -I..\..\Parameter -I..\..\Hal\dbgserial -I..\..\Hal\tlvds -I..\..\Tuning_process -I.\RTE\_MFTP_FPGA -IC:\Keil_v5\ARM\PACK\ARM\CMSIS\5.0.1\Device\ARM\ARMCM3\Include -IC:\Keil_v5\ARM\CMSIS\Include -D__UVISION_VERSION=523 -DARMCM3 -D_USE_APP_80K_ -D_USE_WITH_BOOT_ --wchar32 --omf_browse=.\bin\roic_ctrl_sw92513.crf ..\..\Module\SRIC\ROIC\SW92513\roic_ctrl_sw92513.c]
                          THUMB

                          AREA ||i.SW92513_Initialize||, CODE, READONLY, ALIGN=2

                  SW92513_Initialize PROC
;;;1967   
;;;1968   void SW92513_Initialize(void)
000000  b510              PUSH     {r4,lr}
;;;1969   {
;;;1970   	s_pktmoduleSRICCommonConf = module_SRIC_GetCommonConfig();
000002  f7fffffe          BL       module_SRIC_GetCommonConfig
000006  4901              LDR      r1,|L1.12|
000008  6008              STR      r0,[r1,#0]  ; s_pktmoduleSRICCommonConf
;;;1971   }
00000a  bd10              POP      {r4,pc}
;;;1972   
                          ENDP

                  |L1.12|
                          DCD      ||.data||

                          AREA ||i.SW92513_Reg_AFESetting||, CODE, READONLY, ALIGN=2

                  SW92513_Reg_AFESetting PROC
;;;1855   
;;;1856   static void SW92513_Reg_AFESetting(eSENSING_MODE_t eSensingMode)
000000  b510              PUSH     {r4,lr}
;;;1857   {
;;;1858   #if USED_NOISE_HOPPING_FREQ
;;;1859   	if (IS_ACTIVE_MODE_FRQ_MAIN(eSensingMode))
000002  f0100f02          TST      r0,#2
000006  d07a              BEQ      |L2.254|
;;;1860   	{
;;;1861   		MSPI_RegisterWrite((uint32_t)(0x0040), s_pktmoduleSRICCommonConf->PWM_PRD_CTL.ulBulk);  // R/W
000008  4c6c              LDR      r4,|L2.444|
00000a  6820              LDR      r0,[r4,#0]  ; s_pktmoduleSRICCommonConf
00000c  6cc1              LDR      r1,[r0,#0x4c]
00000e  2040              MOVS     r0,#0x40
000010  f7fffffe          BL       MSPI_RegisterWrite
;;;1862   		MSPI_RegisterWrite((uint32_t)(0x0048), s_pktmoduleSRICCommonConf->CVC1_DRV_CTL2.ulBulk);  // R/W
000014  6820              LDR      r0,[r4,#0]  ; s_pktmoduleSRICCommonConf
000016  6d41              LDR      r1,[r0,#0x54]
000018  2048              MOVS     r0,#0x48
00001a  f7fffffe          BL       MSPI_RegisterWrite
;;;1863   		MSPI_RegisterWrite((uint32_t)(0x004C), s_pktmoduleSRICCommonConf->CVC1_DRV_RISE_NUM.ulBulk);  // R/W
00001e  6820              LDR      r0,[r4,#0]  ; s_pktmoduleSRICCommonConf
000020  6d81              LDR      r1,[r0,#0x58]
000022  204c              MOVS     r0,#0x4c
000024  f7fffffe          BL       MSPI_RegisterWrite
;;;1864   		MSPI_RegisterWrite((uint32_t)(0x0050), s_pktmoduleSRICCommonConf->CVC1_DRV_FALL_NUM.ulBulk);  // R/W
000028  6820              LDR      r0,[r4,#0]  ; s_pktmoduleSRICCommonConf
00002a  6dc1              LDR      r1,[r0,#0x5c]
00002c  2050              MOVS     r0,#0x50
00002e  f7fffffe          BL       MSPI_RegisterWrite
;;;1865   		MSPI_RegisterWrite((uint32_t)(0x0054), s_pktmoduleSRICCommonConf->CVC1_DRV_D_RISE_NUM.ulBulk);  // R/W
000032  6820              LDR      r0,[r4,#0]  ; s_pktmoduleSRICCommonConf
000034  6e01              LDR      r1,[r0,#0x60]
000036  2054              MOVS     r0,#0x54
000038  f7fffffe          BL       MSPI_RegisterWrite
;;;1866   		MSPI_RegisterWrite((uint32_t)(0x0058), s_pktmoduleSRICCommonConf->CVC1_DRV_D_FALL_NUM.ulBulk);  // R/W
00003c  6820              LDR      r0,[r4,#0]  ; s_pktmoduleSRICCommonConf
00003e  6e41              LDR      r1,[r0,#0x64]
000040  2058              MOVS     r0,#0x58
000042  f7fffffe          BL       MSPI_RegisterWrite
;;;1867   		MSPI_RegisterWrite((uint32_t)(0x005C), s_pktmoduleSRICCommonConf->SMPL_CTL.ulBulk);  // R/W
000046  6820              LDR      r0,[r4,#0]  ; s_pktmoduleSRICCommonConf
000048  6e81              LDR      r1,[r0,#0x68]
00004a  205c              MOVS     r0,#0x5c
00004c  f7fffffe          BL       MSPI_RegisterWrite
;;;1868   		MSPI_RegisterWrite((uint32_t)(0x0060), s_pktmoduleSRICCommonConf->RSTP_RISE_NUM.ulBulk);  // R/W
000050  6820              LDR      r0,[r4,#0]  ; s_pktmoduleSRICCommonConf
000052  6ec1              LDR      r1,[r0,#0x6c]
000054  2060              MOVS     r0,#0x60
000056  f7fffffe          BL       MSPI_RegisterWrite
;;;1869   		MSPI_RegisterWrite((uint32_t)(0x0064), s_pktmoduleSRICCommonConf->RSTP_FALL_NUM1.ulBulk);  // R/W
00005a  6820              LDR      r0,[r4,#0]  ; s_pktmoduleSRICCommonConf
00005c  6f01              LDR      r1,[r0,#0x70]
00005e  2064              MOVS     r0,#0x64
000060  f7fffffe          BL       MSPI_RegisterWrite
;;;1870   		MSPI_RegisterWrite((uint32_t)(0x0068), s_pktmoduleSRICCommonConf->RSTP_FALL_NUM2.ulBulk);  // R/W
000064  6820              LDR      r0,[r4,#0]  ; s_pktmoduleSRICCommonConf
000066  6f41              LDR      r1,[r0,#0x74]
000068  2068              MOVS     r0,#0x68
00006a  f7fffffe          BL       MSPI_RegisterWrite
;;;1871   		MSPI_RegisterWrite((uint32_t)(0x006C), s_pktmoduleSRICCommonConf->PHTCR_RISE_NUM.ulBulk);  // R/W
00006e  6820              LDR      r0,[r4,#0]  ; s_pktmoduleSRICCommonConf
000070  6f81              LDR      r1,[r0,#0x78]
000072  206c              MOVS     r0,#0x6c
000074  f7fffffe          BL       MSPI_RegisterWrite
;;;1872   		MSPI_RegisterWrite((uint32_t)(0x0070), s_pktmoduleSRICCommonConf->PHTCR_FALL_NUM.ulBulk);  // R/W
000078  6820              LDR      r0,[r4,#0]  ; s_pktmoduleSRICCommonConf
00007a  6fc1              LDR      r1,[r0,#0x7c]
00007c  2070              MOVS     r0,#0x70
00007e  f7fffffe          BL       MSPI_RegisterWrite
;;;1873   		MSPI_RegisterWrite((uint32_t)(0x0074), s_pktmoduleSRICCommonConf->VCR_NUM.ulBulk);  // R/W
000082  6820              LDR      r0,[r4,#0]  ; s_pktmoduleSRICCommonConf
000084  f8d01080          LDR      r1,[r0,#0x80]
000088  2074              MOVS     r0,#0x74
00008a  f7fffffe          BL       MSPI_RegisterWrite
;;;1874   		MSPI_RegisterWrite((uint32_t)(0x0078), s_pktmoduleSRICCommonConf->RSTI_RISE_NUM.ulBulk);  // R/W
00008e  6820              LDR      r0,[r4,#0]  ; s_pktmoduleSRICCommonConf
000090  f8d01084          LDR      r1,[r0,#0x84]
000094  2078              MOVS     r0,#0x78
000096  f7fffffe          BL       MSPI_RegisterWrite
;;;1875   		MSPI_RegisterWrite((uint32_t)(0x007C), s_pktmoduleSRICCommonConf->RSTI_FALL_NUM1.ulBulk);  // R/W
00009a  6820              LDR      r0,[r4,#0]  ; s_pktmoduleSRICCommonConf
00009c  f8d01088          LDR      r1,[r0,#0x88]
0000a0  207c              MOVS     r0,#0x7c
0000a2  f7fffffe          BL       MSPI_RegisterWrite
;;;1876   		MSPI_RegisterWrite((uint32_t)(0x0080), s_pktmoduleSRICCommonConf->RSTI_FALL_NUM2.ulBulk);  // R/W
0000a6  6820              LDR      r0,[r4,#0]  ; s_pktmoduleSRICCommonConf
0000a8  f8d0108c          LDR      r1,[r0,#0x8c]
0000ac  2080              MOVS     r0,#0x80
0000ae  f7fffffe          BL       MSPI_RegisterWrite
;;;1877   		MSPI_RegisterWrite((uint32_t)(0x0084), s_pktmoduleSRICCommonConf->PHTH0_RISE_NUM.ulBulk);  // R/W
0000b2  6820              LDR      r0,[r4,#0]  ; s_pktmoduleSRICCommonConf
0000b4  f8d01090          LDR      r1,[r0,#0x90]
0000b8  2084              MOVS     r0,#0x84
0000ba  f7fffffe          BL       MSPI_RegisterWrite
;;;1878   		MSPI_RegisterWrite((uint32_t)(0x0088), s_pktmoduleSRICCommonConf->PHTH0_FALL_NUM.ulBulk);  // R/W
0000be  6820              LDR      r0,[r4,#0]  ; s_pktmoduleSRICCommonConf
0000c0  f8d01094          LDR      r1,[r0,#0x94]
0000c4  2088              MOVS     r0,#0x88
0000c6  f7fffffe          BL       MSPI_RegisterWrite
;;;1879   		MSPI_RegisterWrite((uint32_t)(0x008C), s_pktmoduleSRICCommonConf->PHTH1_RISE_NUM.ulBulk);  // R/W
0000ca  6820              LDR      r0,[r4,#0]  ; s_pktmoduleSRICCommonConf
0000cc  f8d01098          LDR      r1,[r0,#0x98]
0000d0  208c              MOVS     r0,#0x8c
0000d2  f7fffffe          BL       MSPI_RegisterWrite
;;;1880   		MSPI_RegisterWrite((uint32_t)(0x0090), s_pktmoduleSRICCommonConf->PHTH1_FALL_NUM.ulBulk);  // R/W
0000d6  6820              LDR      r0,[r4,#0]  ; s_pktmoduleSRICCommonConf
0000d8  f8d0109c          LDR      r1,[r0,#0x9c]
0000dc  2090              MOVS     r0,#0x90
0000de  f7fffffe          BL       MSPI_RegisterWrite
;;;1881   		MSPI_RegisterWrite((uint32_t)(0x0098), s_pktmoduleSRICCommonConf->PHT_RISE_NUM.ulBulk);  // R/W
0000e2  6820              LDR      r0,[r4,#0]  ; s_pktmoduleSRICCommonConf
0000e4  f8d010a4          LDR      r1,[r0,#0xa4]
0000e8  2098              MOVS     r0,#0x98
0000ea  f7fffffe          BL       MSPI_RegisterWrite
;;;1882   		MSPI_RegisterWrite((uint32_t)(0x009C), s_pktmoduleSRICCommonConf->PHT_FALL_NUM.ulBulk);  // R/W
0000ee  6820              LDR      r0,[r4,#0]  ; s_pktmoduleSRICCommonConf
0000f0  f8d010a8          LDR      r1,[r0,#0xa8]
0000f4  e8bd4010          POP      {r4,lr}
0000f8  209c              MOVS     r0,#0x9c
0000fa  f7ffbffe          B.W      MSPI_RegisterWrite
                  |L2.254|
;;;1883   	}
;;;1884   	else if (IS_ACTIVE_MODE_FRQ_HOP1(eSensingMode))
0000fe  f0100f04          TST      r0,#4
;;;1885   	{
;;;1886   		MSPI_RegisterWrite((uint32_t)(0x0040), tSW92513_HoppFreq_AFEReg_CFG.PWM_PRD_CTL.ulBulk);  // R/W
;;;1887   		MSPI_RegisterWrite((uint32_t)(0x0048), tSW92513_HoppFreq_AFEReg_CFG.CVC1_DRV_CTL2.ulBulk);  // R/W
;;;1888   		MSPI_RegisterWrite((uint32_t)(0x004C), tSW92513_HoppFreq_AFEReg_CFG.CVC1_DRV_RISE_NUM.ulBulk);  // R/W
;;;1889   		MSPI_RegisterWrite((uint32_t)(0x0050), tSW92513_HoppFreq_AFEReg_CFG.CVC1_DRV_FALL_NUM.ulBulk);  // R/W
;;;1890   		MSPI_RegisterWrite((uint32_t)(0x0054), tSW92513_HoppFreq_AFEReg_CFG.CVC1_DRV_D_RISE_NUM.ulBulk);  // R/W
;;;1891   		MSPI_RegisterWrite((uint32_t)(0x0058), tSW92513_HoppFreq_AFEReg_CFG.CVC1_DRV_D_FALL_NUM.ulBulk);  // R/W
;;;1892   		MSPI_RegisterWrite((uint32_t)(0x005C), tSW92513_HoppFreq_AFEReg_CFG.SMPL_CTL.ulBulk);  // R/W
;;;1893   		MSPI_RegisterWrite((uint32_t)(0x0060), tSW92513_HoppFreq_AFEReg_CFG.RSTP_RISE_NUM.ulBulk);  // R/W
;;;1894   		MSPI_RegisterWrite((uint32_t)(0x0064), tSW92513_HoppFreq_AFEReg_CFG.RSTP_FALL_NUM1.ulBulk);  // R/W
;;;1895   		MSPI_RegisterWrite((uint32_t)(0x0068), tSW92513_HoppFreq_AFEReg_CFG.RSTP_FALL_NUM2.ulBulk);  // R/W
;;;1896   		MSPI_RegisterWrite((uint32_t)(0x006C), tSW92513_HoppFreq_AFEReg_CFG.PHTCR_RISE_NUM.ulBulk);  // R/W
;;;1897   		MSPI_RegisterWrite((uint32_t)(0x0070), tSW92513_HoppFreq_AFEReg_CFG.PHTCR_FALL_NUM.ulBulk);  // R/W
;;;1898   		MSPI_RegisterWrite((uint32_t)(0x0074), tSW92513_HoppFreq_AFEReg_CFG.VCR_NUM.ulBulk);  // R/W
;;;1899   		MSPI_RegisterWrite((uint32_t)(0x0078), tSW92513_HoppFreq_AFEReg_CFG.RSTI_RISE_NUM.ulBulk);  // R/W
;;;1900   		MSPI_RegisterWrite((uint32_t)(0x007C), tSW92513_HoppFreq_AFEReg_CFG.RSTI_FALL_NUM1.ulBulk);  // R/W
;;;1901   		MSPI_RegisterWrite((uint32_t)(0x0080), tSW92513_HoppFreq_AFEReg_CFG.RSTI_FALL_NUM2.ulBulk);  // R/W
;;;1902   		MSPI_RegisterWrite((uint32_t)(0x0084), tSW92513_HoppFreq_AFEReg_CFG.PHTH0_RISE_NUM.ulBulk);  // R/W
;;;1903   		MSPI_RegisterWrite((uint32_t)(0x0088), tSW92513_HoppFreq_AFEReg_CFG.PHTH0_FALL_NUM.ulBulk);  // R/W
;;;1904   		MSPI_RegisterWrite((uint32_t)(0x008C), tSW92513_HoppFreq_AFEReg_CFG.PHTH1_RISE_NUM.ulBulk);  // R/W
;;;1905   		MSPI_RegisterWrite((uint32_t)(0x0090), tSW92513_HoppFreq_AFEReg_CFG.PHTH1_FALL_NUM.ulBulk);  // R/W
;;;1906   		MSPI_RegisterWrite((uint32_t)(0x0098), tSW92513_HoppFreq_AFEReg_CFG.PHT_RISE_NUM.ulBulk);  // R/W
;;;1907   		MSPI_RegisterWrite((uint32_t)(0x009C), tSW92513_HoppFreq_AFEReg_CFG.PHT_FALL_NUM.ulBulk);  // R/W
;;;1908   	}
;;;1909   #else /* USED_NOISE_HOPPING_FREQ */
;;;1910   	MSPI_RegisterWrite((uint32_t)(0x0040), s_pktmoduleSRICCommonConf->PWM_PRD_CTL.ulBulk);  // R/W
;;;1911   	MSPI_RegisterWrite((uint32_t)(0x0048), s_pktmoduleSRICCommonConf->CVC1_DRV_CTL2.ulBulk);  // R/W
;;;1912   	MSPI_RegisterWrite((uint32_t)(0x004C), s_pktmoduleSRICCommonConf->CVC1_DRV_RISE_NUM.ulBulk);  // R/W
;;;1913   	MSPI_RegisterWrite((uint32_t)(0x0050), s_pktmoduleSRICCommonConf->CVC1_DRV_FALL_NUM.ulBulk);  // R/W
;;;1914   	MSPI_RegisterWrite((uint32_t)(0x0054), s_pktmoduleSRICCommonConf->CVC1_DRV_D_RISE_NUM.ulBulk);  // R/W
;;;1915   	MSPI_RegisterWrite((uint32_t)(0x0058), s_pktmoduleSRICCommonConf->CVC1_DRV_D_FALL_NUM.ulBulk);  // R/W
;;;1916   	MSPI_RegisterWrite((uint32_t)(0x005C), s_pktmoduleSRICCommonConf->SMPL_CTL.ulBulk);  // R/W
;;;1917   	MSPI_RegisterWrite((uint32_t)(0x0060), s_pktmoduleSRICCommonConf->RSTP_RISE_NUM.ulBulk);  // R/W
;;;1918   	MSPI_RegisterWrite((uint32_t)(0x0064), s_pktmoduleSRICCommonConf->RSTP_FALL_NUM1.ulBulk);  // R/W
;;;1919   	MSPI_RegisterWrite((uint32_t)(0x0068), s_pktmoduleSRICCommonConf->RSTP_FALL_NUM2.ulBulk);  // R/W
;;;1920   	MSPI_RegisterWrite((uint32_t)(0x006C), s_pktmoduleSRICCommonConf->PHTCR_RISE_NUM.ulBulk);  // R/W
;;;1921   	MSPI_RegisterWrite((uint32_t)(0x0070), s_pktmoduleSRICCommonConf->PHTCR_FALL_NUM.ulBulk);  // R/W
;;;1922   	MSPI_RegisterWrite((uint32_t)(0x0074), s_pktmoduleSRICCommonConf->VCR_NUM.ulBulk);  // R/W
;;;1923   	MSPI_RegisterWrite((uint32_t)(0x0078), s_pktmoduleSRICCommonConf->RSTI_RISE_NUM.ulBulk);  // R/W
;;;1924   	MSPI_RegisterWrite((uint32_t)(0x007C), s_pktmoduleSRICCommonConf->RSTI_FALL_NUM1.ulBulk);  // R/W
;;;1925   	MSPI_RegisterWrite((uint32_t)(0x0080), s_pktmoduleSRICCommonConf->RSTI_FALL_NUM2.ulBulk);  // R/W
;;;1926   	MSPI_RegisterWrite((uint32_t)(0x0084), s_pktmoduleSRICCommonConf->PHTH0_RISE_NUM.ulBulk);  // R/W
;;;1927   	MSPI_RegisterWrite((uint32_t)(0x0088), s_pktmoduleSRICCommonConf->PHTH0_FALL_NUM.ulBulk);  // R/W
;;;1928   	MSPI_RegisterWrite((uint32_t)(0x008C), s_pktmoduleSRICCommonConf->PHTH1_RISE_NUM.ulBulk);  // R/W
;;;1929   	MSPI_RegisterWrite((uint32_t)(0x0090), s_pktmoduleSRICCommonConf->PHTH1_FALL_NUM.ulBulk);  // R/W
;;;1930   	MSPI_RegisterWrite((uint32_t)(0x0098), s_pktmoduleSRICCommonConf->PHT_RISE_NUM.ulBulk);  // R/W
;;;1931   	MSPI_RegisterWrite((uint32_t)(0x009C), s_pktmoduleSRICCommonConf->PHT_FALL_NUM.ulBulk);  // R/W
;;;1932   #endif /* USED_NOISE_HOPPING_FREQ */
;;;1933   }
000102  bf08              IT       EQ
000104  bd10              POPEQ    {r4,pc}
000106  4c2e              LDR      r4,|L2.448|
000108  6821              LDR      r1,[r4,#0]            ;1886  ; tSW92513_HoppFreq_AFEReg_CFG
00010a  2040              MOVS     r0,#0x40              ;1886
00010c  f7fffffe          BL       MSPI_RegisterWrite
000110  6861              LDR      r1,[r4,#4]            ;1887  ; tSW92513_HoppFreq_AFEReg_CFG
000112  2048              MOVS     r0,#0x48              ;1887
000114  f7fffffe          BL       MSPI_RegisterWrite
000118  68a1              LDR      r1,[r4,#8]            ;1888  ; tSW92513_HoppFreq_AFEReg_CFG
00011a  204c              MOVS     r0,#0x4c              ;1888
00011c  f7fffffe          BL       MSPI_RegisterWrite
000120  68e1              LDR      r1,[r4,#0xc]          ;1889  ; tSW92513_HoppFreq_AFEReg_CFG
000122  2050              MOVS     r0,#0x50              ;1889
000124  f7fffffe          BL       MSPI_RegisterWrite
000128  6921              LDR      r1,[r4,#0x10]         ;1890  ; tSW92513_HoppFreq_AFEReg_CFG
00012a  2054              MOVS     r0,#0x54              ;1890
00012c  f7fffffe          BL       MSPI_RegisterWrite
000130  6961              LDR      r1,[r4,#0x14]         ;1891  ; tSW92513_HoppFreq_AFEReg_CFG
000132  2058              MOVS     r0,#0x58              ;1891
000134  f7fffffe          BL       MSPI_RegisterWrite
000138  69a1              LDR      r1,[r4,#0x18]         ;1892  ; tSW92513_HoppFreq_AFEReg_CFG
00013a  205c              MOVS     r0,#0x5c              ;1892
00013c  f7fffffe          BL       MSPI_RegisterWrite
000140  69e1              LDR      r1,[r4,#0x1c]         ;1893  ; tSW92513_HoppFreq_AFEReg_CFG
000142  2060              MOVS     r0,#0x60              ;1893
000144  f7fffffe          BL       MSPI_RegisterWrite
000148  6a21              LDR      r1,[r4,#0x20]         ;1894  ; tSW92513_HoppFreq_AFEReg_CFG
00014a  2064              MOVS     r0,#0x64              ;1894
00014c  f7fffffe          BL       MSPI_RegisterWrite
000150  6a61              LDR      r1,[r4,#0x24]         ;1895  ; tSW92513_HoppFreq_AFEReg_CFG
000152  2068              MOVS     r0,#0x68              ;1895
000154  f7fffffe          BL       MSPI_RegisterWrite
000158  6aa1              LDR      r1,[r4,#0x28]         ;1896  ; tSW92513_HoppFreq_AFEReg_CFG
00015a  206c              MOVS     r0,#0x6c              ;1896
00015c  f7fffffe          BL       MSPI_RegisterWrite
000160  6ae1              LDR      r1,[r4,#0x2c]         ;1897  ; tSW92513_HoppFreq_AFEReg_CFG
000162  2070              MOVS     r0,#0x70              ;1897
000164  f7fffffe          BL       MSPI_RegisterWrite
000168  6b21              LDR      r1,[r4,#0x30]         ;1898  ; tSW92513_HoppFreq_AFEReg_CFG
00016a  2074              MOVS     r0,#0x74              ;1898
00016c  f7fffffe          BL       MSPI_RegisterWrite
000170  6b61              LDR      r1,[r4,#0x34]         ;1899  ; tSW92513_HoppFreq_AFEReg_CFG
000172  2078              MOVS     r0,#0x78              ;1899
000174  f7fffffe          BL       MSPI_RegisterWrite
000178  6ba1              LDR      r1,[r4,#0x38]         ;1900  ; tSW92513_HoppFreq_AFEReg_CFG
00017a  207c              MOVS     r0,#0x7c              ;1900
00017c  f7fffffe          BL       MSPI_RegisterWrite
000180  6be1              LDR      r1,[r4,#0x3c]         ;1901  ; tSW92513_HoppFreq_AFEReg_CFG
000182  2080              MOVS     r0,#0x80              ;1901
000184  f7fffffe          BL       MSPI_RegisterWrite
000188  6c21              LDR      r1,[r4,#0x40]         ;1902  ; tSW92513_HoppFreq_AFEReg_CFG
00018a  2084              MOVS     r0,#0x84              ;1902
00018c  f7fffffe          BL       MSPI_RegisterWrite
000190  6c61              LDR      r1,[r4,#0x44]         ;1903  ; tSW92513_HoppFreq_AFEReg_CFG
000192  2088              MOVS     r0,#0x88              ;1903
000194  f7fffffe          BL       MSPI_RegisterWrite
000198  6ca1              LDR      r1,[r4,#0x48]         ;1904  ; tSW92513_HoppFreq_AFEReg_CFG
00019a  208c              MOVS     r0,#0x8c              ;1904
00019c  f7fffffe          BL       MSPI_RegisterWrite
0001a0  6ce1              LDR      r1,[r4,#0x4c]         ;1905  ; tSW92513_HoppFreq_AFEReg_CFG
0001a2  2090              MOVS     r0,#0x90              ;1905
0001a4  f7fffffe          BL       MSPI_RegisterWrite
0001a8  6d21              LDR      r1,[r4,#0x50]         ;1906  ; tSW92513_HoppFreq_AFEReg_CFG
0001aa  2098              MOVS     r0,#0x98              ;1906
0001ac  f7fffffe          BL       MSPI_RegisterWrite
0001b0  6d61              LDR      r1,[r4,#0x54]         ;1907  ; tSW92513_HoppFreq_AFEReg_CFG
0001b2  e8bd4010          POP      {r4,lr}               ;1907
0001b6  209c              MOVS     r0,#0x9c              ;1907
0001b8  f7ffbffe          B.W      MSPI_RegisterWrite
;;;1934   
                          ENDP

                  |L2.444|
                          DCD      ||.data||
                  |L2.448|
                          DCD      ||.data||+0x1c

                          AREA ||i.SW92513_Reg_CRTuneSetting||, CODE, READONLY, ALIGN=2

                  SW92513_Reg_CRTuneSetting PROC
;;;1590   
;;;1591   static void SW92513_Reg_CRTuneSetting(eCRTuneType_t eCRTuneType)
000000  2800              CMP      r0,#0
;;;1592   {
;;;1593   	if(eCRTuneType == CRTUNE_TYPE_INIT || eCRTuneType == CRTUNE_TYPE_MAIN_FRQ)
000002  bf1c              ITT      NE
000004  2801              CMPNE    r0,#1
;;;1594   	{
;;;1595   		MSPI_RegisterMultiWrite((uint32_t)(0x021C), (uint32_t *)&s_pktmoduleSRICCommonConf->R0_CR_R1G_MUX1_2[0].ulBulk);  // R/W
;;;1596   		MSPI_RegisterMultiWrite((uint32_t)(0x0220), (uint32_t *)&s_pktmoduleSRICCommonConf->R0_CR_R2G_MUX1_2[0].ulBulk);  // R/W
;;;1597   	    MSPI_RegisterMultiWrite((uint32_t)(0x0224), (uint32_t *)&s_pktmoduleSRICCommonConf->R0_CR_R3G_MUX1_2[0].ulBulk);  // R/W
;;;1598   	    MSPI_RegisterMultiWrite((uint32_t)(0x0228), (uint32_t *)&s_pktmoduleSRICCommonConf->R0_CR_R1G_MUX3_4[0].ulBulk);  // R/W
;;;1599   	    MSPI_RegisterMultiWrite((uint32_t)(0x022C), (uint32_t *)&s_pktmoduleSRICCommonConf->R0_CR_R2G_MUX3_4[0].ulBulk);  // R/W
;;;1600   	    MSPI_RegisterMultiWrite((uint32_t)(0x0230), (uint32_t *)&s_pktmoduleSRICCommonConf->R0_CR_R3G_MUX3_4[0].ulBulk);  // R/W
;;;1601   	    MSPI_RegisterMultiWrite((uint32_t)(0x0234), (uint32_t *)&s_pktmoduleSRICCommonConf->R0_CR_R1G_MUX5_6[0].ulBulk);  // R/W
;;;1602   	    MSPI_RegisterMultiWrite((uint32_t)(0x0238), (uint32_t *)&s_pktmoduleSRICCommonConf->R0_CR_R2G_MUX5_6[0].ulBulk);  // R/W
;;;1603   	    MSPI_RegisterMultiWrite((uint32_t)(0x023C), (uint32_t *)&s_pktmoduleSRICCommonConf->R0_CR_R3G_MUX5_6[0].ulBulk);  // R/W
;;;1604   	    MSPI_RegisterMultiWrite((uint32_t)(0x0240), (uint32_t *)&s_pktmoduleSRICCommonConf->R0_CR_R1G_MUX7_8[0].ulBulk);  // R/W
;;;1605   	    MSPI_RegisterMultiWrite((uint32_t)(0x0244), (uint32_t *)&s_pktmoduleSRICCommonConf->R0_CR_R2G_MUX7_8[0].ulBulk);  // R/W
;;;1606   	    MSPI_RegisterMultiWrite((uint32_t)(0x0248), (uint32_t *)&s_pktmoduleSRICCommonConf->R0_CR_R3G_MUX7_8[0].ulBulk);  // R/W
;;;1607   	    MSPI_RegisterMultiWrite((uint32_t)(0x024C), (uint32_t *)&s_pktmoduleSRICCommonConf->R0_CR_R1G_MUX9_10[0].ulBulk);  // R/W
;;;1608   	    MSPI_RegisterMultiWrite((uint32_t)(0x0250), (uint32_t *)&s_pktmoduleSRICCommonConf->R0_CR_R2G_MUX9_10[0].ulBulk);  // R/W
;;;1609   	    MSPI_RegisterMultiWrite((uint32_t)(0x0254), (uint32_t *)&s_pktmoduleSRICCommonConf->R0_CR_R3G_MUX9_10[0].ulBulk);  // R/W
;;;1610   	    MSPI_RegisterMultiWrite((uint32_t)(0x0258), (uint32_t *)&s_pktmoduleSRICCommonConf->R0_CR_GTUNE1[0].ulBulk);  // R/W
;;;1611   	    MSPI_RegisterMultiWrite((uint32_t)(0x025C), (uint32_t *)&s_pktmoduleSRICCommonConf->R0_CR_GTUNE2[0].ulBulk);  // R/W
;;;1612   	    MSPI_RegisterMultiWrite((uint32_t)(0x031C), (uint32_t *)&s_pktmoduleSRICCommonConf->R1_CR_R1G_MUX1_2[0].ulBulk);  // R/W
;;;1613   	    MSPI_RegisterMultiWrite((uint32_t)(0x0320), (uint32_t *)&s_pktmoduleSRICCommonConf->R1_CR_R2G_MUX1_2[0].ulBulk);  // R/W
;;;1614   	    MSPI_RegisterMultiWrite((uint32_t)(0x0324), (uint32_t *)&s_pktmoduleSRICCommonConf->R1_CR_R3G_MUX1_2[0].ulBulk);  // R/W
;;;1615   	    MSPI_RegisterMultiWrite((uint32_t)(0x0328), (uint32_t *)&s_pktmoduleSRICCommonConf->R1_CR_R1G_MUX3_4[0].ulBulk);  // R/W
;;;1616   	    MSPI_RegisterMultiWrite((uint32_t)(0x032C), (uint32_t *)&s_pktmoduleSRICCommonConf->R1_CR_R2G_MUX3_4[0].ulBulk);  // R/W
;;;1617   	    MSPI_RegisterMultiWrite((uint32_t)(0x0330), (uint32_t *)&s_pktmoduleSRICCommonConf->R1_CR_R3G_MUX3_4[0].ulBulk);  // R/W
;;;1618   	    MSPI_RegisterMultiWrite((uint32_t)(0x0334), (uint32_t *)&s_pktmoduleSRICCommonConf->R1_CR_R1G_MUX5_6[0].ulBulk);  // R/W
;;;1619   	    MSPI_RegisterMultiWrite((uint32_t)(0x0338), (uint32_t *)&s_pktmoduleSRICCommonConf->R1_CR_R2G_MUX5_6[0].ulBulk);  // R/W
;;;1620   	    MSPI_RegisterMultiWrite((uint32_t)(0x033C), (uint32_t *)&s_pktmoduleSRICCommonConf->R1_CR_R3G_MUX5_6[0].ulBulk);  // R/W
;;;1621   	    MSPI_RegisterMultiWrite((uint32_t)(0x0340), (uint32_t *)&s_pktmoduleSRICCommonConf->R1_CR_R1G_MUX7_8[0].ulBulk);  // R/W
;;;1622   	    MSPI_RegisterMultiWrite((uint32_t)(0x0344), (uint32_t *)&s_pktmoduleSRICCommonConf->R1_CR_R2G_MUX7_8[0].ulBulk);  // R/W
;;;1623   	    MSPI_RegisterMultiWrite((uint32_t)(0x0348), (uint32_t *)&s_pktmoduleSRICCommonConf->R1_CR_R3G_MUX7_8[0].ulBulk);  // R/W
;;;1624   	    MSPI_RegisterMultiWrite((uint32_t)(0x034C), (uint32_t *)&s_pktmoduleSRICCommonConf->R1_CR_R1G_MUX9_10[0].ulBulk);  // R/W
;;;1625   	    MSPI_RegisterMultiWrite((uint32_t)(0x0350), (uint32_t *)&s_pktmoduleSRICCommonConf->R1_CR_R2G_MUX9_10[0].ulBulk);  // R/W
;;;1626   	    MSPI_RegisterMultiWrite((uint32_t)(0x0354), (uint32_t *)&s_pktmoduleSRICCommonConf->R1_CR_R3G_MUX9_10[0].ulBulk);  // R/W
;;;1627   	    MSPI_RegisterMultiWrite((uint32_t)(0x0358), (uint32_t *)&s_pktmoduleSRICCommonConf->R1_CR_GTUNE1[0].ulBulk);  // R/W
;;;1628   	    MSPI_RegisterMultiWrite((uint32_t)(0x035C), (uint32_t *)&s_pktmoduleSRICCommonConf->R1_CR_GTUNE2[0].ulBulk);  // R/W
;;;1629   	}
;;;1630   //#if USED_NOISE_HOPPING_FREQ
;;;1631   //	else if(eCRTuneType == CRTUNE_TYPE_HOPP1_FRQ)
;;;1632   //	{
;;;1633   //		MSPI_RegisterMultiWrite((uint32_t)(0x0100), (uint32_t *)&tSW92512_HoppFrqCRReg_CFG.R0_CR1_MUX1_1[0].ulBulk);
;;;1634   //		MSPI_RegisterMultiWrite((uint32_t)(0x0104), (uint32_t *)&tSW92512_HoppFrqCRReg_CFG.R0_CR1_MUX1_2[0].ulBulk);
;;;1635   //		MSPI_RegisterMultiWrite((uint32_t)(0x0108), (uint32_t *)&tSW92512_HoppFrqCRReg_CFG.R0_CR1_MUX2[0].ulBulk);
;;;1636   //		MSPI_RegisterMultiWrite((uint32_t)(0x010C), (uint32_t *)&tSW92512_HoppFrqCRReg_CFG.R0_CR1_MUX3[0].ulBulk);
;;;1637   //		MSPI_RegisterMultiWrite((uint32_t)(0x0110), (uint32_t *)&tSW92512_HoppFrqCRReg_CFG.R0_CR1_MUX4[0].ulBulk);
;;;1638   //		MSPI_RegisterMultiWrite((uint32_t)(0x0114), (uint32_t *)&tSW92512_HoppFrqCRReg_CFG.R0_CR1_MUX5[0].ulBulk);
;;;1639   //		MSPI_RegisterMultiWrite((uint32_t)(0x0118), (uint32_t *)&tSW92512_HoppFrqCRReg_CFG.R0_CR1_MUX6[0].ulBulk);
;;;1640   //		MSPI_RegisterMultiWrite((uint32_t)(0x011C), (uint32_t *)&tSW92512_HoppFrqCRReg_CFG.R0_CR1_MUX7[0].ulBulk);
;;;1641   //		MSPI_RegisterMultiWrite((uint32_t)(0x0120), (uint32_t *)&tSW92512_HoppFrqCRReg_CFG.R0_CR1_MUX8[0].ulBulk);
;;;1642   //	#if (FINGER_MUX_NUM > 9)
;;;1643   //		MSPI_RegisterMultiWrite((uint32_t)(0x0124), (uint32_t *)&tSW92512_HoppFrqCRReg_CFG.R0_CR1_MUX9[0].ulBulk);
;;;1644   //	#endif
;;;1645   //		MSPI_RegisterMultiWrite((uint32_t)(0x0128), (uint32_t *)&tSW92512_HoppFrqCRReg_CFG.R0_CR1_MUX10_1[0].ulBulk);
;;;1646   //		MSPI_RegisterMultiWrite((uint32_t)(0x012C), (uint32_t *)&tSW92512_HoppFrqCRReg_CFG.R0_CR1_MUX10_2[0].ulBulk);
;;;1647   //
;;;1648   //		MSPI_RegisterMultiWrite((uint32_t)(0x0180), (uint32_t *)&tSW92512_HoppFrqCRReg_CFG.R1_CR1_MUX1_1[0].ulBulk);
;;;1649   //		MSPI_RegisterMultiWrite((uint32_t)(0x0184), (uint32_t *)&tSW92512_HoppFrqCRReg_CFG.R1_CR1_MUX1_2[0].ulBulk);
;;;1650   //		MSPI_RegisterMultiWrite((uint32_t)(0x0188), (uint32_t *)&tSW92512_HoppFrqCRReg_CFG.R1_CR1_MUX2[0].ulBulk);
;;;1651   //		MSPI_RegisterMultiWrite((uint32_t)(0x018C), (uint32_t *)&tSW92512_HoppFrqCRReg_CFG.R1_CR1_MUX3[0].ulBulk);
;;;1652   //		MSPI_RegisterMultiWrite((uint32_t)(0x0190), (uint32_t *)&tSW92512_HoppFrqCRReg_CFG.R1_CR1_MUX4[0].ulBulk);
;;;1653   //		MSPI_RegisterMultiWrite((uint32_t)(0x0194), (uint32_t *)&tSW92512_HoppFrqCRReg_CFG.R1_CR1_MUX5[0].ulBulk);
;;;1654   //		MSPI_RegisterMultiWrite((uint32_t)(0x0198), (uint32_t *)&tSW92512_HoppFrqCRReg_CFG.R1_CR1_MUX6[0].ulBulk);
;;;1655   //		MSPI_RegisterMultiWrite((uint32_t)(0x019C), (uint32_t *)&tSW92512_HoppFrqCRReg_CFG.R1_CR1_MUX7[0].ulBulk);
;;;1656   //		MSPI_RegisterMultiWrite((uint32_t)(0x01A0), (uint32_t *)&tSW92512_HoppFrqCRReg_CFG.R1_CR1_MUX8[0].ulBulk);
;;;1657   //	#if (FINGER_MUX_NUM > 9)
;;;1658   //		MSPI_RegisterMultiWrite((uint32_t)(0x01A4), (uint32_t *)&tSW92512_HoppFrqCRReg_CFG.R1_CR1_MUX9[0].ulBulk);
;;;1659   //	#endif
;;;1660   //		MSPI_RegisterMultiWrite((uint32_t)(0x01A8), (uint32_t *)&tSW92512_HoppFrqCRReg_CFG.R1_CR1_MUX10_1[0].ulBulk);
;;;1661   //		MSPI_RegisterMultiWrite((uint32_t)(0x01AC), (uint32_t *)&tSW92512_HoppFrqCRReg_CFG.R1_CR1_MUX10_2[0].ulBulk);
;;;1662   //	}
;;;1663   //#endif /* USED_NOISE_HOPPING_FREQ */
;;;1664   
;;;1665   //	if(eCRTuneType == CRTUNE_TYPE_INIT)
;;;1666   //	{
;;;1667   //		MSPI_RegisterMultiWrite((uint32_t)(0x0130), (uint32_t *)&s_pktmoduleSRICCommonConf->R0_CR_GTUNE[0].ulBulk);
;;;1668   //		MSPI_RegisterWrite((uint32_t)(0x0134), s_pktmoduleSRICCommonConf->R0_CFGR_TUNE_GROUP.ulBulk);
;;;1669   //		MSPI_RegisterMultiWrite((uint32_t)(0x01B0), (uint32_t *)&s_pktmoduleSRICCommonConf->R1_CR_GTUNE[0].ulBulk);
;;;1670   //		MSPI_RegisterWrite((uint32_t)(0x01B4), s_pktmoduleSRICCommonConf->R1_CFGR_TUNE_GROUP.ulBulk);
;;;1671   //		MSPI_RegisterWrite((uint32_t)(0x01C4), s_pktmoduleSRICCommonConf->CFGR_TUNE_LOWER.ulBulk);
;;;1672   //		MSPI_RegisterWrite((uint32_t)(0x01C8), s_pktmoduleSRICCommonConf->CFGR_TUNE_UPPER.ulBulk);
;;;1673   //	}
;;;1674   }
000006  4770              BXNE     lr
000008  b510              PUSH     {r4,lr}               ;1592
00000a  4c78              LDR      r4,|L3.492|
00000c  6820              LDR      r0,[r4,#0]            ;1595  ; s_pktmoduleSRICCommonConf
00000e  f50071aa          ADD      r1,r0,#0x154          ;1595
000012  f44f7007          MOV      r0,#0x21c             ;1595
000016  f7fffffe          BL       MSPI_RegisterMultiWrite
00001a  6820              LDR      r0,[r4,#0]            ;1596  ; s_pktmoduleSRICCommonConf
00001c  f50071b2          ADD      r1,r0,#0x164          ;1596
000020  f44f7008          MOV      r0,#0x220             ;1596
000024  f7fffffe          BL       MSPI_RegisterMultiWrite
000028  6820              LDR      r0,[r4,#0]            ;1597  ; s_pktmoduleSRICCommonConf
00002a  f50071ba          ADD      r1,r0,#0x174          ;1597
00002e  f44f7009          MOV      r0,#0x224             ;1597
000032  f7fffffe          BL       MSPI_RegisterMultiWrite
000036  6820              LDR      r0,[r4,#0]            ;1598  ; s_pktmoduleSRICCommonConf
000038  f50071c2          ADD      r1,r0,#0x184          ;1598
00003c  f44f700a          MOV      r0,#0x228             ;1598
000040  f7fffffe          BL       MSPI_RegisterMultiWrite
000044  6820              LDR      r0,[r4,#0]            ;1599  ; s_pktmoduleSRICCommonConf
000046  f50071ca          ADD      r1,r0,#0x194          ;1599
00004a  f44f700b          MOV      r0,#0x22c             ;1599
00004e  f7fffffe          BL       MSPI_RegisterMultiWrite
000052  6820              LDR      r0,[r4,#0]            ;1600  ; s_pktmoduleSRICCommonConf
000054  f50071d2          ADD      r1,r0,#0x1a4          ;1600
000058  f44f700c          MOV      r0,#0x230             ;1600
00005c  f7fffffe          BL       MSPI_RegisterMultiWrite
000060  6820              LDR      r0,[r4,#0]            ;1601  ; s_pktmoduleSRICCommonConf
000062  f50071da          ADD      r1,r0,#0x1b4          ;1601
000066  f44f700d          MOV      r0,#0x234             ;1601
00006a  f7fffffe          BL       MSPI_RegisterMultiWrite
00006e  6820              LDR      r0,[r4,#0]            ;1602  ; s_pktmoduleSRICCommonConf
000070  f50071e2          ADD      r1,r0,#0x1c4          ;1602
000074  f44f700e          MOV      r0,#0x238             ;1602
000078  f7fffffe          BL       MSPI_RegisterMultiWrite
00007c  6820              LDR      r0,[r4,#0]            ;1603  ; s_pktmoduleSRICCommonConf
00007e  f50071ea          ADD      r1,r0,#0x1d4          ;1603
000082  f44f700f          MOV      r0,#0x23c             ;1603
000086  f7fffffe          BL       MSPI_RegisterMultiWrite
00008a  6820              LDR      r0,[r4,#0]            ;1604  ; s_pktmoduleSRICCommonConf
00008c  f50071f2          ADD      r1,r0,#0x1e4          ;1604
000090  f44f7010          MOV      r0,#0x240             ;1604
000094  f7fffffe          BL       MSPI_RegisterMultiWrite
000098  6820              LDR      r0,[r4,#0]            ;1605  ; s_pktmoduleSRICCommonConf
00009a  f50071fa          ADD      r1,r0,#0x1f4          ;1605
00009e  f44f7011          MOV      r0,#0x244             ;1605
0000a2  f7fffffe          BL       MSPI_RegisterMultiWrite
0000a6  6820              LDR      r0,[r4,#0]            ;1606  ; s_pktmoduleSRICCommonConf
0000a8  f5007101          ADD      r1,r0,#0x204          ;1606
0000ac  f44f7012          MOV      r0,#0x248             ;1606
0000b0  f7fffffe          BL       MSPI_RegisterMultiWrite
0000b4  6820              LDR      r0,[r4,#0]            ;1607  ; s_pktmoduleSRICCommonConf
0000b6  f5007105          ADD      r1,r0,#0x214          ;1607
0000ba  f44f7013          MOV      r0,#0x24c             ;1607
0000be  f7fffffe          BL       MSPI_RegisterMultiWrite
0000c2  6820              LDR      r0,[r4,#0]            ;1608  ; s_pktmoduleSRICCommonConf
0000c4  f5007109          ADD      r1,r0,#0x224          ;1608
0000c8  f44f7014          MOV      r0,#0x250             ;1608
0000cc  f7fffffe          BL       MSPI_RegisterMultiWrite
0000d0  6820              LDR      r0,[r4,#0]            ;1609  ; s_pktmoduleSRICCommonConf
0000d2  f500710d          ADD      r1,r0,#0x234          ;1609
0000d6  f44f7015          MOV      r0,#0x254             ;1609
0000da  f7fffffe          BL       MSPI_RegisterMultiWrite
0000de  6820              LDR      r0,[r4,#0]            ;1610  ; s_pktmoduleSRICCommonConf
0000e0  f5007111          ADD      r1,r0,#0x244          ;1610
0000e4  f44f7016          MOV      r0,#0x258             ;1610
0000e8  f7fffffe          BL       MSPI_RegisterMultiWrite
0000ec  6820              LDR      r0,[r4,#0]            ;1611  ; s_pktmoduleSRICCommonConf
0000ee  f5007115          ADD      r1,r0,#0x254          ;1611
0000f2  f44f7017          MOV      r0,#0x25c             ;1611
0000f6  f7fffffe          BL       MSPI_RegisterMultiWrite
0000fa  6820              LDR      r0,[r4,#0]            ;1612  ; s_pktmoduleSRICCommonConf
0000fc  f5007136          ADD      r1,r0,#0x2d8          ;1612
000100  f44f7047          MOV      r0,#0x31c             ;1612
000104  f7fffffe          BL       MSPI_RegisterMultiWrite
000108  6820              LDR      r0,[r4,#0]            ;1613  ; s_pktmoduleSRICCommonConf
00010a  f500713a          ADD      r1,r0,#0x2e8          ;1613
00010e  f44f7048          MOV      r0,#0x320             ;1613
000112  f7fffffe          BL       MSPI_RegisterMultiWrite
000116  6820              LDR      r0,[r4,#0]            ;1614  ; s_pktmoduleSRICCommonConf
000118  f500713e          ADD      r1,r0,#0x2f8          ;1614
00011c  f44f7049          MOV      r0,#0x324             ;1614
000120  f7fffffe          BL       MSPI_RegisterMultiWrite
000124  6820              LDR      r0,[r4,#0]            ;1615  ; s_pktmoduleSRICCommonConf
000126  f5007142          ADD      r1,r0,#0x308          ;1615
00012a  f44f704a          MOV      r0,#0x328             ;1615
00012e  f7fffffe          BL       MSPI_RegisterMultiWrite
000132  6820              LDR      r0,[r4,#0]            ;1616  ; s_pktmoduleSRICCommonConf
000134  f5007146          ADD      r1,r0,#0x318          ;1616
000138  f44f704b          MOV      r0,#0x32c             ;1616
00013c  f7fffffe          BL       MSPI_RegisterMultiWrite
000140  6820              LDR      r0,[r4,#0]            ;1617  ; s_pktmoduleSRICCommonConf
000142  f500714a          ADD      r1,r0,#0x328          ;1617
000146  f44f704c          MOV      r0,#0x330             ;1617
00014a  f7fffffe          BL       MSPI_RegisterMultiWrite
00014e  6820              LDR      r0,[r4,#0]            ;1618  ; s_pktmoduleSRICCommonConf
000150  f500714e          ADD      r1,r0,#0x338          ;1618
000154  f44f704d          MOV      r0,#0x334             ;1618
000158  f7fffffe          BL       MSPI_RegisterMultiWrite
00015c  6820              LDR      r0,[r4,#0]            ;1619  ; s_pktmoduleSRICCommonConf
00015e  f5007152          ADD      r1,r0,#0x348          ;1619
000162  f44f704e          MOV      r0,#0x338             ;1619
000166  f7fffffe          BL       MSPI_RegisterMultiWrite
00016a  6820              LDR      r0,[r4,#0]            ;1620  ; s_pktmoduleSRICCommonConf
00016c  f5007156          ADD      r1,r0,#0x358          ;1620
000170  f44f704f          MOV      r0,#0x33c             ;1620
000174  f7fffffe          BL       MSPI_RegisterMultiWrite
000178  6820              LDR      r0,[r4,#0]            ;1621  ; s_pktmoduleSRICCommonConf
00017a  f500715a          ADD      r1,r0,#0x368          ;1621
00017e  f44f7050          MOV      r0,#0x340             ;1621
000182  f7fffffe          BL       MSPI_RegisterMultiWrite
000186  6820              LDR      r0,[r4,#0]            ;1622  ; s_pktmoduleSRICCommonConf
000188  f500715e          ADD      r1,r0,#0x378          ;1622
00018c  f44f7051          MOV      r0,#0x344             ;1622
000190  f7fffffe          BL       MSPI_RegisterMultiWrite
000194  6820              LDR      r0,[r4,#0]            ;1623  ; s_pktmoduleSRICCommonConf
000196  f5007162          ADD      r1,r0,#0x388          ;1623
00019a  f44f7052          MOV      r0,#0x348             ;1623
00019e  f7fffffe          BL       MSPI_RegisterMultiWrite
0001a2  6820              LDR      r0,[r4,#0]            ;1624  ; s_pktmoduleSRICCommonConf
0001a4  f5007166          ADD      r1,r0,#0x398          ;1624
0001a8  f44f7053          MOV      r0,#0x34c             ;1624
0001ac  f7fffffe          BL       MSPI_RegisterMultiWrite
0001b0  6820              LDR      r0,[r4,#0]            ;1625  ; s_pktmoduleSRICCommonConf
0001b2  f500716a          ADD      r1,r0,#0x3a8          ;1625
0001b6  f44f7054          MOV      r0,#0x350             ;1625
0001ba  f7fffffe          BL       MSPI_RegisterMultiWrite
0001be  6820              LDR      r0,[r4,#0]            ;1626  ; s_pktmoduleSRICCommonConf
0001c0  f500716e          ADD      r1,r0,#0x3b8          ;1626
0001c4  f44f7055          MOV      r0,#0x354             ;1626
0001c8  f7fffffe          BL       MSPI_RegisterMultiWrite
0001cc  6820              LDR      r0,[r4,#0]            ;1627  ; s_pktmoduleSRICCommonConf
0001ce  f5007172          ADD      r1,r0,#0x3c8          ;1627
0001d2  f44f7056          MOV      r0,#0x358             ;1627
0001d6  f7fffffe          BL       MSPI_RegisterMultiWrite
0001da  6820              LDR      r0,[r4,#0]            ;1628  ; s_pktmoduleSRICCommonConf
0001dc  e8bd4010          POP      {r4,lr}               ;1628
0001e0  f5007176          ADD      r1,r0,#0x3d8          ;1628
0001e4  f44f7057          MOV      r0,#0x35c             ;1628
0001e8  f7ffbffe          B.W      MSPI_RegisterMultiWrite
;;;1675   
                          ENDP

                  |L3.492|
                          DCD      ||.data||

                          AREA ||i.SW92513_RegisterInit||, CODE, READONLY, ALIGN=2

                  SW92513_RegisterInit PROC
;;;1993   tPRODUCT_ID_t tTestProductROICBuf[MSPI_NUM];
;;;1994   bool_t SW92513_RegisterInit(eSENSING_MODE_t eSensingMode)
000000  b570              PUSH     {r4-r6,lr}
;;;1995   {
;;;1996   	bool_t bReg = YES;
;;;1997   
;;;1998   //	MSPI_RegisterWrite((uint32_t)(0x0000), s_pktmoduleSRICCommonConf->PRODUCT_ID[0].ulBulk            );  // R
;;;1999   	MSPI_RegisterWrite((uint32_t)(0x0004), s_pktmoduleSRICCommonConf->SPIS_CFG.ulBulk                 );  // R/W
000002  4cff              LDR      r4,|L4.1024|
000004  4606              MOV      r6,r0                 ;1995
000006  2501              MOVS     r5,#1                 ;1996
000008  6820              LDR      r0,[r4,#0]  ; s_pktmoduleSRICCommonConf
00000a  6841              LDR      r1,[r0,#4]
00000c  2004              MOVS     r0,#4
00000e  f7fffffe          BL       MSPI_RegisterWrite
;;;2000   	MSPI_RegisterWrite((uint32_t)(0x0008), s_pktmoduleSRICCommonConf->SPIS_ERROR_CLR.ulBulk           );  // R/W
000012  6820              LDR      r0,[r4,#0]  ; s_pktmoduleSRICCommonConf
000014  6881              LDR      r1,[r0,#8]
000016  2008              MOVS     r0,#8
000018  f7fffffe          BL       MSPI_RegisterWrite
;;;2001   //	MSPI_RegisterWrite((uint32_t)(0x000C), s_pktmoduleSRICCommonConf->SRIC_STATE[0].ulBulk            );  // R
;;;2002   	MSPI_RegisterWrite((uint32_t)(0x0010), s_pktmoduleSRICCommonConf->SPIS_PAD_CTL.ulBulk             );  // R/W
00001c  6820              LDR      r0,[r4,#0]  ; s_pktmoduleSRICCommonConf
00001e  6901              LDR      r1,[r0,#0x10]
000020  2010              MOVS     r0,#0x10
000022  f7fffffe          BL       MSPI_RegisterWrite
;;;2003   	MSPI_RegisterWrite((uint32_t)(0x0014), s_pktmoduleSRICCommonConf->SYS_CFG.ulBulk                  );  // R/W
000026  6820              LDR      r0,[r4,#0]  ; s_pktmoduleSRICCommonConf
000028  6941              LDR      r1,[r0,#0x14]
00002a  2014              MOVS     r0,#0x14
00002c  f7fffffe          BL       MSPI_RegisterWrite
;;;2004   	MSPI_RegisterWrite((uint32_t)(0x0018), s_pktmoduleSRICCommonConf->TC_START.ulBulk                 );  // R/W
000030  6820              LDR      r0,[r4,#0]  ; s_pktmoduleSRICCommonConf
000032  6981              LDR      r1,[r0,#0x18]
000034  2018              MOVS     r0,#0x18
000036  f7fffffe          BL       MSPI_RegisterWrite
;;;2005   	MSPI_RegisterWrite((uint32_t)(0x001C), s_pktmoduleSRICCommonConf->CH_MUX_NUM.ulBulk               );  // R/W
00003a  6820              LDR      r0,[r4,#0]  ; s_pktmoduleSRICCommonConf
00003c  69c1              LDR      r1,[r0,#0x1c]
00003e  201c              MOVS     r0,#0x1c
000040  f7fffffe          BL       MSPI_RegisterWrite
;;;2006   	MSPI_RegisterWrite((uint32_t)(0x0020), s_pktmoduleSRICCommonConf->MUX_DLY_0.ulBulk                );  // R/W
000044  6820              LDR      r0,[r4,#0]  ; s_pktmoduleSRICCommonConf
000046  6a01              LDR      r1,[r0,#0x20]
000048  2020              MOVS     r0,#0x20
00004a  f7fffffe          BL       MSPI_RegisterWrite
;;;2007   	MSPI_RegisterWrite((uint32_t)(0x0024), s_pktmoduleSRICCommonConf->MUX_DLY_1.ulBulk                );  // R/W
00004e  6820              LDR      r0,[r4,#0]  ; s_pktmoduleSRICCommonConf
000050  6a41              LDR      r1,[r0,#0x24]
000052  2024              MOVS     r0,#0x24
000054  f7fffffe          BL       MSPI_RegisterWrite
;;;2008   
;;;2009   	MSPI_RegisterMultiWrite((uint32_t)(0x0028), (uint32_t *)&s_pktmoduleSRICCommonConf->SDIC_CFG[0].ulBulk              );  // R/W  Must Check!!!!
000058  6820              LDR      r0,[r4,#0]  ; s_pktmoduleSRICCommonConf
00005a  f1000128          ADD      r1,r0,#0x28
00005e  2028              MOVS     r0,#0x28
000060  f7fffffe          BL       MSPI_RegisterMultiWrite
;;;2010   
;;;2011   	MSPI_RegisterWrite((uint32_t)(0x002C), s_pktmoduleSRICCommonConf->PWM_FIG_CTL.ulBulk              );  // R/W
000064  6820              LDR      r0,[r4,#0]  ; s_pktmoduleSRICCommonConf
000066  6b81              LDR      r1,[r0,#0x38]
000068  202c              MOVS     r0,#0x2c
00006a  f7fffffe          BL       MSPI_RegisterWrite
;;;2012   	MSPI_RegisterWrite((uint32_t)(0x0030), s_pktmoduleSRICCommonConf->PWM_POS_CTL.ulBulk              );  // R/W
00006e  6820              LDR      r0,[r4,#0]  ; s_pktmoduleSRICCommonConf
000070  6bc1              LDR      r1,[r0,#0x3c]
000072  2030              MOVS     r0,#0x30
000074  f7fffffe          BL       MSPI_RegisterWrite
;;;2013   	MSPI_RegisterWrite((uint32_t)(0x0034), s_pktmoduleSRICCommonConf->PWM_DAT_CTL.ulBulk              );  // R/W
000078  6820              LDR      r0,[r4,#0]  ; s_pktmoduleSRICCommonConf
00007a  6c01              LDR      r1,[r0,#0x40]
00007c  2034              MOVS     r0,#0x34
00007e  f7fffffe          BL       MSPI_RegisterWrite
;;;2014   	MSPI_RegisterWrite((uint32_t)(0x0038), s_pktmoduleSRICCommonConf->PWM_TILT_CTL.ulBulk             );  // R/W
000082  6820              LDR      r0,[r4,#0]  ; s_pktmoduleSRICCommonConf
000084  6c41              LDR      r1,[r0,#0x44]
000086  2038              MOVS     r0,#0x38
000088  f7fffffe          BL       MSPI_RegisterWrite
;;;2015   	MSPI_RegisterWrite((uint32_t)(0x003C), s_pktmoduleSRICCommonConf->PWM_ND_CTL.ulBulk               );  // R/W
00008c  6820              LDR      r0,[r4,#0]  ; s_pktmoduleSRICCommonConf
00008e  6c81              LDR      r1,[r0,#0x48]
000090  203c              MOVS     r0,#0x3c
000092  f7fffffe          BL       MSPI_RegisterWrite
;;;2016   
;;;2017   //		MSPI_RegisterWrite((uint32_t)(0x0040), s_pktmoduleSRICCommonConf->PWM_PRD_CTL.ulBulk              );  // R/W
;;;2018   	MSPI_RegisterWrite((uint32_t)(0x0044), s_pktmoduleSRICCommonConf->CVC1_DRV_CTL1.ulBulk            );  // R/W
000096  6820              LDR      r0,[r4,#0]  ; s_pktmoduleSRICCommonConf
000098  6d01              LDR      r1,[r0,#0x50]
00009a  2044              MOVS     r0,#0x44
00009c  f7fffffe          BL       MSPI_RegisterWrite
;;;2019   //		MSPI_RegisterWrite((uint32_t)(0x0048), s_pktmoduleSRICCommonConf->CVC1_DRV_CTL2.ulBulk            );  // R/W
;;;2020   //		MSPI_RegisterWrite((uint32_t)(0x004C), s_pktmoduleSRICCommonConf->CVC1_DRV_RISE_NUM.ulBulk        );  // R/W
;;;2021   //		MSPI_RegisterWrite((uint32_t)(0x0050), s_pktmoduleSRICCommonConf->CVC1_DRV_FALL_NUM.ulBulk        );  // R/W
;;;2022   //		MSPI_RegisterWrite((uint32_t)(0x0054), s_pktmoduleSRICCommonConf->CVC1_DRV_D_RISE_NUM.ulBulk      );  // R/W
;;;2023   //		MSPI_RegisterWrite((uint32_t)(0x0058), s_pktmoduleSRICCommonConf->CVC1_DRV_D_FALL_NUM.ulBulk      );  // R/W
;;;2024   //		MSPI_RegisterWrite((uint32_t)(0x005C), s_pktmoduleSRICCommonConf->SMPL_CTL.ulBulk                 );  // R/W
;;;2025   //		MSPI_RegisterWrite((uint32_t)(0x0060), s_pktmoduleSRICCommonConf->RSTP_RISE_NUM.ulBulk            );  // R/W
;;;2026   //		MSPI_RegisterWrite((uint32_t)(0x0064), s_pktmoduleSRICCommonConf->RSTP_FALL_NUM1.ulBulk           );  // R/W
;;;2027   //		MSPI_RegisterWrite((uint32_t)(0x0068), s_pktmoduleSRICCommonConf->RSTP_FALL_NUM2.ulBulk           );  // R/W
;;;2028   //		MSPI_RegisterWrite((uint32_t)(0x006C), s_pktmoduleSRICCommonConf->PHTCR_RISE_NUM.ulBulk           );  // R/W
;;;2029   //		MSPI_RegisterWrite((uint32_t)(0x0070), s_pktmoduleSRICCommonConf->PHTCR_FALL_NUM.ulBulk           );  // R/W
;;;2030   //		MSPI_RegisterWrite((uint32_t)(0x0074), s_pktmoduleSRICCommonConf->VCR_NUM.ulBulk                  );  // R/W
;;;2031   //		MSPI_RegisterWrite((uint32_t)(0x0078), s_pktmoduleSRICCommonConf->RSTI_RISE_NUM.ulBulk            );  // R/W
;;;2032   //		MSPI_RegisterWrite((uint32_t)(0x007C), s_pktmoduleSRICCommonConf->RSTI_FALL_NUM1.ulBulk           );  // R/W
;;;2033   //		MSPI_RegisterWrite((uint32_t)(0x0080), s_pktmoduleSRICCommonConf->RSTI_FALL_NUM2.ulBulk           );  // R/W
;;;2034   //		MSPI_RegisterWrite((uint32_t)(0x0084), s_pktmoduleSRICCommonConf->PHTH0_RISE_NUM.ulBulk           );  // R/W
;;;2035   //		MSPI_RegisterWrite((uint32_t)(0x0088), s_pktmoduleSRICCommonConf->PHTH0_FALL_NUM.ulBulk           );  // R/W
;;;2036   //		MSPI_RegisterWrite((uint32_t)(0x008C), s_pktmoduleSRICCommonConf->PHTH1_RISE_NUM.ulBulk           );  // R/W
;;;2037   //		MSPI_RegisterWrite((uint32_t)(0x0090), s_pktmoduleSRICCommonConf->PHTH1_FALL_NUM.ulBulk           );  // R/W
;;;2038   	MSPI_RegisterWrite((uint32_t)(0x0094), s_pktmoduleSRICCommonConf->PHT_CTL.ulBulk                  );  // R/W
0000a0  6820              LDR      r0,[r4,#0]  ; s_pktmoduleSRICCommonConf
0000a2  f8d010a0          LDR      r1,[r0,#0xa0]
0000a6  2094              MOVS     r0,#0x94
0000a8  f7fffffe          BL       MSPI_RegisterWrite
;;;2039   //		MSPI_RegisterWrite((uint32_t)(0x0098), s_pktmoduleSRICCommonConf->PHT_RISE_NUM.ulBulk             );  // R/W
;;;2040   //		MSPI_RegisterWrite((uint32_t)(0x009C), s_pktmoduleSRICCommonConf->PHT_FALL_NUM.ulBulk             );  // R/W
;;;2041   	SW92513_Reg_AFESetting(eSensingMode);
0000ac  4630              MOV      r0,r6
0000ae  f7fffffe          BL       SW92513_Reg_AFESetting
;;;2042   
;;;2043   	MSPI_RegisterWrite((uint32_t)(0x00A0), s_pktmoduleSRICCommonConf->ADC_CTL1.ulBulk                 );  // R/W
0000b2  6820              LDR      r0,[r4,#0]  ; s_pktmoduleSRICCommonConf
0000b4  f8d010ac          LDR      r1,[r0,#0xac]
0000b8  20a0              MOVS     r0,#0xa0
0000ba  f7fffffe          BL       MSPI_RegisterWrite
;;;2044   	MSPI_RegisterWrite((uint32_t)(0x00A4), s_pktmoduleSRICCommonConf->ADC_CTL2.ulBulk                 );  // R/W
0000be  6820              LDR      r0,[r4,#0]  ; s_pktmoduleSRICCommonConf
0000c0  f8d010b0          LDR      r1,[r0,#0xb0]
0000c4  20a4              MOVS     r0,#0xa4
0000c6  f7fffffe          BL       MSPI_RegisterWrite
;;;2045   	MSPI_RegisterWrite((uint32_t)(0x00A8), s_pktmoduleSRICCommonConf->ADC_CTL3.ulBulk                 );  // R/W
0000ca  6820              LDR      r0,[r4,#0]  ; s_pktmoduleSRICCommonConf
0000cc  f8d010b4          LDR      r1,[r0,#0xb4]
0000d0  20a8              MOVS     r0,#0xa8
0000d2  f7fffffe          BL       MSPI_RegisterWrite
;;;2046   	MSPI_RegisterWrite((uint32_t)(0x00AC), s_pktmoduleSRICCommonConf->ADC_CTL4.ulBulk                 );  // R/W
0000d6  6820              LDR      r0,[r4,#0]  ; s_pktmoduleSRICCommonConf
0000d8  f8d010b8          LDR      r1,[r0,#0xb8]
0000dc  20ac              MOVS     r0,#0xac
0000de  f7fffffe          BL       MSPI_RegisterWrite
;;;2047   	MSPI_RegisterWrite((uint32_t)(0x00B0), s_pktmoduleSRICCommonConf->ADC_CTL5.ulBulk                 );  // R/W
0000e2  6820              LDR      r0,[r4,#0]  ; s_pktmoduleSRICCommonConf
0000e4  f8d010bc          LDR      r1,[r0,#0xbc]
0000e8  20b0              MOVS     r0,#0xb0
0000ea  f7fffffe          BL       MSPI_RegisterWrite
;;;2048   	MSPI_RegisterWrite((uint32_t)(0x00B4), s_pktmoduleSRICCommonConf->ADC_CTL6.ulBulk                 );  // R/W
0000ee  6820              LDR      r0,[r4,#0]  ; s_pktmoduleSRICCommonConf
0000f0  f8d010c0          LDR      r1,[r0,#0xc0]
0000f4  20b4              MOVS     r0,#0xb4
0000f6  f7fffffe          BL       MSPI_RegisterWrite
;;;2049   	MSPI_RegisterWrite((uint32_t)(0x00B8), s_pktmoduleSRICCommonConf->FIG_MUX_CFG_00.ulBulk           );  // R/W
0000fa  6820              LDR      r0,[r4,#0]  ; s_pktmoduleSRICCommonConf
0000fc  f8d010c4          LDR      r1,[r0,#0xc4]
000100  20b8              MOVS     r0,#0xb8
000102  f7fffffe          BL       MSPI_RegisterWrite
;;;2050   	MSPI_RegisterWrite((uint32_t)(0x00BC), s_pktmoduleSRICCommonConf->FIG_MUX_CFG_01.ulBulk           );  // R/W
000106  6820              LDR      r0,[r4,#0]  ; s_pktmoduleSRICCommonConf
000108  f8d010c8          LDR      r1,[r0,#0xc8]
00010c  20bc              MOVS     r0,#0xbc
00010e  f7fffffe          BL       MSPI_RegisterWrite
;;;2051   	MSPI_RegisterWrite((uint32_t)(0x00C0), s_pktmoduleSRICCommonConf->RCOM_LHB_CFG.ulBulk             );  // R/W
000112  6820              LDR      r0,[r4,#0]  ; s_pktmoduleSRICCommonConf
000114  f8d010cc          LDR      r1,[r0,#0xcc]
000118  20c0              MOVS     r0,#0xc0
00011a  f7fffffe          BL       MSPI_RegisterWrite
00011e  6820              LDR      r0,[r4,#0]  ; s_pktmoduleSRICCommonConf
000120  f8d010d0          LDR      r1,[r0,#0xd0]
000124  20c4              MOVS     r0,#0xc4
000126  f7fffffe          BL       MSPI_RegisterWrite
00012a  6820              LDR      r0,[r4,#0]  ; s_pktmoduleSRICCommonConf
00012c  f8d010dc          LDR      r1,[r0,#0xdc]
000130  20c8              MOVS     r0,#0xc8
000132  f7fffffe          BL       MSPI_RegisterWrite
000136  6820              LDR      r0,[r4,#0]  ; s_pktmoduleSRICCommonConf
000138  f8d010e8          LDR      r1,[r0,#0xe8]
00013c  20cc              MOVS     r0,#0xcc
00013e  f7fffffe          BL       MSPI_RegisterWrite
000142  6820              LDR      r0,[r4,#0]  ; s_pktmoduleSRICCommonConf
000144  f8d010f4          LDR      r1,[r0,#0xf4]
000148  20d0              MOVS     r0,#0xd0
00014a  f7fffffe          BL       MSPI_RegisterWrite
;;;2052   
;;;2053   #if USED_PEN_MODE_OPERATION
;;;2054   	if(IS_FINGER_PEN_MODE(eSensingMode))
;;;2055   	{
;;;2056   		SW92513_Reg_LHBSetting(PWM_LOCAL_PEN_MODE);
;;;2057   	}
;;;2058   	else
;;;2059   #endif /* USED_PEN_MODE_OPERATION */
;;;2060   	{
;;;2061   		SW92513_Reg_LHBSetting(PWM_FULL_FINGER_MODE);
;;;2062   	}
;;;2063   
;;;2064   	MSPI_RegisterWrite((uint32_t)(0x00D4), s_pktmoduleSRICCommonConf->LHB_MUX_CTL1.ulBulk             );  // R/W
00014e  6820              LDR      r0,[r4,#0]  ; s_pktmoduleSRICCommonConf
000150  f8d01100          LDR      r1,[r0,#0x100]
000154  20d4              MOVS     r0,#0xd4
000156  f7fffffe          BL       MSPI_RegisterWrite
;;;2065   	MSPI_RegisterWrite((uint32_t)(0x00D8), s_pktmoduleSRICCommonConf->PEN_POS1_LHB_CFG.ulBulk         );  // R/W
00015a  6820              LDR      r0,[r4,#0]  ; s_pktmoduleSRICCommonConf
00015c  f8d01104          LDR      r1,[r0,#0x104]
000160  20d8              MOVS     r0,#0xd8
000162  f7fffffe          BL       MSPI_RegisterWrite
;;;2066   	MSPI_RegisterWrite((uint32_t)(0x00DC), s_pktmoduleSRICCommonConf->PEN_DAT1_LHB_CFG.ulBulk         );  // R/W
000166  6820              LDR      r0,[r4,#0]  ; s_pktmoduleSRICCommonConf
000168  f8d01108          LDR      r1,[r0,#0x108]
00016c  20dc              MOVS     r0,#0xdc
00016e  f7fffffe          BL       MSPI_RegisterWrite
;;;2067   	MSPI_RegisterWrite((uint32_t)(0x00E0), s_pktmoduleSRICCommonConf->PEN_TILT_LHB_CFG.ulBulk         );  // R/W
000172  6820              LDR      r0,[r4,#0]  ; s_pktmoduleSRICCommonConf
000174  f8d0110c          LDR      r1,[r0,#0x10c]
000178  20e0              MOVS     r0,#0xe0
00017a  f7fffffe          BL       MSPI_RegisterWrite
;;;2068   	MSPI_RegisterWrite((uint32_t)(0x00E4), s_pktmoduleSRICCommonConf->PING_MUX_CTL.ulBulk             );  // R/W
00017e  6820              LDR      r0,[r4,#0]  ; s_pktmoduleSRICCommonConf
000180  f8d01110          LDR      r1,[r0,#0x110]
000184  20e4              MOVS     r0,#0xe4
000186  f7fffffe          BL       MSPI_RegisterWrite
;;;2069   	MSPI_RegisterWrite((uint32_t)(0x00E8), s_pktmoduleSRICCommonConf->PHD_SENSE_CTL1.ulBulk           );  // R/W
00018a  6820              LDR      r0,[r4,#0]  ; s_pktmoduleSRICCommonConf
00018c  f8d01114          LDR      r1,[r0,#0x114]
000190  20e8              MOVS     r0,#0xe8
000192  f7fffffe          BL       MSPI_RegisterWrite
;;;2070   	MSPI_RegisterWrite((uint32_t)(0x00EC), s_pktmoduleSRICCommonConf->PDB_PHD_CTL.ulBulk              );  // R/W
000196  6820              LDR      r0,[r4,#0]  ; s_pktmoduleSRICCommonConf
000198  f8d01118          LDR      r1,[r0,#0x118]
00019c  20ec              MOVS     r0,#0xec
00019e  f7fffffe          BL       MSPI_RegisterWrite
;;;2071   	MSPI_RegisterWrite((uint32_t)(0x00F0), s_pktmoduleSRICCommonConf->SYS_DUMMY0.ulBulk               );  // R/W
0001a2  6820              LDR      r0,[r4,#0]  ; s_pktmoduleSRICCommonConf
0001a4  f8d0111c          LDR      r1,[r0,#0x11c]
0001a8  20f0              MOVS     r0,#0xf0
0001aa  f7fffffe          BL       MSPI_RegisterWrite
;;;2072   	MSPI_RegisterWrite((uint32_t)(0x00F4), s_pktmoduleSRICCommonConf->SYS_DUMMY1.ulBulk               );  // R/W
0001ae  6820              LDR      r0,[r4,#0]  ; s_pktmoduleSRICCommonConf
0001b0  f8d01120          LDR      r1,[r0,#0x120]
0001b4  20f4              MOVS     r0,#0xf4
0001b6  f7fffffe          BL       MSPI_RegisterWrite
;;;2073   	MSPI_RegisterWrite((uint32_t)(0x00F8), s_pktmoduleSRICCommonConf->TEST_MUX_CTL.ulBulk             );  // R/W
0001ba  6820              LDR      r0,[r4,#0]  ; s_pktmoduleSRICCommonConf
0001bc  f8d01124          LDR      r1,[r0,#0x124]
0001c0  20f8              MOVS     r0,#0xf8
0001c2  f7fffffe          BL       MSPI_RegisterWrite
;;;2074   	MSPI_RegisterWrite((uint32_t)(0x00FC), s_pktmoduleSRICCommonConf->PHD_CTL.ulBulk                  );  // R/W
0001c6  6820              LDR      r0,[r4,#0]  ; s_pktmoduleSRICCommonConf
0001c8  f8d01128          LDR      r1,[r0,#0x128]
0001cc  20fc              MOVS     r0,#0xfc
0001ce  f7fffffe          BL       MSPI_RegisterWrite
;;;2075   //	MSPI_RegisterWrite((uint32_t)(0x0100), s_pktmoduleSRICCommonConf->PHD_ST[0].ulBulk                );  // R
;;;2076   //	MSPI_RegisterWrite((uint32_t)(0x0104), s_pktmoduleSRICCommonConf->MON_R0_ADCDO[0].ulBulk          );  // R
;;;2077   //	MSPI_RegisterWrite((uint32_t)(0x0108), s_pktmoduleSRICCommonConf->MON_R1_ADCDO[0].ulBulk          );  // R
;;;2078   	MSPI_RegisterWrite((uint32_t)(0x0200), s_pktmoduleSRICCommonConf->R0_SYS_CFG.ulBulk               );  // R/W
0001d2  6820              LDR      r0,[r4,#0]  ; s_pktmoduleSRICCommonConf
0001d4  f8d01138          LDR      r1,[r0,#0x138]
0001d8  0268              LSLS     r0,r5,#9
0001da  f7fffffe          BL       MSPI_RegisterWrite
;;;2079   	MSPI_RegisterWrite((uint32_t)(0x0204), s_pktmoduleSRICCommonConf->R0_CH_EN.ulBulk                 );  // R/W
0001de  6820              LDR      r0,[r4,#0]  ; s_pktmoduleSRICCommonConf
0001e0  f8d0113c          LDR      r1,[r0,#0x13c]
0001e4  f44f7001          MOV      r0,#0x204
0001e8  f7fffffe          BL       MSPI_RegisterWrite
;;;2080   	MSPI_RegisterWrite((uint32_t)(0x0208), s_pktmoduleSRICCommonConf->R0_BUF_OPT.ulBulk               );  // R/W
0001ec  6820              LDR      r0,[r4,#0]  ; s_pktmoduleSRICCommonConf
0001ee  f8d01140          LDR      r1,[r0,#0x140]
0001f2  f44f7002          MOV      r0,#0x208
0001f6  f7fffffe          BL       MSPI_RegisterWrite
;;;2081   	MSPI_RegisterWrite((uint32_t)(0x020C), s_pktmoduleSRICCommonConf->R0_VCOMR_OPT.ulBulk             );  // R/W
0001fa  6820              LDR      r0,[r4,#0]  ; s_pktmoduleSRICCommonConf
0001fc  f8d01144          LDR      r1,[r0,#0x144]
000200  f44f7003          MOV      r0,#0x20c
000204  f7fffffe          BL       MSPI_RegisterWrite
;;;2082   	MSPI_RegisterWrite((uint32_t)(0x0210), s_pktmoduleSRICCommonConf->R0_MUX_CTL.ulBulk               );  // R/W
000208  6820              LDR      r0,[r4,#0]  ; s_pktmoduleSRICCommonConf
00020a  f8d01148          LDR      r1,[r0,#0x148]
00020e  f44f7004          MOV      r0,#0x210
000212  f7fffffe          BL       MSPI_RegisterWrite
;;;2083   	MSPI_RegisterWrite((uint32_t)(0x0214), s_pktmoduleSRICCommonConf->R0_MUX_STUCK_CTL.ulBulk         );  // R/W
000216  6820              LDR      r0,[r4,#0]  ; s_pktmoduleSRICCommonConf
000218  f8d0114c          LDR      r1,[r0,#0x14c]
00021c  f44f7005          MOV      r0,#0x214
000220  f7fffffe          BL       MSPI_RegisterWrite
;;;2084   	MSPI_RegisterWrite((uint32_t)(0x0218), s_pktmoduleSRICCommonConf->R0_LHB_MUX_CTL.ulBulk           );  // R/W
000224  6820              LDR      r0,[r4,#0]  ; s_pktmoduleSRICCommonConf
000226  f8d01150          LDR      r1,[r0,#0x150]
00022a  f44f7006          MOV      r0,#0x218
00022e  f7fffffe          BL       MSPI_RegisterWrite
;;;2085   //	MSPI_RegisterWrite((uint32_t)(0x021C), s_pktmoduleSRICCommonConf->R0_CR_R1G_MUX1_2[0].ulBulk      );  // R/W
;;;2086   //	MSPI_RegisterWrite((uint32_t)(0x0220), s_pktmoduleSRICCommonConf->R0_CR_R2G_MUX1_2[0].ulBulk      );  // R/W
;;;2087   //	MSPI_RegisterWrite((uint32_t)(0x0224), s_pktmoduleSRICCommonConf->R0_CR_R3G_MUX1_2[0].ulBulk      );  // R/W
;;;2088   //	MSPI_RegisterWrite((uint32_t)(0x0228), s_pktmoduleSRICCommonConf->R0_CR_R1G_MUX3_4[0].ulBulk      );  // R/W
;;;2089   //	MSPI_RegisterWrite((uint32_t)(0x022C), s_pktmoduleSRICCommonConf->R0_CR_R2G_MUX3_4[0].ulBulk      );  // R/W
;;;2090   //	MSPI_RegisterWrite((uint32_t)(0x0230), s_pktmoduleSRICCommonConf->R0_CR_R3G_MUX3_4[0].ulBulk      );  // R/W
;;;2091   //	MSPI_RegisterWrite((uint32_t)(0x0234), s_pktmoduleSRICCommonConf->R0_CR_R1G_MUX5_6[0].ulBulk      );  // R/W
;;;2092   //	MSPI_RegisterWrite((uint32_t)(0x0238), s_pktmoduleSRICCommonConf->R0_CR_R2G_MUX5_6[0].ulBulk      );  // R/W
;;;2093   //	MSPI_RegisterWrite((uint32_t)(0x023C), s_pktmoduleSRICCommonConf->R0_CR_R3G_MUX5_6[0].ulBulk      );  // R/W
;;;2094   //	MSPI_RegisterWrite((uint32_t)(0x0240), s_pktmoduleSRICCommonConf->R0_CR_R1G_MUX7_8[0].ulBulk      );  // R/W
;;;2095   //	MSPI_RegisterWrite((uint32_t)(0x0244), s_pktmoduleSRICCommonConf->R0_CR_R2G_MUX7_8[0].ulBulk      );  // R/W
;;;2096   //	MSPI_RegisterWrite((uint32_t)(0x0248), s_pktmoduleSRICCommonConf->R0_CR_R3G_MUX7_8[0].ulBulk      );  // R/W
;;;2097   //	MSPI_RegisterWrite((uint32_t)(0x024C), s_pktmoduleSRICCommonConf->R0_CR_R1G_MUX9_10[0].ulBulk     );  // R/W
;;;2098   //	MSPI_RegisterWrite((uint32_t)(0x0250), s_pktmoduleSRICCommonConf->R0_CR_R2G_MUX9_10[0].ulBulk     );  // R/W
;;;2099   //	MSPI_RegisterWrite((uint32_t)(0x0254), s_pktmoduleSRICCommonConf->R0_CR_R3G_MUX9_10[0].ulBulk     );  // R/W
;;;2100   //	MSPI_RegisterWrite((uint32_t)(0x0258), s_pktmoduleSRICCommonConf->R0_CR_GTUNE1[0].ulBulk          );  // R/W
;;;2101   //	MSPI_RegisterWrite((uint32_t)(0x025C), s_pktmoduleSRICCommonConf->R0_CR_GTUNE2[0].ulBulk          );  // R/W
;;;2102   	MSPI_RegisterWrite((uint32_t)(0x0260), s_pktmoduleSRICCommonConf->R0_TUNE_GROUP_SEL1.ulBulk       );  // R/W
000232  6820              LDR      r0,[r4,#0]  ; s_pktmoduleSRICCommonConf
000234  f8d01264          LDR      r1,[r0,#0x264]
000238  f44f7018          MOV      r0,#0x260
00023c  f7fffffe          BL       MSPI_RegisterWrite
;;;2103   	MSPI_RegisterWrite((uint32_t)(0x0264), s_pktmoduleSRICCommonConf->R0_TUNE_GROUP_SEL2.ulBulk       );  // R/W
000240  6820              LDR      r0,[r4,#0]  ; s_pktmoduleSRICCommonConf
000242  f8d01268          LDR      r1,[r0,#0x268]
000246  f44f7019          MOV      r0,#0x264
00024a  f7fffffe          BL       MSPI_RegisterWrite
;;;2104   	MSPI_RegisterWrite((uint32_t)(0x0268), s_pktmoduleSRICCommonConf->R0_TUNE_GROUP_SEL3.ulBulk       );  // R/W
00024e  6820              LDR      r0,[r4,#0]  ; s_pktmoduleSRICCommonConf
000250  f8d0126c          LDR      r1,[r0,#0x26c]
000254  f44f701a          MOV      r0,#0x268
000258  f7fffffe          BL       MSPI_RegisterWrite
;;;2105   	MSPI_RegisterWrite((uint32_t)(0x026C), s_pktmoduleSRICCommonConf->R0_TUNE_GROUP_SEL4.ulBulk       );  // R/W
00025c  6820              LDR      r0,[r4,#0]  ; s_pktmoduleSRICCommonConf
00025e  f8d01270          LDR      r1,[r0,#0x270]
000262  f44f701b          MOV      r0,#0x26c
000266  f7fffffe          BL       MSPI_RegisterWrite
;;;2106   	MSPI_RegisterWrite((uint32_t)(0x0270), s_pktmoduleSRICCommonConf->R0_ADC_IN_CTL.ulBulk            );  // R/W
00026a  6820              LDR      r0,[r4,#0]  ; s_pktmoduleSRICCommonConf
00026c  f8d01274          LDR      r1,[r0,#0x274]
000270  f44f701c          MOV      r0,#0x270
000274  f7fffffe          BL       MSPI_RegisterWrite
;;;2107   	MSPI_RegisterWrite((uint32_t)(0x0274), s_pktmoduleSRICCommonConf->R0_ADC_SENSE_CTL1.ulBulk        );  // R/W
000278  6820              LDR      r0,[r4,#0]  ; s_pktmoduleSRICCommonConf
00027a  f8d01278          LDR      r1,[r0,#0x278]
00027e  f44f701d          MOV      r0,#0x274
000282  f7fffffe          BL       MSPI_RegisterWrite
;;;2108   	MSPI_RegisterWrite((uint32_t)(0x0278), s_pktmoduleSRICCommonConf->R0_ADC_SENSE_CTL2.ulBulk        );  // R/W
000286  6820              LDR      r0,[r4,#0]  ; s_pktmoduleSRICCommonConf
000288  f8d0127c          LDR      r1,[r0,#0x27c]
00028c  f44f701e          MOV      r0,#0x278
000290  f7fffffe          BL       MSPI_RegisterWrite
;;;2109   	MSPI_RegisterWrite((uint32_t)(0x027C), s_pktmoduleSRICCommonConf->R0_AFE_SENSE_CTL1.ulBulk        );  // R/W
000294  6820              LDR      r0,[r4,#0]  ; s_pktmoduleSRICCommonConf
000296  f8d01280          LDR      r1,[r0,#0x280]
00029a  f44f701f          MOV      r0,#0x27c
00029e  f7fffffe          BL       MSPI_RegisterWrite
;;;2110   	MSPI_RegisterWrite((uint32_t)(0x0280), s_pktmoduleSRICCommonConf->R0_AFE_SENSE_CTL2.ulBulk        );  // R/W
0002a2  6820              LDR      r0,[r4,#0]  ; s_pktmoduleSRICCommonConf
0002a4  f8d01284          LDR      r1,[r0,#0x284]
0002a8  f44f7020          MOV      r0,#0x280
0002ac  f7fffffe          BL       MSPI_RegisterWrite
;;;2111   	MSPI_RegisterWrite((uint32_t)(0x0284), s_pktmoduleSRICCommonConf->R0_AFE_SENSE_CTL3.ulBulk        );  // R/W
0002b0  6820              LDR      r0,[r4,#0]  ; s_pktmoduleSRICCommonConf
0002b2  f8d01288          LDR      r1,[r0,#0x288]
0002b6  f44f7021          MOV      r0,#0x284
0002ba  f7fffffe          BL       MSPI_RegisterWrite
;;;2112   	MSPI_RegisterWrite((uint32_t)(0x0288), s_pktmoduleSRICCommonConf->R0_AFE_SENSE_CTL4.ulBulk        );  // R/W
0002be  6820              LDR      r0,[r4,#0]  ; s_pktmoduleSRICCommonConf
0002c0  f8d0128c          LDR      r1,[r0,#0x28c]
0002c4  f44f7022          MOV      r0,#0x288
0002c8  f7fffffe          BL       MSPI_RegisterWrite
;;;2113   	MSPI_RegisterWrite((uint32_t)(0x028C), s_pktmoduleSRICCommonConf->R0_AFE_SENSE_CTL5.ulBulk        );  // R/W
0002cc  6820              LDR      r0,[r4,#0]  ; s_pktmoduleSRICCommonConf
0002ce  f8d01290          LDR      r1,[r0,#0x290]
0002d2  f44f7023          MOV      r0,#0x28c
0002d6  f7fffffe          BL       MSPI_RegisterWrite
;;;2114   	MSPI_RegisterWrite((uint32_t)(0x0290), s_pktmoduleSRICCommonConf->R0_PDB_CTL.ulBulk               );  // R/W
0002da  6820              LDR      r0,[r4,#0]  ; s_pktmoduleSRICCommonConf
0002dc  f8d01294          LDR      r1,[r0,#0x294]
0002e0  f44f7024          MOV      r0,#0x290
0002e4  f7fffffe          BL       MSPI_RegisterWrite
;;;2115   	MSPI_RegisterWrite((uint32_t)(0x0294), s_pktmoduleSRICCommonConf->R0_TG_STUCK.ulBulk              );  // R/W
0002e8  6820              LDR      r0,[r4,#0]  ; s_pktmoduleSRICCommonConf
0002ea  f8d01298          LDR      r1,[r0,#0x298]
0002ee  f44f7025          MOV      r0,#0x294
0002f2  f7fffffe          BL       MSPI_RegisterWrite
;;;2116   	MSPI_RegisterWrite((uint32_t)(0x0298), s_pktmoduleSRICCommonConf->R0_TEST_MUX_CTL.ulBulk          );  // R/W
0002f6  6820              LDR      r0,[r4,#0]  ; s_pktmoduleSRICCommonConf
0002f8  f8d0129c          LDR      r1,[r0,#0x29c]
0002fc  f44f7026          MOV      r0,#0x298
000300  f7fffffe          BL       MSPI_RegisterWrite
;;;2117   	MSPI_RegisterWrite((uint32_t)(0x029C), s_pktmoduleSRICCommonConf->R0_RESERVE.ulBulk               );  // R/W
000304  6820              LDR      r0,[r4,#0]  ; s_pktmoduleSRICCommonConf
000306  f8d012a0          LDR      r1,[r0,#0x2a0]
00030a  f44f7027          MOV      r0,#0x29c
00030e  f7fffffe          BL       MSPI_RegisterWrite
;;;2118   	MSPI_RegisterWrite((uint32_t)(0x02A0), s_pktmoduleSRICCommonConf->R0_PHD_SENSE_CTL1.ulBulk        );  // R/W
000312  6820              LDR      r0,[r4,#0]  ; s_pktmoduleSRICCommonConf
000314  f8d012a4          LDR      r1,[r0,#0x2a4]
000318  f44f7028          MOV      r0,#0x2a0
00031c  f7fffffe          BL       MSPI_RegisterWrite
;;;2119   	MSPI_RegisterWrite((uint32_t)(0x02A4), s_pktmoduleSRICCommonConf->R0_PHD_CTL1.ulBulk              );  // R/W
000320  6820              LDR      r0,[r4,#0]  ; s_pktmoduleSRICCommonConf
000322  f8d012a8          LDR      r1,[r0,#0x2a8]
000326  f44f7029          MOV      r0,#0x2a4
00032a  f7fffffe          BL       MSPI_RegisterWrite
;;;2120   	MSPI_RegisterWrite((uint32_t)(0x02A8), s_pktmoduleSRICCommonConf->R0_PHD_CTL2.ulBulk              );  // R/W
00032e  6820              LDR      r0,[r4,#0]  ; s_pktmoduleSRICCommonConf
000330  f8d012ac          LDR      r1,[r0,#0x2ac]
000334  f44f702a          MOV      r0,#0x2a8
000338  f7fffffe          BL       MSPI_RegisterWrite
;;;2121   	MSPI_RegisterWrite((uint32_t)(0x02AC), s_pktmoduleSRICCommonConf->R0_PHD_CTL3.ulBulk              );  // R/W
00033c  6820              LDR      r0,[r4,#0]  ; s_pktmoduleSRICCommonConf
00033e  f8d012b0          LDR      r1,[r0,#0x2b0]
000342  f44f702b          MOV      r0,#0x2ac
000346  f7fffffe          BL       MSPI_RegisterWrite
;;;2122   	MSPI_RegisterWrite((uint32_t)(0x02B0), s_pktmoduleSRICCommonConf->R0_PHD_CTL4.ulBulk              );  // R/W
00034a  6820              LDR      r0,[r4,#0]  ; s_pktmoduleSRICCommonConf
00034c  f8d012b4          LDR      r1,[r0,#0x2b4]
000350  f44f702c          MOV      r0,#0x2b0
000354  f7fffffe          BL       MSPI_RegisterWrite
;;;2123   //	MSPI_RegisterWrite((uint32_t)(0x02B4), s_pktmoduleSRICCommonConf->R0_PHD_ST1[0].ulBulk            );  // R
;;;2124   	MSPI_RegisterWrite((uint32_t)(0x0300), s_pktmoduleSRICCommonConf->R1_SYS_CFG.ulBulk               );  // R/W
000358  6820              LDR      r0,[r4,#0]  ; s_pktmoduleSRICCommonConf
00035a  f8d012bc          LDR      r1,[r0,#0x2bc]
00035e  f44f7040          MOV      r0,#0x300
000362  f7fffffe          BL       MSPI_RegisterWrite
;;;2125   	MSPI_RegisterWrite((uint32_t)(0x0304), s_pktmoduleSRICCommonConf->R1_CH_EN.ulBulk                 );  // R/W
000366  6820              LDR      r0,[r4,#0]  ; s_pktmoduleSRICCommonConf
000368  f8d012c0          LDR      r1,[r0,#0x2c0]
00036c  f44f7041          MOV      r0,#0x304
000370  f7fffffe          BL       MSPI_RegisterWrite
;;;2126   	MSPI_RegisterWrite((uint32_t)(0x0308), s_pktmoduleSRICCommonConf->R1_BUF_OPT.ulBulk               );  // R/W
000374  6820              LDR      r0,[r4,#0]  ; s_pktmoduleSRICCommonConf
000376  f8d012c4          LDR      r1,[r0,#0x2c4]
00037a  f44f7042          MOV      r0,#0x308
00037e  f7fffffe          BL       MSPI_RegisterWrite
;;;2127   	MSPI_RegisterWrite((uint32_t)(0x030C), s_pktmoduleSRICCommonConf->R1_VCOMR_OPT.ulBulk             );  // R/W
000382  6820              LDR      r0,[r4,#0]  ; s_pktmoduleSRICCommonConf
000384  f8d012c8          LDR      r1,[r0,#0x2c8]
000388  f44f7043          MOV      r0,#0x30c
00038c  f7fffffe          BL       MSPI_RegisterWrite
;;;2128   	MSPI_RegisterWrite((uint32_t)(0x0310), s_pktmoduleSRICCommonConf->R1_MUX_CTL.ulBulk               );  // R/W
000390  6820              LDR      r0,[r4,#0]  ; s_pktmoduleSRICCommonConf
000392  f8d012cc          LDR      r1,[r0,#0x2cc]
000396  f44f7044          MOV      r0,#0x310
00039a  f7fffffe          BL       MSPI_RegisterWrite
;;;2129   	MSPI_RegisterWrite((uint32_t)(0x0314), s_pktmoduleSRICCommonConf->R1_MUX_STUCK_CTL.ulBulk         );  // R/W
00039e  6820              LDR      r0,[r4,#0]  ; s_pktmoduleSRICCommonConf
0003a0  f8d012d0          LDR      r1,[r0,#0x2d0]
0003a4  f44f7045          MOV      r0,#0x314
0003a8  f7fffffe          BL       MSPI_RegisterWrite
;;;2130   	MSPI_RegisterWrite((uint32_t)(0x0318), s_pktmoduleSRICCommonConf->R1_LHB_MUX_CTL.ulBulk           );  // R/W
0003ac  6820              LDR      r0,[r4,#0]  ; s_pktmoduleSRICCommonConf
0003ae  f8d012d4          LDR      r1,[r0,#0x2d4]
0003b2  f44f7046          MOV      r0,#0x318
0003b6  f7fffffe          BL       MSPI_RegisterWrite
;;;2131   //	MSPI_RegisterWrite((uint32_t)(0x031C), s_pktmoduleSRICCommonConf->R1_CR_R1G_MUX1_2[0].ulBulk      );  // R/W
;;;2132   //	MSPI_RegisterWrite((uint32_t)(0x0320), s_pktmoduleSRICCommonConf->R1_CR_R2G_MUX1_2[0].ulBulk      );  // R/W
;;;2133   //	MSPI_RegisterWrite((uint32_t)(0x0324), s_pktmoduleSRICCommonConf->R1_CR_R3G_MUX1_2[0].ulBulk      );  // R/W
;;;2134   //	MSPI_RegisterWrite((uint32_t)(0x0328), s_pktmoduleSRICCommonConf->R1_CR_R1G_MUX3_4[0].ulBulk      );  // R/W
;;;2135   //	MSPI_RegisterWrite((uint32_t)(0x032C), s_pktmoduleSRICCommonConf->R1_CR_R2G_MUX3_4[0].ulBulk      );  // R/W
;;;2136   //	MSPI_RegisterWrite((uint32_t)(0x0330), s_pktmoduleSRICCommonConf->R1_CR_R3G_MUX3_4[0].ulBulk      );  // R/W
;;;2137   //	MSPI_RegisterWrite((uint32_t)(0x0334), s_pktmoduleSRICCommonConf->R1_CR_R1G_MUX5_6[0].ulBulk      );  // R/W
;;;2138   //	MSPI_RegisterWrite((uint32_t)(0x0338), s_pktmoduleSRICCommonConf->R1_CR_R2G_MUX5_6[0].ulBulk      );  // R/W
;;;2139   //	MSPI_RegisterWrite((uint32_t)(0x033C), s_pktmoduleSRICCommonConf->R1_CR_R3G_MUX5_6[0].ulBulk      );  // R/W
;;;2140   //	MSPI_RegisterWrite((uint32_t)(0x0340), s_pktmoduleSRICCommonConf->R1_CR_R1G_MUX7_8[0].ulBulk      );  // R/W
;;;2141   //	MSPI_RegisterWrite((uint32_t)(0x0344), s_pktmoduleSRICCommonConf->R1_CR_R2G_MUX7_8[0].ulBulk      );  // R/W
;;;2142   //	MSPI_RegisterWrite((uint32_t)(0x0348), s_pktmoduleSRICCommonConf->R1_CR_R3G_MUX7_8[0].ulBulk      );  // R/W
;;;2143   //	MSPI_RegisterWrite((uint32_t)(0x034C), s_pktmoduleSRICCommonConf->R1_CR_R1G_MUX9_10[0].ulBulk     );  // R/W
;;;2144   //	MSPI_RegisterWrite((uint32_t)(0x0350), s_pktmoduleSRICCommonConf->R1_CR_R2G_MUX9_10[0].ulBulk     );  // R/W
;;;2145   //	MSPI_RegisterWrite((uint32_t)(0x0354), s_pktmoduleSRICCommonConf->R1_CR_R3G_MUX9_10[0].ulBulk     );  // R/W
;;;2146   //	MSPI_RegisterWrite((uint32_t)(0x0358), s_pktmoduleSRICCommonConf->R1_CR_GTUNE1[0].ulBulk          );  // R/W
;;;2147   //	MSPI_RegisterWrite((uint32_t)(0x035C), s_pktmoduleSRICCommonConf->R1_CR_GTUNE2[0].ulBulk          );  // R/W
;;;2148   	MSPI_RegisterWrite((uint32_t)(0x0360), s_pktmoduleSRICCommonConf->R1_TUNE_GROUP_SEL1.ulBulk       );  // R/W
0003ba  6820              LDR      r0,[r4,#0]  ; s_pktmoduleSRICCommonConf
0003bc  f8d013e8          LDR      r1,[r0,#0x3e8]
0003c0  f44f7058          MOV      r0,#0x360
0003c4  f7fffffe          BL       MSPI_RegisterWrite
;;;2149   	MSPI_RegisterWrite((uint32_t)(0x0364), s_pktmoduleSRICCommonConf->R1_TUNE_GROUP_SEL2.ulBulk       );  // R/W
0003c8  6820              LDR      r0,[r4,#0]  ; s_pktmoduleSRICCommonConf
0003ca  f8d013ec          LDR      r1,[r0,#0x3ec]
0003ce  f44f7059          MOV      r0,#0x364
0003d2  f7fffffe          BL       MSPI_RegisterWrite
;;;2150   	MSPI_RegisterWrite((uint32_t)(0x0368), s_pktmoduleSRICCommonConf->R1_TUNE_GROUP_SEL3.ulBulk       );  // R/W
0003d6  6820              LDR      r0,[r4,#0]  ; s_pktmoduleSRICCommonConf
0003d8  f8d013f0          LDR      r1,[r0,#0x3f0]
0003dc  f44f705a          MOV      r0,#0x368
0003e0  f7fffffe          BL       MSPI_RegisterWrite
;;;2151   	MSPI_RegisterWrite((uint32_t)(0x036C), s_pktmoduleSRICCommonConf->R1_TUNE_GROUP_SEL4.ulBulk       );  // R/W
0003e4  6820              LDR      r0,[r4,#0]  ; s_pktmoduleSRICCommonConf
0003e6  f8d013f4          LDR      r1,[r0,#0x3f4]
0003ea  f44f705b          MOV      r0,#0x36c
0003ee  f7fffffe          BL       MSPI_RegisterWrite
;;;2152   	MSPI_RegisterWrite((uint32_t)(0x0370), s_pktmoduleSRICCommonConf->R1_ADC_IN_CTL.ulBulk            );  // R/W
0003f2  6820              LDR      r0,[r4,#0]  ; s_pktmoduleSRICCommonConf
0003f4  f8d013f8          LDR      r1,[r0,#0x3f8]
0003f8  f44f705c          MOV      r0,#0x370
0003fc  e002              B        |L4.1028|
0003fe  0000              DCW      0x0000
                  |L4.1024|
                          DCD      ||.data||
                  |L4.1028|
000404  f7fffffe          BL       MSPI_RegisterWrite
;;;2153   	MSPI_RegisterWrite((uint32_t)(0x0374), s_pktmoduleSRICCommonConf->R1_ADC_SENSE_CTL1.ulBulk        );  // R/W
000408  6820              LDR      r0,[r4,#0]  ; s_pktmoduleSRICCommonConf
00040a  f8d013fc          LDR      r1,[r0,#0x3fc]
00040e  f44f705d          MOV      r0,#0x374
000412  f7fffffe          BL       MSPI_RegisterWrite
;;;2154   	MSPI_RegisterWrite((uint32_t)(0x0378), s_pktmoduleSRICCommonConf->R1_ADC_SENSE_CTL2.ulBulk        );  // R/W
000416  6820              LDR      r0,[r4,#0]  ; s_pktmoduleSRICCommonConf
000418  f8d01400          LDR      r1,[r0,#0x400]
00041c  f44f705e          MOV      r0,#0x378
000420  f7fffffe          BL       MSPI_RegisterWrite
;;;2155   	MSPI_RegisterWrite((uint32_t)(0x037C), s_pktmoduleSRICCommonConf->R1_AFE_SENSE_CTL1.ulBulk        );  // R/W
000424  6820              LDR      r0,[r4,#0]  ; s_pktmoduleSRICCommonConf
000426  f8d01404          LDR      r1,[r0,#0x404]
00042a  f44f705f          MOV      r0,#0x37c
00042e  f7fffffe          BL       MSPI_RegisterWrite
;;;2156   	MSPI_RegisterWrite((uint32_t)(0x0380), s_pktmoduleSRICCommonConf->R1_AFE_SENSE_CTL2.ulBulk        );  // R/W
000432  6820              LDR      r0,[r4,#0]  ; s_pktmoduleSRICCommonConf
000434  f8d01408          LDR      r1,[r0,#0x408]
000438  f44f7060          MOV      r0,#0x380
00043c  f7fffffe          BL       MSPI_RegisterWrite
;;;2157   	MSPI_RegisterWrite((uint32_t)(0x0384), s_pktmoduleSRICCommonConf->R1_AFE_SENSE_CTL3.ulBulk        );  // R/W
000440  6820              LDR      r0,[r4,#0]  ; s_pktmoduleSRICCommonConf
000442  f8d0140c          LDR      r1,[r0,#0x40c]
000446  f44f7061          MOV      r0,#0x384
00044a  f7fffffe          BL       MSPI_RegisterWrite
;;;2158   	MSPI_RegisterWrite((uint32_t)(0x0388), s_pktmoduleSRICCommonConf->R1_AFE_SENSE_CTL4.ulBulk        );  // R/W
00044e  6820              LDR      r0,[r4,#0]  ; s_pktmoduleSRICCommonConf
000450  f8d01410          LDR      r1,[r0,#0x410]
000454  f44f7062          MOV      r0,#0x388
000458  f7fffffe          BL       MSPI_RegisterWrite
;;;2159   	MSPI_RegisterWrite((uint32_t)(0x038C), s_pktmoduleSRICCommonConf->R1_AFE_SENSE_CTL5.ulBulk        );  // R/W
00045c  6820              LDR      r0,[r4,#0]  ; s_pktmoduleSRICCommonConf
00045e  f8d01414          LDR      r1,[r0,#0x414]
000462  f44f7063          MOV      r0,#0x38c
000466  f7fffffe          BL       MSPI_RegisterWrite
;;;2160   	MSPI_RegisterWrite((uint32_t)(0x0390), s_pktmoduleSRICCommonConf->R1_PDB_CTL.ulBulk               );  // R/W
00046a  6820              LDR      r0,[r4,#0]  ; s_pktmoduleSRICCommonConf
00046c  f8d01418          LDR      r1,[r0,#0x418]
000470  f44f7064          MOV      r0,#0x390
000474  f7fffffe          BL       MSPI_RegisterWrite
;;;2161   	MSPI_RegisterWrite((uint32_t)(0x0394), s_pktmoduleSRICCommonConf->R1_TG_STUCK.ulBulk              );  // R/W
000478  6820              LDR      r0,[r4,#0]  ; s_pktmoduleSRICCommonConf
00047a  f8d0141c          LDR      r1,[r0,#0x41c]
00047e  f44f7065          MOV      r0,#0x394
000482  f7fffffe          BL       MSPI_RegisterWrite
;;;2162   	MSPI_RegisterWrite((uint32_t)(0x0398), s_pktmoduleSRICCommonConf->R1_TEST_MUX_CTL.ulBulk          );  // R/W
000486  6820              LDR      r0,[r4,#0]  ; s_pktmoduleSRICCommonConf
000488  f8d01420          LDR      r1,[r0,#0x420]
00048c  f44f7066          MOV      r0,#0x398
000490  f7fffffe          BL       MSPI_RegisterWrite
;;;2163   	MSPI_RegisterWrite((uint32_t)(0x039C), s_pktmoduleSRICCommonConf->R1_RESERVE.ulBulk               );  // R/W
000494  6820              LDR      r0,[r4,#0]  ; s_pktmoduleSRICCommonConf
000496  f8d01424          LDR      r1,[r0,#0x424]
00049a  f44f7067          MOV      r0,#0x39c
00049e  f7fffffe          BL       MSPI_RegisterWrite
;;;2164   	MSPI_RegisterWrite((uint32_t)(0x03A0), s_pktmoduleSRICCommonConf->R1_PHD_SENSE_CTL1.ulBulk        );  // R/W
0004a2  6820              LDR      r0,[r4,#0]  ; s_pktmoduleSRICCommonConf
0004a4  f8d01428          LDR      r1,[r0,#0x428]
0004a8  f44f7068          MOV      r0,#0x3a0
0004ac  f7fffffe          BL       MSPI_RegisterWrite
;;;2165   	MSPI_RegisterWrite((uint32_t)(0x03A4), s_pktmoduleSRICCommonConf->R1_PHD_CTL1.ulBulk              );  // R/W
0004b0  6820              LDR      r0,[r4,#0]  ; s_pktmoduleSRICCommonConf
0004b2  f8d0142c          LDR      r1,[r0,#0x42c]
0004b6  f44f7069          MOV      r0,#0x3a4
0004ba  f7fffffe          BL       MSPI_RegisterWrite
;;;2166   	MSPI_RegisterWrite((uint32_t)(0x03A8), s_pktmoduleSRICCommonConf->R1_PHD_CTL2.ulBulk              );  // R/W
0004be  6820              LDR      r0,[r4,#0]  ; s_pktmoduleSRICCommonConf
0004c0  f8d01430          LDR      r1,[r0,#0x430]
0004c4  f44f706a          MOV      r0,#0x3a8
0004c8  f7fffffe          BL       MSPI_RegisterWrite
;;;2167   	MSPI_RegisterWrite((uint32_t)(0x03AC), s_pktmoduleSRICCommonConf->R1_PHD_CTL3.ulBulk              );  // R/W
0004cc  6820              LDR      r0,[r4,#0]  ; s_pktmoduleSRICCommonConf
0004ce  f8d01434          LDR      r1,[r0,#0x434]
0004d2  f44f706b          MOV      r0,#0x3ac
0004d6  f7fffffe          BL       MSPI_RegisterWrite
;;;2168   	MSPI_RegisterWrite((uint32_t)(0x03B0), s_pktmoduleSRICCommonConf->R1_PHD_CTL4.ulBulk              );  // R/W
0004da  6820              LDR      r0,[r4,#0]  ; s_pktmoduleSRICCommonConf
0004dc  f8d01438          LDR      r1,[r0,#0x438]
0004e0  f44f706c          MOV      r0,#0x3b0
0004e4  f7fffffe          BL       MSPI_RegisterWrite
;;;2169   //	MSPI_RegisterWrite((uint32_t)(0x03B4), s_pktmoduleSRICCommonConf->R1_PHD_ST1[0].ulBulk            );  // R
;;;2170   	MSPI_RegisterWrite((uint32_t)(0x07F0), s_pktmoduleSRICCommonConf->APEN_CFCLK_ON.ulBulk            );  // R/W
0004e8  6820              LDR      r0,[r4,#0]  ; s_pktmoduleSRICCommonConf
0004ea  f8d01440          LDR      r1,[r0,#0x440]
0004ee  f44f60fe          MOV      r0,#0x7f0
0004f2  f7fffffe          BL       MSPI_RegisterWrite
;;;2171   //	MSPI_RegisterWrite((uint32_t)(0x07F4), s_pktmoduleSRICCommonConf->MON_CAL_DELAY[0].ulBulk         );  // R
;;;2172   //	MSPI_RegisterWrite((uint32_t)(0x07F8), s_pktmoduleSRICCommonConf->MON_EDGE_SIGN_R0[0].ulBulk      );  // R
;;;2173   //	MSPI_RegisterWrite((uint32_t)(0x07FC), s_pktmoduleSRICCommonConf->MON_EDGE_SIGN_R1[0].ulBulk      );  // R
;;;2174   	SW92513_Reg_CRTuneSetting(CRTUNE_TYPE_INIT);
0004f6  2000              MOVS     r0,#0
0004f8  f7fffffe          BL       SW92513_Reg_CRTuneSetting
;;;2175   
;;;2176   	return bReg;
0004fc  4628              MOV      r0,r5
;;;2177   }
0004fe  bd70              POP      {r4-r6,pc}
;;;2178   
                          ENDP


                          AREA ||i.SW92513_Reset||, CODE, READONLY, ALIGN=1

                  SW92513_Reset PROC
;;;1972   
;;;1973   void SW92513_Reset(eSENSING_MODE_t eSensingMode)
000000  b510              PUSH     {r4,lr}
;;;1974   {
000002  4604              MOV      r4,r0
;;;1975   	GPIO_Init(_GPIO_RSTN_SRIC, GPIO_MODE_FUNC_3, GPIO_DIR_OUTPUT, GPIO_DATA_HIGH);
000004  2301              MOVS     r3,#1
000006  2200              MOVS     r2,#0
000008  2103              MOVS     r1,#3
00000a  2034              MOVS     r0,#0x34
00000c  f7fffffe          BL       GPIO_Init
;;;1976   	delay_usec(100);
000010  2064              MOVS     r0,#0x64
000012  f7fffffe          BL       delay_us
;;;1977   
;;;1978   #if !USED_OPERATION_STAND_ALONE
;;;1979   	if(!IS_S3_MODE(eSensingMode))
000016  f4146f00          TST      r4,#0x800
00001a  d109              BNE      |L5.48|
                  |L5.28|
;;;1980   	{
;;;1981   		while(IS_GPIO_PIN(_GPIO_TSYNC_IN) == 1);
00001c  202e              MOVS     r0,#0x2e
00001e  f7fffffe          BL       GPIO_Get_IN
000022  2801              CMP      r0,#1
000024  d0fa              BEQ      |L5.28|
                  |L5.38|
;;;1982   		while(IS_GPIO_PIN(_GPIO_TSYNC_IN) == 0);
000026  202e              MOVS     r0,#0x2e
000028  f7fffffe          BL       GPIO_Get_IN
00002c  2800              CMP      r0,#0
00002e  d0fa              BEQ      |L5.38|
                  |L5.48|
;;;1983   	}
;;;1984   	delay_usec(10);
000030  200a              MOVS     r0,#0xa
000032  f7fffffe          BL       delay_us
;;;1985   #endif /* !USED_OPERATION_STAND_ALONE */
;;;1986   	_gOut(_GPIO_RSTN_SRIC, GPIO_DATA_LOW);
000036  2100              MOVS     r1,#0
000038  2034              MOVS     r0,#0x34
00003a  f7fffffe          BL       GPIO_Set_DATA
;;;1987   	delay_usec(10);
00003e  200a              MOVS     r0,#0xa
000040  f7fffffe          BL       delay_us
;;;1988   	_gOut(_GPIO_RSTN_SRIC, GPIO_DATA_HIGH);
000044  2101              MOVS     r1,#1
000046  2034              MOVS     r0,#0x34
000048  f7fffffe          BL       GPIO_Set_DATA
;;;1989   	delay_usec(100);
00004c  e8bd4010          POP      {r4,lr}
000050  2064              MOVS     r0,#0x64
000052  f7ffbffe          B.W      delay_us
;;;1990   }
;;;1991   
                          ENDP


                          AREA ||i.SW92513_Run||, CODE, READONLY, ALIGN=2

                  SW92513_Run PROC
;;;2178   
;;;2179   void SW92513_Run(uint8_t Enable)
000000  b508              PUSH     {r3,lr}
;;;2180   {
;;;2181   	tTC_START_t tCFGR_TC_START;
;;;2182   	tSYS_CFG_t tCFGR_SYS_CFG;
;;;2183   	tCFGR_TC_START.ulBulk = 0;
000002  2100              MOVS     r1,#0
000004  9100              STR      r1,[sp,#0]
;;;2184   	tCFGR_TC_START.tBit.tc_start = Enable;
000006  f89d1000          LDRB     r1,[sp,#0]
00000a  f3600100          BFI      r1,r0,#0,#1
00000e  f88d1000          STRB     r1,[sp,#0]
;;;2185   	MSPI_RegisterWrite((uint32_t)(0x018), tCFGR_TC_START.ulBulk);
000012  9900              LDR      r1,[sp,#0]
000014  2018              MOVS     r0,#0x18
000016  f7fffffe          BL       MSPI_RegisterWrite
;;;2186   
;;;2187   	tCFGR_SYS_CFG.ulBulk = s_pktmoduleSRICCommonConf->SYS_CFG.ulBulk;
00001a  480d              LDR      r0,|L6.80|
00001c  6800              LDR      r0,[r0,#0]  ; s_pktmoduleSRICCommonConf
00001e  6940              LDR      r0,[r0,#0x14]
000020  9000              STR      r0,[sp,#0]
;;;2188   	tCFGR_SYS_CFG.tBit.tg_reset = 1;
000022  f89d0000          LDRB     r0,[sp,#0]
000026  f0400001          ORR      r0,r0,#1
00002a  f88d0000          STRB     r0,[sp,#0]
;;;2189   	MSPI_RegisterWrite((uint32_t)(0x0014), tCFGR_SYS_CFG.ulBulk);
00002e  9900              LDR      r1,[sp,#0]
000030  2014              MOVS     r0,#0x14
000032  f7fffffe          BL       MSPI_RegisterWrite
;;;2190   	tCFGR_SYS_CFG.tBit.tg_reset = 0;
000036  f89d0000          LDRB     r0,[sp,#0]
00003a  f0200001          BIC      r0,r0,#1
00003e  f88d0000          STRB     r0,[sp,#0]
;;;2191   	MSPI_RegisterWrite((uint32_t)(0x0014), tCFGR_SYS_CFG.ulBulk);
000042  9900              LDR      r1,[sp,#0]
000044  e8bd4008          POP      {r3,lr}
000048  2014              MOVS     r0,#0x14
00004a  f7ffbffe          B.W      MSPI_RegisterWrite
;;;2192   }
;;;2193   
                          ENDP

00004e  0000              DCW      0x0000
                  |L6.80|
                          DCD      ||.data||

                          AREA ||i.SW92513_SetActiveOperationMode||, CODE, READONLY, ALIGN=1

                  SW92513_SetActiveOperationMode PROC
;;;2332   
;;;2333   void SW92513_SetActiveOperationMode(void)
000000  4770              BX       lr
;;;2334   {
;;;2335   //	if((PARAMSET_PWMDRV_TSYNC_ACTIVE_BITMASK & 0x1) && 0x1)
;;;2336   //	{
;;;2337   //		tCFGR_PEN_POS1_t tCFGR_PEN_POS1;
;;;2338   //		tCFGR_PEN_POS1.ulBulk = s_pktmoduleSRICCommonConf->CFGR_PEN_POS1.ulBulk;
;;;2339   //		tCFGR_PEN_POS1.tBit.lhb_type = 0; // Finger2
;;;2340   //		MSPI_RegisterWrite(0x406, tCFGR_PEN_POS1.ulBulk);
;;;2341   //	}
;;;2342   //
;;;2343   //	tCFGR_LHB_CFG2_t tCFGR_LHB_CFG2;
;;;2344   //	tCFGR_LHB_CFG2.ulBulk = s_pktmoduleSRICCommonConf->CFGR_LHB_CFG2.ulBulk;
;;;2345   //	tCFGR_LHB_CFG2.tBit.end_mux_num = 0xC;
;;;2346   //	MSPI_RegisterWrite(0x4A0, tCFGR_LHB_CFG2.ulBulk);
;;;2347   }
;;;2348   
                          ENDP


                          AREA ||i.SW92513_SetDiagTestOperationMode||, CODE, READONLY, ALIGN=2

                  SW92513_SetDiagTestOperationMode PROC
;;;3873   
;;;3874   void SW92513_SetDiagTestOperationMode(eDIAG_TEST_CHANGE_MODE_t TestMode)
000000  b510              PUSH     {r4,lr}
;;;3875   {
000002  b094              SUB      sp,sp,#0x50
;;;3876   	uint32_t ulIdx;
;;;3877   	tSDIC_CFG_t tSDIC_CFG[MSPI_NUM];
;;;3878   	tR0_CR_GTUNE1_t tR0_CR_GTUNE1;
;;;3879   //	tR0_CR_GTUNE2_t tR0_CR_GTUNE2;
;;;3880   	tR1_CR_GTUNE1_t tR1_CR_GTUNE1;
;;;3881   //	tR1_CR_GTUNE2_t tR1_CR_GTUNE2;
;;;3882   	tR0_MUX_STUCK_CTL_t tR0_MUX_STUCK_CTL;
;;;3883   	tR1_MUX_STUCK_CTL_t tR1_MUX_STUCK_CTL;
;;;3884   	tR0_TEST_MUX_CTL_t tR0_TEST_MUX_CTL[MSPI_NUM];
;;;3885   	tR1_TEST_MUX_CTL_t tR1_TEST_MUX_CTL[MSPI_NUM];
;;;3886   	tR0_CH_EN_t tR0_CH_EN;
;;;3887   	tR1_CH_EN_t tR1_CH_EN;
;;;3888   	tSMPL_CTL_t tSMPL_CTL;
;;;3889   
;;;3890   	tR0_AFE_SENSE_CTL2_t tR0_AFE_SENSE_CTL2;
;;;3891   	tR1_AFE_SENSE_CTL2_t tR1_AFE_SENSE_CTL2;
;;;3892   
;;;3893   	tR0_AFE_SENSE_CTL3_t tR0_AFE_SENSE_CTL3;
;;;3894   	tR1_AFE_SENSE_CTL3_t tR1_AFE_SENSE_CTL3;
;;;3895   
;;;3896   	tR0_AFE_SENSE_CTL4_t tR0_AFE_SENSE_CTL4;
;;;3897   	tR1_AFE_SENSE_CTL4_t tR1_AFE_SENSE_CTL4;
;;;3898   
;;;3899   	tR0_TG_STUCK_t tR0_TG_STUCK;
;;;3900   	tR1_TG_STUCK_t tR1_TG_STUCK;
;;;3901   
;;;3902   #if 1
;;;3903   	switch(TestMode)
000004  2820              CMP      r0,#0x20
;;;3904   	{
;;;3905   		case DIAG_CHANGE_SHORT1_TEST_STEP1:
;;;3906   		{
;;;3907   			PWMDRV->TG_DUM5.tBit.tsync_tpic_out_bypass_enb = 0;
;;;3908   			PWMDRV->PWM_TPIC_CR.tBit.finger_en = 0;
;;;3909   			PWMDRV->PWM_TPIC_CR.tBit.finger_dmy_en = 0;
;;;3910   //			PWMDRV->PWM_TPIC_CR.tBit.finger_set_tx_en = 0;
;;;3911   
;;;3912   			tR0_MUX_STUCK_CTL.tBit.r0_mux_s_stuck_en = 1;
;;;3913   			tR0_MUX_STUCK_CTL.tBit.r0_mux_s_stuck_val = 1023;
;;;3914   			tR0_MUX_STUCK_CTL.tBit.r0_mux_f_stuck_en = 1;
;;;3915   			tR0_MUX_STUCK_CTL.tBit.r0_mux_f_stuck_val = 0x3FE;
;;;3916   
;;;3917   			tR1_MUX_STUCK_CTL.tBit.r1_mux_s_stuck_en = 1;
;;;3918   			tR1_MUX_STUCK_CTL.tBit.r1_mux_s_stuck_val = 1023;
;;;3919   			tR1_MUX_STUCK_CTL.tBit.r1_mux_f_stuck_en = 1;
;;;3920   			tR1_MUX_STUCK_CTL.tBit.r1_mux_f_stuck_val = 0x3FE;
;;;3921   
;;;3922   	        tR0_CR_GTUNE1.tBit.r0_fig_mux1_gtune = 7;
;;;3923   	        tR0_CR_GTUNE1.tBit.r0_fig_mux2_gtune = 7;
;;;3924   	        tR0_CR_GTUNE1.tBit.r0_fig_mux3_gtune = 7;
;;;3925   	        tR0_CR_GTUNE1.tBit.r0_fig_mux4_gtune = 7;
;;;3926   	        tR0_CR_GTUNE1.tBit.r0_fig_mux5_gtune = 7;
;;;3927   	        tR0_CR_GTUNE1.tBit.r0_fig_mux6_gtune = 7;
;;;3928   	        tR0_CR_GTUNE1.tBit.r0_fig_mux7_gtune = 7;
;;;3929   	        tR0_CR_GTUNE1.tBit.r0_fig_mux8_gtune = 7;
;;;3930   	        tR0_CR_GTUNE1.tBit.r0_fig_mux9_gtune = 7;
;;;3931   	        tR0_CR_GTUNE1.tBit.r0_fig_mux10_gtune = 7;
;;;3932   
;;;3933   	        tR1_CR_GTUNE1.tBit.r1_fig_mux1_gtune = 7;
;;;3934   	        tR1_CR_GTUNE1.tBit.r1_fig_mux2_gtune = 7;
;;;3935   	        tR1_CR_GTUNE1.tBit.r1_fig_mux3_gtune = 7;
;;;3936   	        tR1_CR_GTUNE1.tBit.r1_fig_mux4_gtune = 7;
;;;3937   	        tR1_CR_GTUNE1.tBit.r1_fig_mux5_gtune = 7;
;;;3938   	        tR1_CR_GTUNE1.tBit.r1_fig_mux6_gtune = 7;
;;;3939   	        tR1_CR_GTUNE1.tBit.r1_fig_mux7_gtune = 7;
;;;3940   	        tR1_CR_GTUNE1.tBit.r1_fig_mux8_gtune = 7;
;;;3941   	        tR1_CR_GTUNE1.tBit.r1_fig_mux9_gtune = 7;
;;;3942   	        tR1_CR_GTUNE1.tBit.r1_fig_mux10_gtune = 7;
;;;3943   
;;;3944   			MSPI_RegisterWrite((uint32_t)(0x0214), tR0_MUX_STUCK_CTL.ulBulk);  // R/W
;;;3945   			MSPI_RegisterWrite((uint32_t)(0x0314), tR1_MUX_STUCK_CTL.ulBulk);  // R/W
;;;3946   			MSPI_RegisterWrite((uint32_t)(0x0258), tR0_CR_GTUNE1.ulBulk);  // R/W
;;;3947   			MSPI_RegisterWrite((uint32_t)(0x0358), tR1_CR_GTUNE1.ulBulk);  // R/W
;;;3948   
;;;3949   	        tR0_AFE_SENSE_CTL2.ulBulk = s_pktmoduleSRICCommonConf->R0_AFE_SENSE_CTL2.ulBulk;
;;;3950   	        tR1_AFE_SENSE_CTL2.ulBulk = s_pktmoduleSRICCommonConf->R1_AFE_SENSE_CTL2.ulBulk;
;;;3951   
;;;3952   	        tR0_AFE_SENSE_CTL3.ulBulk = s_pktmoduleSRICCommonConf->R0_AFE_SENSE_CTL3.ulBulk;
;;;3953   	        tR1_AFE_SENSE_CTL3.ulBulk = s_pktmoduleSRICCommonConf->R1_AFE_SENSE_CTL3.ulBulk;
;;;3954   
;;;3955   	        tR0_AFE_SENSE_CTL4.ulBulk = s_pktmoduleSRICCommonConf->R0_AFE_SENSE_CTL4.ulBulk;
;;;3956   	        tR1_AFE_SENSE_CTL4.ulBulk = s_pktmoduleSRICCommonConf->R1_AFE_SENSE_CTL4.ulBulk;
;;;3957   
;;;3958   			tR0_TG_STUCK.ulBulk = s_pktmoduleSRICCommonConf->R0_TG_STUCK.ulBulk;
;;;3959   			tR1_TG_STUCK.ulBulk = s_pktmoduleSRICCommonConf->R1_TG_STUCK.ulBulk;
;;;3960   
;;;3961   			tR0_AFE_SENSE_CTL2.tBit.r0_fig_cvc1_gc = 0;
;;;3962   			tR0_AFE_SENSE_CTL3.tBit.r0_fig_cvc2_gc = 3;
;;;3963   			tR0_AFE_SENSE_CTL4.tBit.r0_fig_int_gc = 3;
;;;3964   			tR0_AFE_SENSE_CTL4.tBit.r0_fig_int_half = 1;
;;;3965   
;;;3966   			tR1_AFE_SENSE_CTL2.tBit.r1_fig_cvc1_gc = 0;
;;;3967   			tR1_AFE_SENSE_CTL3.tBit.r1_fig_cvc2_gc = 3;
;;;3968   			tR1_AFE_SENSE_CTL4.tBit.r1_fig_int_gc = 3;
;;;3969   			tR1_AFE_SENSE_CTL4.tBit.r1_fig_int_half = 1;
;;;3970   
;;;3971   			tR0_TG_STUCK.tBit.r0_stuck_phth0 = 1;
;;;3972   			tR1_TG_STUCK.tBit.r1_stuck_phth0 = 1;
;;;3973   
;;;3974   			MSPI_RegisterWrite((uint32_t)(0x0280), tR0_AFE_SENSE_CTL2.ulBulk);  // R/W
;;;3975   			MSPI_RegisterWrite((uint32_t)(0x0380), tR1_AFE_SENSE_CTL2.ulBulk);  // R/W
;;;3976   			MSPI_RegisterWrite((uint32_t)(0x0284), tR0_AFE_SENSE_CTL3.ulBulk);  // R/W
;;;3977   			MSPI_RegisterWrite((uint32_t)(0x0384), tR1_AFE_SENSE_CTL3.ulBulk);  // R/W
;;;3978   			MSPI_RegisterWrite((uint32_t)(0x0288), tR0_AFE_SENSE_CTL4.ulBulk);  // R/W
;;;3979   			MSPI_RegisterWrite((uint32_t)(0x0388), tR1_AFE_SENSE_CTL4.ulBulk);  // R/W
;;;3980   			MSPI_RegisterWrite((uint32_t)(0x0294), tR0_TG_STUCK.ulBulk);  // R/W
;;;3981   			MSPI_RegisterWrite((uint32_t)(0x0394), tR1_TG_STUCK.ulBulk);  // R/W
;;;3982   			break;
;;;3983   		}
;;;3984   		case DIAG_CHANGE_SHORT1_TEST_STEP2:
;;;3985   		{
;;;3986   			tR0_MUX_STUCK_CTL.tBit.r0_mux_s_stuck_en = 1;
;;;3987   			tR0_MUX_STUCK_CTL.tBit.r0_mux_s_stuck_val = 1023;
;;;3988   			tR0_MUX_STUCK_CTL.tBit.r0_mux_f_stuck_en = 1;
;;;3989   			tR0_MUX_STUCK_CTL.tBit.r0_mux_f_stuck_val = 0x3FD;
;;;3990   
;;;3991   			tR1_MUX_STUCK_CTL.tBit.r1_mux_s_stuck_en = 1;
;;;3992   			tR1_MUX_STUCK_CTL.tBit.r1_mux_s_stuck_val = 1023;
;;;3993   			tR1_MUX_STUCK_CTL.tBit.r1_mux_f_stuck_en = 1;
;;;3994   			tR1_MUX_STUCK_CTL.tBit.r1_mux_f_stuck_val = 0x3FD;
;;;3995   
;;;3996   			MSPI_RegisterWrite((uint32_t)(0x0214), tR0_MUX_STUCK_CTL.ulBulk);  // R/W
;;;3997   			MSPI_RegisterWrite((uint32_t)(0x0314), tR1_MUX_STUCK_CTL.ulBulk);  // R/W
;;;3998   			break;
;;;3999   		}
;;;4000   		case DIAG_CHANGE_SHORT1_TEST_STEP3:
;;;4001   		{
;;;4002   			tR0_MUX_STUCK_CTL.tBit.r0_mux_s_stuck_en = 1;
;;;4003   			tR0_MUX_STUCK_CTL.tBit.r0_mux_s_stuck_val = 1023;
;;;4004   			tR0_MUX_STUCK_CTL.tBit.r0_mux_f_stuck_en = 1;
;;;4005   			tR0_MUX_STUCK_CTL.tBit.r0_mux_f_stuck_val = 0x3FB;
;;;4006   
;;;4007   			tR1_MUX_STUCK_CTL.tBit.r1_mux_s_stuck_en = 1;
;;;4008   			tR1_MUX_STUCK_CTL.tBit.r1_mux_s_stuck_val = 1023;
;;;4009   			tR1_MUX_STUCK_CTL.tBit.r1_mux_f_stuck_en = 1;
;;;4010   			tR1_MUX_STUCK_CTL.tBit.r1_mux_f_stuck_val = 0x3FB;
;;;4011   
;;;4012   			MSPI_RegisterWrite((uint32_t)(0x0214), tR0_MUX_STUCK_CTL.ulBulk);  // R/W
;;;4013   			MSPI_RegisterWrite((uint32_t)(0x0314), tR1_MUX_STUCK_CTL.ulBulk);  // R/W
;;;4014   			break;
;;;4015   		}
;;;4016   		case DIAG_CHANGE_SHORT1_TEST_STEP4:
;;;4017   		{
;;;4018   			tR0_MUX_STUCK_CTL.tBit.r0_mux_s_stuck_en = 1;
;;;4019   			tR0_MUX_STUCK_CTL.tBit.r0_mux_s_stuck_val = 1023;
;;;4020   			tR0_MUX_STUCK_CTL.tBit.r0_mux_f_stuck_en = 1;
;;;4021   			tR0_MUX_STUCK_CTL.tBit.r0_mux_f_stuck_val = 0x3F7;
;;;4022   
;;;4023   			tR1_MUX_STUCK_CTL.tBit.r1_mux_s_stuck_en = 1;
;;;4024   			tR1_MUX_STUCK_CTL.tBit.r1_mux_s_stuck_val = 1023;
;;;4025   			tR1_MUX_STUCK_CTL.tBit.r1_mux_f_stuck_en = 1;
;;;4026   			tR1_MUX_STUCK_CTL.tBit.r1_mux_f_stuck_val = 0x3F7;
;;;4027   
;;;4028   			MSPI_RegisterWrite((uint32_t)(0x0214), tR0_MUX_STUCK_CTL.ulBulk);  // R/W
;;;4029   			MSPI_RegisterWrite((uint32_t)(0x0314), tR1_MUX_STUCK_CTL.ulBulk);  // R/W
;;;4030   			break;
;;;4031   		}
;;;4032   		case DIAG_CHANGE_SHORT1_TEST_STEP5:
;;;4033   		{
;;;4034   			tR0_MUX_STUCK_CTL.tBit.r0_mux_s_stuck_en = 1;
;;;4035   			tR0_MUX_STUCK_CTL.tBit.r0_mux_s_stuck_val = 1023;
;;;4036   			tR0_MUX_STUCK_CTL.tBit.r0_mux_f_stuck_en = 1;
;;;4037   			tR0_MUX_STUCK_CTL.tBit.r0_mux_f_stuck_val = 0x3EF;
;;;4038   
;;;4039   			tR1_MUX_STUCK_CTL.tBit.r1_mux_s_stuck_en = 1;
;;;4040   			tR1_MUX_STUCK_CTL.tBit.r1_mux_s_stuck_val = 1023;
;;;4041   			tR1_MUX_STUCK_CTL.tBit.r1_mux_f_stuck_en = 1;
;;;4042   			tR1_MUX_STUCK_CTL.tBit.r1_mux_f_stuck_val = 0x3EF;
;;;4043   
;;;4044   			MSPI_RegisterWrite((uint32_t)(0x0214), tR0_MUX_STUCK_CTL.ulBulk);  // R/W
;;;4045   			MSPI_RegisterWrite((uint32_t)(0x0314), tR1_MUX_STUCK_CTL.ulBulk);  // R/W
;;;4046   			break;
;;;4047   		}
;;;4048   		case DIAG_CHANGE_SHORT1_TEST_STEP6:
;;;4049   		{
;;;4050   			tR0_MUX_STUCK_CTL.tBit.r0_mux_s_stuck_en = 1;
;;;4051   			tR0_MUX_STUCK_CTL.tBit.r0_mux_s_stuck_val = 1023;
;;;4052   			tR0_MUX_STUCK_CTL.tBit.r0_mux_f_stuck_en = 1;
;;;4053   			tR0_MUX_STUCK_CTL.tBit.r0_mux_f_stuck_val = 0x3DF;
;;;4054   
;;;4055   			tR1_MUX_STUCK_CTL.tBit.r1_mux_s_stuck_en = 1;
;;;4056   			tR1_MUX_STUCK_CTL.tBit.r1_mux_s_stuck_val = 1023;
;;;4057   			tR1_MUX_STUCK_CTL.tBit.r1_mux_f_stuck_en = 1;
;;;4058   			tR1_MUX_STUCK_CTL.tBit.r1_mux_f_stuck_val = 0x3DF;
;;;4059   
;;;4060   			MSPI_RegisterWrite((uint32_t)(0x0214), tR0_MUX_STUCK_CTL.ulBulk);  // R/W
;;;4061   			MSPI_RegisterWrite((uint32_t)(0x0314), tR1_MUX_STUCK_CTL.ulBulk);  // R/W
;;;4062   			break;
;;;4063   		}
;;;4064   		case DIAG_CHANGE_SHORT1_TEST_STEP7:
;;;4065   		{
;;;4066   			tR0_MUX_STUCK_CTL.tBit.r0_mux_s_stuck_en = 1;
;;;4067   			tR0_MUX_STUCK_CTL.tBit.r0_mux_s_stuck_val = 1023;
;;;4068   			tR0_MUX_STUCK_CTL.tBit.r0_mux_f_stuck_en = 1;
;;;4069   			tR0_MUX_STUCK_CTL.tBit.r0_mux_f_stuck_val = 0x3BF;
;;;4070   
;;;4071   			tR1_MUX_STUCK_CTL.tBit.r1_mux_s_stuck_en = 1;
;;;4072   			tR1_MUX_STUCK_CTL.tBit.r1_mux_s_stuck_val = 1023;
;;;4073   			tR1_MUX_STUCK_CTL.tBit.r1_mux_f_stuck_en = 1;
;;;4074   			tR1_MUX_STUCK_CTL.tBit.r1_mux_f_stuck_val = 0x3BF;
;;;4075   
;;;4076   			MSPI_RegisterWrite((uint32_t)(0x0214), tR0_MUX_STUCK_CTL.ulBulk);  // R/W
;;;4077   			MSPI_RegisterWrite((uint32_t)(0x0314), tR1_MUX_STUCK_CTL.ulBulk);  // R/W
;;;4078   			break;
;;;4079   		}
;;;4080   		case DIAG_CHANGE_SHORT1_TEST_STEP8:
;;;4081   		{
;;;4082   			tR0_MUX_STUCK_CTL.tBit.r0_mux_s_stuck_en = 1;
;;;4083   			tR0_MUX_STUCK_CTL.tBit.r0_mux_s_stuck_val = 1023;
;;;4084   			tR0_MUX_STUCK_CTL.tBit.r0_mux_f_stuck_en = 1;
;;;4085   			tR0_MUX_STUCK_CTL.tBit.r0_mux_f_stuck_val = 0x37F;
;;;4086   
;;;4087   			tR1_MUX_STUCK_CTL.tBit.r1_mux_s_stuck_en = 1;
;;;4088   			tR1_MUX_STUCK_CTL.tBit.r1_mux_s_stuck_val = 1023;
;;;4089   			tR1_MUX_STUCK_CTL.tBit.r1_mux_f_stuck_en = 1;
;;;4090   			tR1_MUX_STUCK_CTL.tBit.r1_mux_f_stuck_val = 0x37F;
;;;4091   
;;;4092   			MSPI_RegisterWrite((uint32_t)(0x0214), tR0_MUX_STUCK_CTL.ulBulk);  // R/W
;;;4093   			MSPI_RegisterWrite((uint32_t)(0x0314), tR1_MUX_STUCK_CTL.ulBulk);  // R/W
;;;4094   			break;
;;;4095   		}
;;;4096   		case DIAG_CHANGE_SHORT1_TEST_STEP9:
;;;4097   		{
;;;4098   			tR0_MUX_STUCK_CTL.tBit.r0_mux_s_stuck_en = 1;
;;;4099   			tR0_MUX_STUCK_CTL.tBit.r0_mux_s_stuck_val = 1023;
;;;4100   			tR0_MUX_STUCK_CTL.tBit.r0_mux_f_stuck_en = 1;
;;;4101   			tR0_MUX_STUCK_CTL.tBit.r0_mux_f_stuck_val = 0x2FF;
;;;4102   
;;;4103   			tR1_MUX_STUCK_CTL.tBit.r1_mux_s_stuck_en = 1;
;;;4104   			tR1_MUX_STUCK_CTL.tBit.r1_mux_s_stuck_val = 1023;
;;;4105   			tR1_MUX_STUCK_CTL.tBit.r1_mux_f_stuck_en = 1;
;;;4106   			tR1_MUX_STUCK_CTL.tBit.r1_mux_f_stuck_val = 0x2FF;
;;;4107   
;;;4108   			MSPI_RegisterWrite((uint32_t)(0x0214), tR0_MUX_STUCK_CTL.ulBulk);  // R/W
;;;4109   			MSPI_RegisterWrite((uint32_t)(0x0314), tR1_MUX_STUCK_CTL.ulBulk);  // R/W
;;;4110   			break;
;;;4111   		}
;;;4112   		case DIAG_CHANGE_SHORT1_TEST_STEP10:
;;;4113   		{
;;;4114   			tR0_MUX_STUCK_CTL.tBit.r0_mux_s_stuck_en = 1;
;;;4115   			tR0_MUX_STUCK_CTL.tBit.r0_mux_s_stuck_val = 1023;
;;;4116   			tR0_MUX_STUCK_CTL.tBit.r0_mux_f_stuck_en = 1;
;;;4117   			tR0_MUX_STUCK_CTL.tBit.r0_mux_f_stuck_val = 0x1FF;
;;;4118   
;;;4119   			tR1_MUX_STUCK_CTL.tBit.r1_mux_s_stuck_en = 1;
;;;4120   			tR1_MUX_STUCK_CTL.tBit.r1_mux_s_stuck_val = 1023;
;;;4121   			tR1_MUX_STUCK_CTL.tBit.r1_mux_f_stuck_en = 1;
;;;4122   			tR1_MUX_STUCK_CTL.tBit.r1_mux_f_stuck_val = 0x1FF;
;;;4123   
;;;4124   			MSPI_RegisterWrite((uint32_t)(0x0214), tR0_MUX_STUCK_CTL.ulBulk);  // R/W
;;;4125   			MSPI_RegisterWrite((uint32_t)(0x0314), tR1_MUX_STUCK_CTL.ulBulk);  // R/W
;;;4126   			break;
;;;4127   		}
;;;4128   		case DIAG_CHANGE_SHORT1_TEST_RECOVERY:
;;;4129   		{
;;;4130   			PWMDRV->TG_DUM5.tBit.tsync_tpic_out_bypass_enb = PARAMSET_PWMDRV_WGP_TG_DUM5_tsync_tpic_out_bypass_enb;
;;;4131   			PWMDRV->PWM_TPIC_CR.tBit.finger_en = PARAMSET_PWMDRV_WGP_PWM_TPIC_CR_finger_en;
;;;4132   			PWMDRV->PWM_TPIC_CR.tBit.finger_dmy_en = PARAMSET_PWMDRV_WGP_PWM_TPIC_CR_finger_dmy_en;
;;;4133   
;;;4134   			MSPI_RegisterWrite((uint32_t)(0x0214), s_pktmoduleSRICCommonConf->R0_MUX_STUCK_CTL.ulBulk);  // R/W
;;;4135   			MSPI_RegisterWrite((uint32_t)(0x0314), s_pktmoduleSRICCommonConf->R1_MUX_STUCK_CTL.ulBulk);  // R/W
;;;4136   		    MSPI_RegisterMultiWrite((uint32_t)(0x0258), (uint32_t *)&s_pktmoduleSRICCommonConf->R0_CR_GTUNE1[0].ulBulk);  // R/W
;;;4137   //		    MSPI_RegisterMultiWrite((uint32_t)(0x025C), (uint32_t *)&s_pktmoduleSRICCommonConf->R0_CR_GTUNE2[0].ulBulk);  // R/W
;;;4138   		    MSPI_RegisterMultiWrite((uint32_t)(0x0358), (uint32_t *)&s_pktmoduleSRICCommonConf->R1_CR_GTUNE1[0].ulBulk);  // R/W
;;;4139   //		    MSPI_RegisterMultiWrite((uint32_t)(0x035C), (uint32_t *)&s_pktmoduleSRICCommonConf->R1_CR_GTUNE2[0].ulBulk);  // R/W
;;;4140   
;;;4141   			MSPI_RegisterWrite((uint32_t)(0x0280), s_pktmoduleSRICCommonConf->R0_AFE_SENSE_CTL2.ulBulk);  // R/W
;;;4142   			MSPI_RegisterWrite((uint32_t)(0x0380), s_pktmoduleSRICCommonConf->R1_AFE_SENSE_CTL2.ulBulk);  // R/W
;;;4143   			MSPI_RegisterWrite((uint32_t)(0x0284), s_pktmoduleSRICCommonConf->R0_AFE_SENSE_CTL3.ulBulk);  // R/W
;;;4144   			MSPI_RegisterWrite((uint32_t)(0x0384), s_pktmoduleSRICCommonConf->R1_AFE_SENSE_CTL3.ulBulk);  // R/W
;;;4145   			MSPI_RegisterWrite((uint32_t)(0x0288), s_pktmoduleSRICCommonConf->R0_AFE_SENSE_CTL4.ulBulk);  // R/W
;;;4146   			MSPI_RegisterWrite((uint32_t)(0x0388), s_pktmoduleSRICCommonConf->R1_AFE_SENSE_CTL4.ulBulk);  // R/W
;;;4147   			MSPI_RegisterWrite((uint32_t)(0x0294), s_pktmoduleSRICCommonConf->R0_TG_STUCK.ulBulk);  // R/W
;;;4148   			MSPI_RegisterWrite((uint32_t)(0x0394), s_pktmoduleSRICCommonConf->R1_TG_STUCK.ulBulk);  // R/W
;;;4149   
;;;4150   			break;
;;;4151   		}
;;;4152   		case DIAG_CHANGE_SHORT2_TEST_STEP1:	// 1st Frame
;;;4153   		{
;;;4154   			PWMDRV->TG_DUM5.tBit.tsync_tpic_out_bypass_enb = 0;
;;;4155   			PWMDRV->PWM_TPIC_CR.tBit.finger_en = 0;
;;;4156   			PWMDRV->PWM_TPIC_CR.tBit.finger_dmy_en = 0;
;;;4157   
;;;4158   	        tR0_CH_EN.ulBulk = s_pktmoduleSRICCommonConf->R0_CH_EN.ulBulk;
;;;4159   	        tR0_CH_EN.tBit.r0_ch_dum_drv_en = 0;
;;;4160   
;;;4161   	        tR1_CH_EN.ulBulk = s_pktmoduleSRICCommonConf->R1_CH_EN.ulBulk;
;;;4162   	        tR1_CH_EN.tBit.r1_ch_dum_drv_en = 0;
;;;4163   
;;;4164   	        tR0_CR_GTUNE1.tBit.r0_fig_mux1_gtune = 7;
;;;4165   	        tR0_CR_GTUNE1.tBit.r0_fig_mux2_gtune = 7;
;;;4166   	        tR0_CR_GTUNE1.tBit.r0_fig_mux3_gtune = 7;
;;;4167   	        tR0_CR_GTUNE1.tBit.r0_fig_mux4_gtune = 7;
;;;4168   	        tR0_CR_GTUNE1.tBit.r0_fig_mux5_gtune = 7;
;;;4169   	        tR0_CR_GTUNE1.tBit.r0_fig_mux6_gtune = 7;
;;;4170   	        tR0_CR_GTUNE1.tBit.r0_fig_mux7_gtune = 7;
;;;4171   	        tR0_CR_GTUNE1.tBit.r0_fig_mux8_gtune = 7;
;;;4172   	        tR0_CR_GTUNE1.tBit.r0_fig_mux9_gtune = 7;
;;;4173   	        tR0_CR_GTUNE1.tBit.r0_fig_mux10_gtune = 7;
;;;4174   
;;;4175   	        tR1_CR_GTUNE1.tBit.r1_fig_mux1_gtune = 7;
;;;4176   	        tR1_CR_GTUNE1.tBit.r1_fig_mux2_gtune = 7;
;;;4177   	        tR1_CR_GTUNE1.tBit.r1_fig_mux3_gtune = 7;
;;;4178   	        tR1_CR_GTUNE1.tBit.r1_fig_mux4_gtune = 7;
;;;4179   	        tR1_CR_GTUNE1.tBit.r1_fig_mux5_gtune = 7;
;;;4180   	        tR1_CR_GTUNE1.tBit.r1_fig_mux6_gtune = 7;
;;;4181   	        tR1_CR_GTUNE1.tBit.r1_fig_mux7_gtune = 7;
;;;4182   	        tR1_CR_GTUNE1.tBit.r1_fig_mux8_gtune = 7;
;;;4183   	        tR1_CR_GTUNE1.tBit.r1_fig_mux9_gtune = 7;
;;;4184   	        tR1_CR_GTUNE1.tBit.r1_fig_mux10_gtune = 7;
;;;4185   
;;;4186   	        tSMPL_CTL.ulBulk = s_pktmoduleSRICCommonConf->SMPL_CTL.ulBulk;
;;;4187   	        tSMPL_CTL.tBit.fig_smop_prd 		= 2;
;;;4188   	        tSMPL_CTL.tBit.fig_cr_repeat_num 	= 2;
;;;4189   
;;;4190   			for(ulIdx = 0; ulIdx < MSPI_NUM; ulIdx++)
;;;4191   			{
;;;4192   				tR0_TEST_MUX_CTL[ulIdx].ulBulk = s_pktmoduleSRICCommonConf->R0_TEST_MUX_CTL.ulBulk;
;;;4193   				tR1_TEST_MUX_CTL[ulIdx].ulBulk = s_pktmoduleSRICCommonConf->R1_TEST_MUX_CTL.ulBulk;
;;;4194   				tR0_TEST_MUX_CTL[ulIdx].tBit.r0_tm_ps_od = ulIdx % 2;
;;;4195   				tR0_TEST_MUX_CTL[ulIdx].tBit.r0_tm_ps_ev = (ulIdx + 1) % 2;
;;;4196   				tR1_TEST_MUX_CTL[ulIdx].tBit.r1_tm_ps_od = ulIdx % 2;
;;;4197   				tR1_TEST_MUX_CTL[ulIdx].tBit.r1_tm_ps_ev = (ulIdx + 1) % 2;
;;;4198   			}
;;;4199   
;;;4200   
;;;4201   			MSPI_RegisterWrite((uint32_t)(0x0204), tR0_CH_EN.ulBulk);  // R/W
;;;4202   			MSPI_RegisterWrite((uint32_t)(0x0304), tR1_CH_EN.ulBulk);  // R/W
;;;4203   			MSPI_RegisterWrite((uint32_t)(0x0258), tR0_CR_GTUNE1.ulBulk);  // R/W
;;;4204   			MSPI_RegisterWrite((uint32_t)(0x0358), tR1_CR_GTUNE1.ulBulk);  // R/W
;;;4205   			MSPI_RegisterWrite((uint32_t)(0x005C), tSMPL_CTL.ulBulk);  // R/W
;;;4206   	        MSPI_RegisterMultiWrite((uint32_t)(0x0298), (uint32_t *)&tR0_TEST_MUX_CTL[0].ulBulk);  // R/W
;;;4207   	        MSPI_RegisterMultiWrite((uint32_t)(0x0398), (uint32_t *)&tR1_TEST_MUX_CTL[0].ulBulk);  // R/W
;;;4208   
;;;4209   
;;;4210   	        tR0_AFE_SENSE_CTL2.ulBulk = s_pktmoduleSRICCommonConf->R0_AFE_SENSE_CTL2.ulBulk;
;;;4211   	        tR1_AFE_SENSE_CTL2.ulBulk = s_pktmoduleSRICCommonConf->R1_AFE_SENSE_CTL2.ulBulk;
;;;4212   
;;;4213   	        tR0_AFE_SENSE_CTL3.ulBulk = s_pktmoduleSRICCommonConf->R0_AFE_SENSE_CTL3.ulBulk;
;;;4214   	        tR1_AFE_SENSE_CTL3.ulBulk = s_pktmoduleSRICCommonConf->R1_AFE_SENSE_CTL3.ulBulk;
;;;4215   
;;;4216   	        tR0_AFE_SENSE_CTL4.ulBulk = s_pktmoduleSRICCommonConf->R0_AFE_SENSE_CTL4.ulBulk;
;;;4217   	        tR1_AFE_SENSE_CTL4.ulBulk = s_pktmoduleSRICCommonConf->R1_AFE_SENSE_CTL4.ulBulk;
;;;4218   
;;;4219   			tR0_TG_STUCK.ulBulk = s_pktmoduleSRICCommonConf->R0_TG_STUCK.ulBulk;
;;;4220   			tR1_TG_STUCK.ulBulk = s_pktmoduleSRICCommonConf->R1_TG_STUCK.ulBulk;
;;;4221   
;;;4222   			tR0_AFE_SENSE_CTL2.tBit.r0_fig_cvc1_gc = 0;
;;;4223   			tR0_AFE_SENSE_CTL3.tBit.r0_fig_cvc2_gc = 3;
;;;4224   			tR0_AFE_SENSE_CTL4.tBit.r0_fig_int_gc = 3;
;;;4225   			tR0_AFE_SENSE_CTL4.tBit.r0_fig_int_half = 1;
;;;4226   
;;;4227   			tR1_AFE_SENSE_CTL2.tBit.r1_fig_cvc1_gc = 0;
;;;4228   			tR1_AFE_SENSE_CTL3.tBit.r1_fig_cvc2_gc = 3;
;;;4229   			tR1_AFE_SENSE_CTL4.tBit.r1_fig_int_gc = 3;
;;;4230   			tR1_AFE_SENSE_CTL4.tBit.r1_fig_int_half = 1;
;;;4231   
;;;4232   			tR0_TG_STUCK.tBit.r0_stuck_phth0 = 1;
;;;4233   			tR1_TG_STUCK.tBit.r1_stuck_phth0 = 1;
;;;4234   
;;;4235   			MSPI_RegisterWrite((uint32_t)(0x0280), tR0_AFE_SENSE_CTL2.ulBulk);  // R/W
;;;4236   			MSPI_RegisterWrite((uint32_t)(0x0380), tR1_AFE_SENSE_CTL2.ulBulk);  // R/W
;;;4237   			MSPI_RegisterWrite((uint32_t)(0x0284), tR0_AFE_SENSE_CTL3.ulBulk);  // R/W
;;;4238   			MSPI_RegisterWrite((uint32_t)(0x0384), tR1_AFE_SENSE_CTL3.ulBulk);  // R/W
;;;4239   			MSPI_RegisterWrite((uint32_t)(0x0288), tR0_AFE_SENSE_CTL4.ulBulk);  // R/W
;;;4240   			MSPI_RegisterWrite((uint32_t)(0x0388), tR1_AFE_SENSE_CTL4.ulBulk);  // R/W
;;;4241   			MSPI_RegisterWrite((uint32_t)(0x0294), tR0_TG_STUCK.ulBulk);  // R/W
;;;4242   			MSPI_RegisterWrite((uint32_t)(0x0394), tR1_TG_STUCK.ulBulk);  // R/W
;;;4243   
;;;4244   			break;
;;;4245   		}
;;;4246   		case DIAG_CHANGE_SHORT2_TEST_STEP2:	// 2nd Frame
;;;4247   		{
;;;4248   			for(ulIdx = 0; ulIdx < MSPI_NUM; ulIdx++)
;;;4249   			{
;;;4250   				tR0_TEST_MUX_CTL[ulIdx].ulBulk = s_pktmoduleSRICCommonConf->R0_TEST_MUX_CTL.ulBulk;
;;;4251   				tR1_TEST_MUX_CTL[ulIdx].ulBulk = s_pktmoduleSRICCommonConf->R1_TEST_MUX_CTL.ulBulk;
;;;4252   				tR0_TEST_MUX_CTL[ulIdx].tBit.r0_tm_ps_od = (ulIdx + 1) % 2;
;;;4253   				tR0_TEST_MUX_CTL[ulIdx].tBit.r0_tm_ps_ev = ulIdx % 2;
;;;4254   				tR1_TEST_MUX_CTL[ulIdx].tBit.r1_tm_ps_od = (ulIdx + 1) % 2;
;;;4255   				tR1_TEST_MUX_CTL[ulIdx].tBit.r1_tm_ps_ev = ulIdx % 2;
;;;4256   			}
;;;4257   
;;;4258   	        MSPI_RegisterMultiWrite((uint32_t)(0x0298), (uint32_t *)&tR0_TEST_MUX_CTL[0].ulBulk);  // R/W
;;;4259   	        MSPI_RegisterMultiWrite((uint32_t)(0x0398), (uint32_t *)&tR1_TEST_MUX_CTL[0].ulBulk);  // R/W
;;;4260   			break;
;;;4261   		}
;;;4262   		case DIAG_CHANGE_SHORT2_TEST_RECOVERY:
;;;4263   		{
;;;4264   			PWMDRV->TG_DUM5.tBit.tsync_tpic_out_bypass_enb = PARAMSET_PWMDRV_WGP_TG_DUM5_tsync_tpic_out_bypass_enb;
;;;4265   			PWMDRV->PWM_TPIC_CR.tBit.finger_en = PARAMSET_PWMDRV_WGP_PWM_TPIC_CR_finger_en;
;;;4266   			PWMDRV->PWM_TPIC_CR.tBit.finger_dmy_en = PARAMSET_PWMDRV_WGP_PWM_TPIC_CR_finger_dmy_en;
;;;4267   
;;;4268   			MSPI_RegisterWrite((uint32_t)(0x0298), s_pktmoduleSRICCommonConf->R0_TEST_MUX_CTL.ulBulk);  // R/W
;;;4269   			MSPI_RegisterWrite((uint32_t)(0x0398), s_pktmoduleSRICCommonConf->R1_TEST_MUX_CTL.ulBulk);  // R/W
;;;4270   
;;;4271   			MSPI_RegisterMultiWrite((uint32_t)(0x0258), (uint32_t *)&s_pktmoduleSRICCommonConf->R0_CR_GTUNE1[0].ulBulk);  // R/W
;;;4272   //		    MSPI_RegisterMultiWrite((uint32_t)(0x025C), (uint32_t *)&s_pktmoduleSRICCommonConf->R0_CR_GTUNE2[0].ulBulk);  // R/W
;;;4273   			MSPI_RegisterMultiWrite((uint32_t)(0x0358), (uint32_t *)&s_pktmoduleSRICCommonConf->R1_CR_GTUNE1[0].ulBulk);  // R/W
;;;4274   //		    MSPI_RegisterMultiWrite((uint32_t)(0x035C), (uint32_t *)&s_pktmoduleSRICCommonConf->R1_CR_GTUNE2[0].ulBulk);  // R/W
;;;4275   
;;;4276   			MSPI_RegisterWrite((uint32_t)(0x0204), s_pktmoduleSRICCommonConf->R0_CH_EN.ulBulk);  // R/W
;;;4277   			MSPI_RegisterWrite((uint32_t)(0x0304), s_pktmoduleSRICCommonConf->R1_CH_EN.ulBulk);  // R/W
;;;4278   
;;;4279   			MSPI_RegisterWrite((uint32_t)(0x005C), s_pktmoduleSRICCommonConf->SMPL_CTL.ulBulk);  // R/W
;;;4280   
;;;4281   			MSPI_RegisterWrite((uint32_t)(0x0280), s_pktmoduleSRICCommonConf->R0_AFE_SENSE_CTL2.ulBulk);  // R/W
;;;4282   			MSPI_RegisterWrite((uint32_t)(0x0380), s_pktmoduleSRICCommonConf->R1_AFE_SENSE_CTL2.ulBulk);  // R/W
;;;4283   			MSPI_RegisterWrite((uint32_t)(0x0284), s_pktmoduleSRICCommonConf->R0_AFE_SENSE_CTL3.ulBulk);  // R/W
;;;4284   			MSPI_RegisterWrite((uint32_t)(0x0384), s_pktmoduleSRICCommonConf->R1_AFE_SENSE_CTL3.ulBulk);  // R/W
;;;4285   			MSPI_RegisterWrite((uint32_t)(0x0288), s_pktmoduleSRICCommonConf->R0_AFE_SENSE_CTL4.ulBulk);  // R/W
;;;4286   			MSPI_RegisterWrite((uint32_t)(0x0388), s_pktmoduleSRICCommonConf->R1_AFE_SENSE_CTL4.ulBulk);  // R/W
;;;4287   			MSPI_RegisterWrite((uint32_t)(0x0294), s_pktmoduleSRICCommonConf->R0_TG_STUCK.ulBulk);  // R/W
;;;4288   			MSPI_RegisterWrite((uint32_t)(0x0394), s_pktmoduleSRICCommonConf->R1_TG_STUCK.ulBulk);  // R/W
;;;4289   			break;
;;;4290   		}
;;;4291   
;;;4292   		case DIAG_CHANGE_OPEN_TEST_STEP1:
;;;4293   		{
;;;4294   			memcpy((void *)&tSDIC_CFG[0].ulBulk, (void *)&s_pktmoduleSRICCommonConf->SDIC_CFG[0].ulBulk, sizeof(tSDIC_CFG_t)*MSPI_NUM);
;;;4295   			for(ulIdx = 0; ulIdx < MSPI_NUM; ulIdx++)
;;;4296   			{
;;;4297   				tSDIC_CFG[ulIdx].tBit.sd_rocen = 1;
;;;4298   				tSDIC_CFG[ulIdx].tBit.sd_gnd0_ctl = 1;
;;;4299   				tSDIC_CFG[ulIdx].tBit.sd_gnd1_ctl = 1;
;;;4300   				tSDIC_CFG[ulIdx].tBit.sd_float0_ctl = 1;
;;;4301   				tSDIC_CFG[ulIdx].tBit.sd_float1_ctl = 1;
;;;4302   			}
;;;4303   
;;;4304   	        tR0_CR_GTUNE1.tBit.r0_fig_mux1_gtune = 	6;
;;;4305   	        tR0_CR_GTUNE1.tBit.r0_fig_mux2_gtune = 	6;
;;;4306   	        tR0_CR_GTUNE1.tBit.r0_fig_mux3_gtune = 	6;
;;;4307   	        tR0_CR_GTUNE1.tBit.r0_fig_mux4_gtune = 	6;
;;;4308   	        tR0_CR_GTUNE1.tBit.r0_fig_mux5_gtune = 	6;
;;;4309   	        tR0_CR_GTUNE1.tBit.r0_fig_mux6_gtune = 	6;
;;;4310   	        tR0_CR_GTUNE1.tBit.r0_fig_mux7_gtune = 	6;
;;;4311   	        tR0_CR_GTUNE1.tBit.r0_fig_mux8_gtune = 	6;
;;;4312   	        tR0_CR_GTUNE1.tBit.r0_fig_mux9_gtune = 	6;
;;;4313   	        tR0_CR_GTUNE1.tBit.r0_fig_mux10_gtune = 6;
;;;4314   
;;;4315   	        tR1_CR_GTUNE1.tBit.r1_fig_mux1_gtune = 	6;
;;;4316   	        tR1_CR_GTUNE1.tBit.r1_fig_mux2_gtune = 	6;
;;;4317   	        tR1_CR_GTUNE1.tBit.r1_fig_mux3_gtune = 	6;
;;;4318   	        tR1_CR_GTUNE1.tBit.r1_fig_mux4_gtune = 	6;
;;;4319   	        tR1_CR_GTUNE1.tBit.r1_fig_mux5_gtune = 	6;
;;;4320   	        tR1_CR_GTUNE1.tBit.r1_fig_mux6_gtune = 	6;
;;;4321   	        tR1_CR_GTUNE1.tBit.r1_fig_mux7_gtune = 	6;
;;;4322   	        tR1_CR_GTUNE1.tBit.r1_fig_mux8_gtune = 	6;
;;;4323   	        tR1_CR_GTUNE1.tBit.r1_fig_mux9_gtune = 	6;
;;;4324   	        tR1_CR_GTUNE1.tBit.r1_fig_mux10_gtune = 6;
;;;4325   
;;;4326   	        tR0_AFE_SENSE_CTL2.ulBulk = s_pktmoduleSRICCommonConf->R0_AFE_SENSE_CTL2.ulBulk;
;;;4327   	        tR1_AFE_SENSE_CTL2.ulBulk = s_pktmoduleSRICCommonConf->R1_AFE_SENSE_CTL2.ulBulk;
;;;4328   
;;;4329   	        tR0_AFE_SENSE_CTL3.ulBulk = s_pktmoduleSRICCommonConf->R0_AFE_SENSE_CTL3.ulBulk;
;;;4330   	        tR1_AFE_SENSE_CTL3.ulBulk = s_pktmoduleSRICCommonConf->R1_AFE_SENSE_CTL3.ulBulk;
;;;4331   
;;;4332   	        tR0_AFE_SENSE_CTL4.ulBulk = s_pktmoduleSRICCommonConf->R0_AFE_SENSE_CTL4.ulBulk;
;;;4333   	        tR1_AFE_SENSE_CTL4.ulBulk = s_pktmoduleSRICCommonConf->R1_AFE_SENSE_CTL4.ulBulk;
;;;4334   
;;;4335   	        tR0_AFE_SENSE_CTL2.tBit.r0_fig_cvc1_gc = 2;//3;
;;;4336   	        tR1_AFE_SENSE_CTL2.tBit.r1_fig_cvc1_gc = 2;//3;
;;;4337   	    	tR0_AFE_SENSE_CTL3.tBit.r0_fig_cvc2_gc = 3;
;;;4338   	    	tR1_AFE_SENSE_CTL3.tBit.r1_fig_cvc2_gc = 3;
;;;4339   	    	tR0_AFE_SENSE_CTL4.tBit.r0_fig_int_gc = 3;
;;;4340   	    	tR0_AFE_SENSE_CTL4.tBit.r0_fig_int_half = 1;
;;;4341   	    	tR1_AFE_SENSE_CTL4.tBit.r1_fig_int_gc = 3;
;;;4342   	    	tR1_AFE_SENSE_CTL4.tBit.r1_fig_int_half = 1;
;;;4343   
;;;4344   	        MSPI_RegisterMultiWrite((uint32_t)(0x0028), (uint32_t *)&tSDIC_CFG[0].ulBulk);  // R/W
;;;4345   			MSPI_RegisterWrite((uint32_t)(0x0258), tR0_CR_GTUNE1.ulBulk);  // R/W
;;;4346   			MSPI_RegisterWrite((uint32_t)(0x0358), tR1_CR_GTUNE1.ulBulk);  // R/W
;;;4347   
;;;4348   			MSPI_RegisterWrite((uint32_t)(0x0280), tR0_AFE_SENSE_CTL2.ulBulk);  // R/W
;;;4349   			MSPI_RegisterWrite((uint32_t)(0x0380), tR1_AFE_SENSE_CTL2.ulBulk);  // R/W
;;;4350   
;;;4351   			MSPI_RegisterWrite((uint32_t)(0x0284), tR0_AFE_SENSE_CTL3.ulBulk);  // R/W
;;;4352   			MSPI_RegisterWrite((uint32_t)(0x0384), tR1_AFE_SENSE_CTL3.ulBulk);  // R/W
;;;4353   
;;;4354   			MSPI_RegisterWrite((uint32_t)(0x0288), tR0_AFE_SENSE_CTL4.ulBulk);  // R/W
;;;4355   			MSPI_RegisterWrite((uint32_t)(0x0388), tR1_AFE_SENSE_CTL4.ulBulk);  // R/W
;;;4356   			break;
;;;4357   		}
;;;4358   		case DIAG_CHANGE_OPEN_TEST_RECOVERY:
;;;4359   		{
;;;4360   			MSPI_RegisterMultiWrite((uint32_t)(0x0028), (uint32_t *)&s_pktmoduleSRICCommonConf->SDIC_CFG[0].ulBulk);  // R/W  Must Check!!!!
;;;4361   
;;;4362   		    MSPI_RegisterMultiWrite((uint32_t)(0x0258), (uint32_t *)&s_pktmoduleSRICCommonConf->R0_CR_GTUNE1[0].ulBulk);  // R/W
;;;4363   //		    MSPI_RegisterMultiWrite((uint32_t)(0x025C), (uint32_t *)&s_pktmoduleSRICCommonConf->R0_CR_GTUNE2[0].ulBulk);  // R/W
;;;4364   		    MSPI_RegisterMultiWrite((uint32_t)(0x0358), (uint32_t *)&s_pktmoduleSRICCommonConf->R1_CR_GTUNE1[0].ulBulk);  // R/W
;;;4365   //		    MSPI_RegisterMultiWrite((uint32_t)(0x035C), (uint32_t *)&s_pktmoduleSRICCommonConf->R1_CR_GTUNE2[0].ulBulk);  // R/W
;;;4366   
;;;4367   			MSPI_RegisterWrite((uint32_t)(0x0280), s_pktmoduleSRICCommonConf->R0_AFE_SENSE_CTL2.ulBulk);  // R/W
;;;4368   			MSPI_RegisterWrite((uint32_t)(0x0380), s_pktmoduleSRICCommonConf->R1_AFE_SENSE_CTL2.ulBulk);  // R/W
;;;4369   
;;;4370   			MSPI_RegisterWrite((uint32_t)(0x0284), s_pktmoduleSRICCommonConf->R0_AFE_SENSE_CTL3.ulBulk);  // R/W
;;;4371   			MSPI_RegisterWrite((uint32_t)(0x0384), s_pktmoduleSRICCommonConf->R1_AFE_SENSE_CTL3.ulBulk);  // R/W
;;;4372   
;;;4373   			MSPI_RegisterWrite((uint32_t)(0x0288), s_pktmoduleSRICCommonConf->R0_AFE_SENSE_CTL4.ulBulk);  // R/W
;;;4374   			MSPI_RegisterWrite((uint32_t)(0x0388), s_pktmoduleSRICCommonConf->R1_AFE_SENSE_CTL4.ulBulk);  // R/W
;;;4375   			break;
;;;4376   		}
;;;4377   		default:
;;;4378   			break;
;;;4379   	}
;;;4380   #endif
;;;4381   }
000006  bf24              ITT      CS
000008  b014              ADDCS    sp,sp,#0x50
00000a  bd10              POPCS    {r4,pc}
00000c  e8dff000          TBB      [pc,r0]
000010  fdfcfcfc          DCB      0xfd,0xfc,0xfc,0xfc
000014  fcfcfcfc          DCB      0xfc,0xfc,0xfc,0xfc
000018  fcfb10fa          DCB      0xfc,0xfb,0x10,0xfa
00001c  f9f8f7f6          DCB      0xf9,0xf8,0xf7,0xf6
000020  f5f4f3f2          DCB      0xf5,0xf4,0xf3,0xf2
000024  fcfcf1f0          DCB      0xfc,0xfc,0xf1,0xf0
000028  effcfcfc          DCB      0xef,0xfc,0xfc,0xfc
00002c  fcfcfcee          DCB      0xfc,0xfc,0xfc,0xee
000030  48fe              LDR      r0,|L8.1068|
000032  f8501ffc          LDR      r1,[r0,#0xfc]!        ;3907
000036  f0210101          BIC      r1,r1,#1              ;3907
00003a  f840197c          STR      r1,[r0],#-0x7c        ;3907
00003e  6801              LDR      r1,[r0,#0]            ;3908
000040  f0210140          BIC      r1,r1,#0x40           ;3908
000044  6001              STR      r1,[r0,#0]            ;3908
000046  6801              LDR      r1,[r0,#0]            ;3909
000048  f4217100          BIC      r1,r1,#0x200          ;3909
00004c  6001              STR      r1,[r0,#0]            ;3909
00004e  f89d0038          LDRB     r0,[sp,#0x38]         ;3912
000052  f0400001          ORR      r0,r0,#1              ;3912
000056  f88d0038          STRB     r0,[sp,#0x38]         ;3912
00005a  f8bd1038          LDRH     r1,[sp,#0x38]         ;3913
00005e  f24070fe          MOV      r0,#0x7fe             ;3913
000062  4301              ORRS     r1,r1,r0              ;3913
000064  f8ad1038          STRH     r1,[sp,#0x38]         ;3913
000068  f89d1039          LDRB     r1,[sp,#0x39]         ;3914
00006c  f0410108          ORR      r1,r1,#8              ;3914
000070  f88d1039          STRB     r1,[sp,#0x39]         ;3914
000074  f8bd2039          LDRH     r2,[sp,#0x39]         ;3915
000078  f24031fe          MOV      r1,#0x3fe             ;3915
00007c  f361120d          BFI      r2,r1,#4,#10          ;3915
000080  f8ad2039          STRH     r2,[sp,#0x39]         ;3915
000084  f89d203c          LDRB     r2,[sp,#0x3c]         ;3917
000088  f0420201          ORR      r2,r2,#1              ;3917
00008c  f88d203c          STRB     r2,[sp,#0x3c]         ;3917
000090  f8bd203c          LDRH     r2,[sp,#0x3c]         ;3918
000094  4310              ORRS     r0,r0,r2              ;3918
000096  f8ad003c          STRH     r0,[sp,#0x3c]         ;3918
00009a  f89d003d          LDRB     r0,[sp,#0x3d]         ;3919
00009e  f0400008          ORR      r0,r0,#8              ;3919
0000a2  f88d003d          STRB     r0,[sp,#0x3d]         ;3919
0000a6  f8bd003d          LDRH     r0,[sp,#0x3d]         ;3920
0000aa  f361100d          BFI      r0,r1,#4,#10          ;3920
0000ae  f8ad003d          STRH     r0,[sp,#0x3d]         ;3920
0000b2  f89d0000          LDRB     r0,[sp,#0]            ;3922
0000b6  f0400007          ORR      r0,r0,#7              ;3922
0000ba  f88d0000          STRB     r0,[sp,#0]            ;3922
0000be  f89d0000          LDRB     r0,[sp,#0]            ;3923
0000c2  f0400038          ORR      r0,r0,#0x38           ;3923
0000c6  f88d0000          STRB     r0,[sp,#0]            ;3923
0000ca  f8bd0000          LDRH     r0,[sp,#0]            ;3924
0000ce  f44070e0          ORR      r0,r0,#0x1c0          ;3924
0000d2  f8ad0000          STRH     r0,[sp,#0]            ;3924
0000d6  f89d0001          LDRB     r0,[sp,#1]            ;3925
0000da  f040000e          ORR      r0,r0,#0xe            ;3925
0000de  f88d0001          STRB     r0,[sp,#1]            ;3925
0000e2  f89d0001          LDRB     r0,[sp,#1]            ;3926
0000e6  f0400070          ORR      r0,r0,#0x70           ;3926
0000ea  f88d0001          STRB     r0,[sp,#1]            ;3926
0000ee  f8bd0001          LDRH     r0,[sp,#1]            ;3927
0000f2  f4407060          ORR      r0,r0,#0x380          ;3927
0000f6  f8ad0001          STRH     r0,[sp,#1]            ;3927
0000fa  f89d0002          LDRB     r0,[sp,#2]            ;3928
0000fe  f040001c          ORR      r0,r0,#0x1c           ;3928
000102  f88d0002          STRB     r0,[sp,#2]            ;3928
000106  f89d0002          LDRB     r0,[sp,#2]            ;3929
00010a  f04000e0          ORR      r0,r0,#0xe0           ;3929
00010e  f88d0002          STRB     r0,[sp,#2]            ;3929
000112  f89d0003          LDRB     r0,[sp,#3]            ;3930
000116  f0400007          ORR      r0,r0,#7              ;3930
00011a  f88d0003          STRB     r0,[sp,#3]            ;3930
00011e  f89d0003          LDRB     r0,[sp,#3]            ;3931
000122  f0400038          ORR      r0,r0,#0x38           ;3931
000126  f88d0003          STRB     r0,[sp,#3]            ;3931
00012a  f89d0004          LDRB     r0,[sp,#4]            ;3933
00012e  f0400007          ORR      r0,r0,#7              ;3933
000132  f88d0004          STRB     r0,[sp,#4]            ;3933
000136  f89d0004          LDRB     r0,[sp,#4]            ;3934
00013a  f0400038          ORR      r0,r0,#0x38           ;3934
00013e  f88d0004          STRB     r0,[sp,#4]            ;3934
000142  f8bd0004          LDRH     r0,[sp,#4]            ;3935
000146  f44070e0          ORR      r0,r0,#0x1c0          ;3935
00014a  f8ad0004          STRH     r0,[sp,#4]            ;3935
00014e  f89d0005          LDRB     r0,[sp,#5]            ;3936
000152  f040000e          ORR      r0,r0,#0xe            ;3936
000156  f88d0005          STRB     r0,[sp,#5]            ;3936
00015a  f89d0005          LDRB     r0,[sp,#5]            ;3937
00015e  f0400070          ORR      r0,r0,#0x70           ;3937
000162  f88d0005          STRB     r0,[sp,#5]            ;3937
000166  f8bd0005          LDRH     r0,[sp,#5]            ;3938
00016a  f4407060          ORR      r0,r0,#0x380          ;3938
00016e  f8ad0005          STRH     r0,[sp,#5]            ;3938
000172  f89d0006          LDRB     r0,[sp,#6]            ;3939
000176  f040001c          ORR      r0,r0,#0x1c           ;3939
00017a  f88d0006          STRB     r0,[sp,#6]            ;3939
00017e  f89d0006          LDRB     r0,[sp,#6]            ;3940
000182  f04000e0          ORR      r0,r0,#0xe0           ;3940
000186  f88d0006          STRB     r0,[sp,#6]            ;3940
00018a  f89d0007          LDRB     r0,[sp,#7]            ;3941
00018e  f0400007          ORR      r0,r0,#7              ;3941
000192  f88d0007          STRB     r0,[sp,#7]            ;3941
000196  f89d0007          LDRB     r0,[sp,#7]            ;3942
00019a  f0400038          ORR      r0,r0,#0x38           ;3942
00019e  f88d0007          STRB     r0,[sp,#7]            ;3942
0001a2  990e              LDR      r1,[sp,#0x38]         ;3944
0001a4  f44f7005          MOV      r0,#0x214             ;3944
0001a8  f7fffffe          BL       MSPI_RegisterWrite
0001ac  990f              LDR      r1,[sp,#0x3c]         ;3945
0001ae  f44f7045          MOV      r0,#0x314             ;3945
0001b2  f7fffffe          BL       MSPI_RegisterWrite
0001b6  9900              LDR      r1,[sp,#0]            ;3946
0001b8  f44f7016          MOV      r0,#0x258             ;3946
0001bc  f7fffffe          BL       MSPI_RegisterWrite
0001c0  9901              LDR      r1,[sp,#4]            ;3947
0001c2  f44f7056          MOV      r0,#0x358             ;3947
0001c6  f7fffffe          BL       MSPI_RegisterWrite
0001ca  4899              LDR      r0,|L8.1072|
0001cc  6800              LDR      r0,[r0,#0]            ;3949  ; s_pktmoduleSRICCommonConf
0001ce  f8d01284          LDR      r1,[r0,#0x284]        ;3949
0001d2  9110              STR      r1,[sp,#0x40]         ;3949
0001d4  f8d01408          LDR      r1,[r0,#0x408]        ;3950
0001d8  9111              STR      r1,[sp,#0x44]         ;3950
0001da  f8d01288          LDR      r1,[r0,#0x288]        ;3952
0001de  9112              STR      r1,[sp,#0x48]         ;3952
0001e0  f8d0140c          LDR      r1,[r0,#0x40c]        ;3953
0001e4  9113              STR      r1,[sp,#0x4c]         ;3953
0001e6  f8d0128c          LDR      r1,[r0,#0x28c]        ;3955
0001ea  e00f              B        |L8.524|
0001ec  e3fe              B        |L8.2540|
0001ee  e3fe              B        |L8.2542|
0001f0  e30c              B        |L8.2060|
0001f2  e2a9              B        |L8.1864|
0001f4  e26e              B        |L8.1748|
0001f6  e22f              B        |L8.1624|
0001f8  e1f0              B        |L8.1500|
0001fa  e1b1              B        |L8.1376|
0001fc  e172              B        |L8.1252|
0001fe  e133              B        |L8.1128|
000200  e0ee              B        |L8.992|
000202  e0af              B        |L8.868|
000204  e070              B        |L8.744|
000206  e3f3              B        |L8.2544|
000208  e0aa              B        |L8.864|
00020a  e3f2              B        |L8.2546|
                  |L8.524|
00020c  910f              STR      r1,[sp,#0x3c]         ;3955
00020e  f8d01410          LDR      r1,[r0,#0x410]        ;3956
000212  910e              STR      r1,[sp,#0x38]         ;3956
000214  f8d01298          LDR      r1,[r0,#0x298]        ;3958
000218  9100              STR      r1,[sp,#0]            ;3958
00021a  f8d0041c          LDR      r0,[r0,#0x41c]        ;3959
00021e  9001              STR      r0,[sp,#4]            ;3959
000220  f89d0040          LDRB     r0,[sp,#0x40]         ;3961
000224  f0200003          BIC      r0,r0,#3              ;3961
000228  f88d0040          STRB     r0,[sp,#0x40]         ;3961
00022c  f89d0048          LDRB     r0,[sp,#0x48]         ;3962
000230  f0400003          ORR      r0,r0,#3              ;3962
000234  f88d0048          STRB     r0,[sp,#0x48]         ;3962
000238  f89d003c          LDRB     r0,[sp,#0x3c]         ;3963
00023c  f0400003          ORR      r0,r0,#3              ;3963
000240  f88d003c          STRB     r0,[sp,#0x3c]         ;3963
000244  f89d003d          LDRB     r0,[sp,#0x3d]         ;3964
000248  f0400040          ORR      r0,r0,#0x40           ;3964
00024c  f88d003d          STRB     r0,[sp,#0x3d]         ;3964
000250  f89d0044          LDRB     r0,[sp,#0x44]         ;3966
000254  f0200003          BIC      r0,r0,#3              ;3966
000258  f88d0044          STRB     r0,[sp,#0x44]         ;3966
00025c  f89d004c          LDRB     r0,[sp,#0x4c]         ;3967
000260  f0400003          ORR      r0,r0,#3              ;3967
000264  f88d004c          STRB     r0,[sp,#0x4c]         ;3967
000268  f89d0038          LDRB     r0,[sp,#0x38]         ;3968
00026c  f0400003          ORR      r0,r0,#3              ;3968
000270  f88d0038          STRB     r0,[sp,#0x38]         ;3968
000274  f89d0039          LDRB     r0,[sp,#0x39]         ;3969
000278  f0400040          ORR      r0,r0,#0x40           ;3969
00027c  f88d0039          STRB     r0,[sp,#0x39]         ;3969
000280  f89d0001          LDRB     r0,[sp,#1]            ;3971
000284  f0200030          BIC      r0,r0,#0x30           ;3971
000288  3010              ADDS     r0,r0,#0x10           ;3971
00028a  f88d0001          STRB     r0,[sp,#1]            ;3971
00028e  f89d0005          LDRB     r0,[sp,#5]            ;3972
000292  f0200030          BIC      r0,r0,#0x30           ;3972
000296  3010              ADDS     r0,r0,#0x10           ;3972
000298  f88d0005          STRB     r0,[sp,#5]            ;3972
00029c  9910              LDR      r1,[sp,#0x40]         ;3974
00029e  f44f7020          MOV      r0,#0x280             ;3974
0002a2  f7fffffe          BL       MSPI_RegisterWrite
0002a6  9911              LDR      r1,[sp,#0x44]         ;3975
0002a8  f44f7060          MOV      r0,#0x380             ;3975
0002ac  f7fffffe          BL       MSPI_RegisterWrite
0002b0  9912              LDR      r1,[sp,#0x48]         ;3976
0002b2  f44f7021          MOV      r0,#0x284             ;3976
0002b6  f7fffffe          BL       MSPI_RegisterWrite
0002ba  9913              LDR      r1,[sp,#0x4c]         ;3977
0002bc  f44f7061          MOV      r0,#0x384             ;3977
0002c0  f7fffffe          BL       MSPI_RegisterWrite
0002c4  990f              LDR      r1,[sp,#0x3c]         ;3978
0002c6  f44f7022          MOV      r0,#0x288             ;3978
0002ca  f7fffffe          BL       MSPI_RegisterWrite
0002ce  990e              LDR      r1,[sp,#0x38]         ;3979
0002d0  f44f7062          MOV      r0,#0x388             ;3979
0002d4  f7fffffe          BL       MSPI_RegisterWrite
0002d8  9900              LDR      r1,[sp,#0]            ;3980
0002da  f44f7025          MOV      r0,#0x294             ;3980
0002de  f7fffffe          BL       MSPI_RegisterWrite
0002e2  9901              LDR      r1,[sp,#4]            ;3981
0002e4  f000bd58          B.W      |L8.3480|
                  |L8.744|
0002e8  f89d0038          LDRB     r0,[sp,#0x38]         ;3986
0002ec  f0400001          ORR      r0,r0,#1              ;3986
0002f0  f88d0038          STRB     r0,[sp,#0x38]         ;3986
0002f4  f8bd1038          LDRH     r1,[sp,#0x38]         ;3987
0002f8  f24070fe          MOV      r0,#0x7fe             ;3987
0002fc  4301              ORRS     r1,r1,r0              ;3987
0002fe  f8ad1038          STRH     r1,[sp,#0x38]         ;3987
000302  f89d1039          LDRB     r1,[sp,#0x39]         ;3988
000306  f0410108          ORR      r1,r1,#8              ;3988
00030a  f88d1039          STRB     r1,[sp,#0x39]         ;3988
00030e  f8bd2039          LDRH     r2,[sp,#0x39]         ;3989
000312  f24031fd          MOV      r1,#0x3fd             ;3989
000316  f361120d          BFI      r2,r1,#4,#10          ;3989
00031a  f8ad2039          STRH     r2,[sp,#0x39]         ;3989
00031e  f89d203c          LDRB     r2,[sp,#0x3c]         ;3991
000322  f0420201          ORR      r2,r2,#1              ;3991
000326  f88d203c          STRB     r2,[sp,#0x3c]         ;3991
00032a  f8bd203c          LDRH     r2,[sp,#0x3c]         ;3992
00032e  4310              ORRS     r0,r0,r2              ;3992
000330  f8ad003c          STRH     r0,[sp,#0x3c]         ;3992
000334  f89d003d          LDRB     r0,[sp,#0x3d]         ;3993
000338  f0400008          ORR      r0,r0,#8              ;3993
00033c  f88d003d          STRB     r0,[sp,#0x3d]         ;3993
000340  f8bd003d          LDRH     r0,[sp,#0x3d]         ;3994
000344  f361100d          BFI      r0,r1,#4,#10          ;3994
000348  f8ad003d          STRH     r0,[sp,#0x3d]         ;3994
00034c  990e              LDR      r1,[sp,#0x38]         ;3996
00034e  f44f7005          MOV      r0,#0x214             ;3996
000352  f7fffffe          BL       MSPI_RegisterWrite
000356  990f              LDR      r1,[sp,#0x3c]         ;3997
000358  f44f7045          MOV      r0,#0x314             ;3997
00035c  f7fffffe          BL       MSPI_RegisterWrite
                  |L8.864|
000360  b014              ADD      sp,sp,#0x50
000362  bd10              POP      {r4,pc}
                  |L8.868|
000364  f89d0038          LDRB     r0,[sp,#0x38]         ;4002
000368  f0400001          ORR      r0,r0,#1              ;4002
00036c  f88d0038          STRB     r0,[sp,#0x38]         ;4002
000370  f8bd1038          LDRH     r1,[sp,#0x38]         ;4003
000374  f24070fe          MOV      r0,#0x7fe             ;4003
000378  4301              ORRS     r1,r1,r0              ;4003
00037a  f8ad1038          STRH     r1,[sp,#0x38]         ;4003
00037e  f89d1039          LDRB     r1,[sp,#0x39]         ;4004
000382  f0410108          ORR      r1,r1,#8              ;4004
000386  f88d1039          STRB     r1,[sp,#0x39]         ;4004
00038a  f8bd2039          LDRH     r2,[sp,#0x39]         ;4005
00038e  f24031fb          MOV      r1,#0x3fb             ;4005
000392  f361120d          BFI      r2,r1,#4,#10          ;4005
000396  f8ad2039          STRH     r2,[sp,#0x39]         ;4005
00039a  f89d203c          LDRB     r2,[sp,#0x3c]         ;4007
00039e  f0420201          ORR      r2,r2,#1              ;4007
0003a2  f88d203c          STRB     r2,[sp,#0x3c]         ;4007
0003a6  f8bd203c          LDRH     r2,[sp,#0x3c]         ;4008
0003aa  4310              ORRS     r0,r0,r2              ;4008
0003ac  f8ad003c          STRH     r0,[sp,#0x3c]         ;4008
0003b0  f89d003d          LDRB     r0,[sp,#0x3d]         ;4009
0003b4  f0400008          ORR      r0,r0,#8              ;4009
0003b8  f88d003d          STRB     r0,[sp,#0x3d]         ;4009
0003bc  f8bd003d          LDRH     r0,[sp,#0x3d]         ;4010
0003c0  f361100d          BFI      r0,r1,#4,#10          ;4010
0003c4  f8ad003d          STRH     r0,[sp,#0x3d]         ;4010
0003c8  990e              LDR      r1,[sp,#0x38]         ;4012
0003ca  f44f7005          MOV      r0,#0x214             ;4012
0003ce  f7fffffe          BL       MSPI_RegisterWrite
0003d2  990f              LDR      r1,[sp,#0x3c]         ;4013
0003d4  f44f7045          MOV      r0,#0x314             ;4013
0003d8  f7fffffe          BL       MSPI_RegisterWrite
0003dc  b014              ADD      sp,sp,#0x50
0003de  bd10              POP      {r4,pc}
                  |L8.992|
0003e0  f89d0038          LDRB     r0,[sp,#0x38]         ;4018
0003e4  f0400001          ORR      r0,r0,#1              ;4018
0003e8  f88d0038          STRB     r0,[sp,#0x38]         ;4018
0003ec  f8bd1038          LDRH     r1,[sp,#0x38]         ;4019
0003f0  f24070fe          MOV      r0,#0x7fe             ;4019
0003f4  4301              ORRS     r1,r1,r0              ;4019
0003f6  f8ad1038          STRH     r1,[sp,#0x38]         ;4019
0003fa  f89d1039          LDRB     r1,[sp,#0x39]         ;4020
0003fe  f0410108          ORR      r1,r1,#8              ;4020
000402  f88d1039          STRB     r1,[sp,#0x39]         ;4020
000406  f8bd2039          LDRH     r2,[sp,#0x39]         ;4021
00040a  f24031f7          MOV      r1,#0x3f7             ;4021
00040e  f361120d          BFI      r2,r1,#4,#10          ;4021
000412  f8ad2039          STRH     r2,[sp,#0x39]         ;4021
000416  f89d203c          LDRB     r2,[sp,#0x3c]         ;4023
00041a  f0420201          ORR      r2,r2,#1              ;4023
00041e  f88d203c          STRB     r2,[sp,#0x3c]         ;4023
000422  f8bd203c          LDRH     r2,[sp,#0x3c]         ;4024
000426  4310              ORRS     r0,r0,r2              ;4024
000428  e004              B        |L8.1076|
00042a  0000              DCW      0x0000
                  |L8.1068|
                          DCD      0x40002000
                  |L8.1072|
                          DCD      ||.data||
                  |L8.1076|
000434  f8ad003c          STRH     r0,[sp,#0x3c]         ;4024
000438  f89d003d          LDRB     r0,[sp,#0x3d]         ;4025
00043c  f0400008          ORR      r0,r0,#8              ;4025
000440  f88d003d          STRB     r0,[sp,#0x3d]         ;4025
000444  f8bd003d          LDRH     r0,[sp,#0x3d]         ;4026
000448  f361100d          BFI      r0,r1,#4,#10          ;4026
00044c  f8ad003d          STRH     r0,[sp,#0x3d]         ;4026
000450  990e              LDR      r1,[sp,#0x38]         ;4028
000452  f44f7005          MOV      r0,#0x214             ;4028
000456  f7fffffe          BL       MSPI_RegisterWrite
00045a  990f              LDR      r1,[sp,#0x3c]         ;4029
00045c  f44f7045          MOV      r0,#0x314             ;4029
000460  f7fffffe          BL       MSPI_RegisterWrite
000464  b014              ADD      sp,sp,#0x50
000466  bd10              POP      {r4,pc}
                  |L8.1128|
000468  f89d0038          LDRB     r0,[sp,#0x38]         ;4034
00046c  f0400001          ORR      r0,r0,#1              ;4034
000470  f88d0038          STRB     r0,[sp,#0x38]         ;4034
000474  f8bd1038          LDRH     r1,[sp,#0x38]         ;4035
000478  f24070fe          MOV      r0,#0x7fe             ;4035
00047c  4301              ORRS     r1,r1,r0              ;4035
00047e  f8ad1038          STRH     r1,[sp,#0x38]         ;4035
000482  f89d1039          LDRB     r1,[sp,#0x39]         ;4036
000486  f0410108          ORR      r1,r1,#8              ;4036
00048a  f88d1039          STRB     r1,[sp,#0x39]         ;4036
00048e  f8bd2039          LDRH     r2,[sp,#0x39]         ;4037
000492  f24031ef          MOV      r1,#0x3ef             ;4037
000496  f361120d          BFI      r2,r1,#4,#10          ;4037
00049a  f8ad2039          STRH     r2,[sp,#0x39]         ;4037
00049e  f89d203c          LDRB     r2,[sp,#0x3c]         ;4039
0004a2  f0420201          ORR      r2,r2,#1              ;4039
0004a6  f88d203c          STRB     r2,[sp,#0x3c]         ;4039
0004aa  f8bd203c          LDRH     r2,[sp,#0x3c]         ;4040
0004ae  4310              ORRS     r0,r0,r2              ;4040
0004b0  f8ad003c          STRH     r0,[sp,#0x3c]         ;4040
0004b4  f89d003d          LDRB     r0,[sp,#0x3d]         ;4041
0004b8  f0400008          ORR      r0,r0,#8              ;4041
0004bc  f88d003d          STRB     r0,[sp,#0x3d]         ;4041
0004c0  f8bd003d          LDRH     r0,[sp,#0x3d]         ;4042
0004c4  f361100d          BFI      r0,r1,#4,#10          ;4042
0004c8  f8ad003d          STRH     r0,[sp,#0x3d]         ;4042
0004cc  990e              LDR      r1,[sp,#0x38]         ;4044
0004ce  f44f7005          MOV      r0,#0x214             ;4044
0004d2  f7fffffe          BL       MSPI_RegisterWrite
0004d6  990f              LDR      r1,[sp,#0x3c]         ;4045
0004d8  f44f7045          MOV      r0,#0x314             ;4045
0004dc  f7fffffe          BL       MSPI_RegisterWrite
0004e0  b014              ADD      sp,sp,#0x50
0004e2  bd10              POP      {r4,pc}
                  |L8.1252|
0004e4  f89d0038          LDRB     r0,[sp,#0x38]         ;4050
0004e8  f0400001          ORR      r0,r0,#1              ;4050
0004ec  f88d0038          STRB     r0,[sp,#0x38]         ;4050
0004f0  f8bd1038          LDRH     r1,[sp,#0x38]         ;4051
0004f4  f24070fe          MOV      r0,#0x7fe             ;4051
0004f8  4301              ORRS     r1,r1,r0              ;4051
0004fa  f8ad1038          STRH     r1,[sp,#0x38]         ;4051
0004fe  f89d1039          LDRB     r1,[sp,#0x39]         ;4052
000502  f0410108          ORR      r1,r1,#8              ;4052
000506  f88d1039          STRB     r1,[sp,#0x39]         ;4052
00050a  f8bd2039          LDRH     r2,[sp,#0x39]         ;4053
00050e  f24031df          MOV      r1,#0x3df             ;4053
000512  f361120d          BFI      r2,r1,#4,#10          ;4053
000516  f8ad2039          STRH     r2,[sp,#0x39]         ;4053
00051a  f89d203c          LDRB     r2,[sp,#0x3c]         ;4055
00051e  f0420201          ORR      r2,r2,#1              ;4055
000522  f88d203c          STRB     r2,[sp,#0x3c]         ;4055
000526  f8bd203c          LDRH     r2,[sp,#0x3c]         ;4056
00052a  4310              ORRS     r0,r0,r2              ;4056
00052c  f8ad003c          STRH     r0,[sp,#0x3c]         ;4056
000530  f89d003d          LDRB     r0,[sp,#0x3d]         ;4057
000534  f0400008          ORR      r0,r0,#8              ;4057
000538  f88d003d          STRB     r0,[sp,#0x3d]         ;4057
00053c  f8bd003d          LDRH     r0,[sp,#0x3d]         ;4058
000540  f361100d          BFI      r0,r1,#4,#10          ;4058
000544  f8ad003d          STRH     r0,[sp,#0x3d]         ;4058
000548  990e              LDR      r1,[sp,#0x38]         ;4060
00054a  f44f7005          MOV      r0,#0x214             ;4060
00054e  f7fffffe          BL       MSPI_RegisterWrite
000552  990f              LDR      r1,[sp,#0x3c]         ;4061
000554  f44f7045          MOV      r0,#0x314             ;4061
000558  f7fffffe          BL       MSPI_RegisterWrite
00055c  b014              ADD      sp,sp,#0x50
00055e  bd10              POP      {r4,pc}
                  |L8.1376|
000560  f89d0038          LDRB     r0,[sp,#0x38]         ;4066
000564  f0400001          ORR      r0,r0,#1              ;4066
000568  f88d0038          STRB     r0,[sp,#0x38]         ;4066
00056c  f8bd1038          LDRH     r1,[sp,#0x38]         ;4067
000570  f24070fe          MOV      r0,#0x7fe             ;4067
000574  4301              ORRS     r1,r1,r0              ;4067
000576  f8ad1038          STRH     r1,[sp,#0x38]         ;4067
00057a  f89d1039          LDRB     r1,[sp,#0x39]         ;4068
00057e  f0410108          ORR      r1,r1,#8              ;4068
000582  f88d1039          STRB     r1,[sp,#0x39]         ;4068
000586  f8bd2039          LDRH     r2,[sp,#0x39]         ;4069
00058a  f24031bf          MOV      r1,#0x3bf             ;4069
00058e  f361120d          BFI      r2,r1,#4,#10          ;4069
000592  f8ad2039          STRH     r2,[sp,#0x39]         ;4069
000596  f89d203c          LDRB     r2,[sp,#0x3c]         ;4071
00059a  f0420201          ORR      r2,r2,#1              ;4071
00059e  f88d203c          STRB     r2,[sp,#0x3c]         ;4071
0005a2  f8bd203c          LDRH     r2,[sp,#0x3c]         ;4072
0005a6  4310              ORRS     r0,r0,r2              ;4072
0005a8  f8ad003c          STRH     r0,[sp,#0x3c]         ;4072
0005ac  f89d003d          LDRB     r0,[sp,#0x3d]         ;4073
0005b0  f0400008          ORR      r0,r0,#8              ;4073
0005b4  f88d003d          STRB     r0,[sp,#0x3d]         ;4073
0005b8  f8bd003d          LDRH     r0,[sp,#0x3d]         ;4074
0005bc  f361100d          BFI      r0,r1,#4,#10          ;4074
0005c0  f8ad003d          STRH     r0,[sp,#0x3d]         ;4074
0005c4  990e              LDR      r1,[sp,#0x38]         ;4076
0005c6  f44f7005          MOV      r0,#0x214             ;4076
0005ca  f7fffffe          BL       MSPI_RegisterWrite
0005ce  990f              LDR      r1,[sp,#0x3c]         ;4077
0005d0  f44f7045          MOV      r0,#0x314             ;4077
0005d4  f7fffffe          BL       MSPI_RegisterWrite
0005d8  b014              ADD      sp,sp,#0x50
0005da  bd10              POP      {r4,pc}
                  |L8.1500|
0005dc  f89d0038          LDRB     r0,[sp,#0x38]         ;4082
0005e0  f0400001          ORR      r0,r0,#1              ;4082
0005e4  f88d0038          STRB     r0,[sp,#0x38]         ;4082
0005e8  f8bd1038          LDRH     r1,[sp,#0x38]         ;4083
0005ec  f24070fe          MOV      r0,#0x7fe             ;4083
0005f0  4301              ORRS     r1,r1,r0              ;4083
0005f2  f8ad1038          STRH     r1,[sp,#0x38]         ;4083
0005f6  f89d1039          LDRB     r1,[sp,#0x39]         ;4084
0005fa  f0410108          ORR      r1,r1,#8              ;4084
0005fe  f88d1039          STRB     r1,[sp,#0x39]         ;4084
000602  f8bd2039          LDRH     r2,[sp,#0x39]         ;4085
000606  f240317f          MOV      r1,#0x37f             ;4085
00060a  f361120d          BFI      r2,r1,#4,#10          ;4085
00060e  f8ad2039          STRH     r2,[sp,#0x39]         ;4085
000612  f89d203c          LDRB     r2,[sp,#0x3c]         ;4087
000616  f0420201          ORR      r2,r2,#1              ;4087
00061a  f88d203c          STRB     r2,[sp,#0x3c]         ;4087
00061e  f8bd203c          LDRH     r2,[sp,#0x3c]         ;4088
000622  4310              ORRS     r0,r0,r2              ;4088
000624  f8ad003c          STRH     r0,[sp,#0x3c]         ;4088
000628  f89d003d          LDRB     r0,[sp,#0x3d]         ;4089
00062c  f0400008          ORR      r0,r0,#8              ;4089
000630  f88d003d          STRB     r0,[sp,#0x3d]         ;4089
000634  f8bd003d          LDRH     r0,[sp,#0x3d]         ;4090
000638  f361100d          BFI      r0,r1,#4,#10          ;4090
00063c  f8ad003d          STRH     r0,[sp,#0x3d]         ;4090
000640  990e              LDR      r1,[sp,#0x38]         ;4092
000642  f44f7005          MOV      r0,#0x214             ;4092
000646  f7fffffe          BL       MSPI_RegisterWrite
00064a  990f              LDR      r1,[sp,#0x3c]         ;4093
00064c  f44f7045          MOV      r0,#0x314             ;4093
000650  f7fffffe          BL       MSPI_RegisterWrite
000654  b014              ADD      sp,sp,#0x50
000656  bd10              POP      {r4,pc}
                  |L8.1624|
000658  f89d0038          LDRB     r0,[sp,#0x38]         ;4098
00065c  f0400001          ORR      r0,r0,#1              ;4098
000660  f88d0038          STRB     r0,[sp,#0x38]         ;4098
000664  f8bd1038          LDRH     r1,[sp,#0x38]         ;4099
000668  f24070fe          MOV      r0,#0x7fe             ;4099
00066c  4301              ORRS     r1,r1,r0              ;4099
00066e  f8ad1038          STRH     r1,[sp,#0x38]         ;4099
000672  f89d1039          LDRB     r1,[sp,#0x39]         ;4100
000676  f0410108          ORR      r1,r1,#8              ;4100
00067a  f88d1039          STRB     r1,[sp,#0x39]         ;4100
00067e  f8bd2039          LDRH     r2,[sp,#0x39]         ;4101
000682  f24021ff          MOV      r1,#0x2ff             ;4101
000686  f361120d          BFI      r2,r1,#4,#10          ;4101
00068a  f8ad2039          STRH     r2,[sp,#0x39]         ;4101
00068e  f89d203c          LDRB     r2,[sp,#0x3c]         ;4103
000692  f0420201          ORR      r2,r2,#1              ;4103
000696  f88d203c          STRB     r2,[sp,#0x3c]         ;4103
00069a  f8bd203c          LDRH     r2,[sp,#0x3c]         ;4104
00069e  4310              ORRS     r0,r0,r2              ;4104
0006a0  f8ad003c          STRH     r0,[sp,#0x3c]         ;4104
0006a4  f89d003d          LDRB     r0,[sp,#0x3d]         ;4105
0006a8  f0400008          ORR      r0,r0,#8              ;4105
0006ac  f88d003d          STRB     r0,[sp,#0x3d]         ;4105
0006b0  f8bd003d          LDRH     r0,[sp,#0x3d]         ;4106
0006b4  f361100d          BFI      r0,r1,#4,#10          ;4106
0006b8  f8ad003d          STRH     r0,[sp,#0x3d]         ;4106
0006bc  990e              LDR      r1,[sp,#0x38]         ;4108
0006be  f44f7005          MOV      r0,#0x214             ;4108
0006c2  f7fffffe          BL       MSPI_RegisterWrite
0006c6  990f              LDR      r1,[sp,#0x3c]         ;4109
0006c8  f44f7045          MOV      r0,#0x314             ;4109
                  |L8.1740|
0006cc  f7fffffe          BL       MSPI_RegisterWrite
0006d0  b014              ADD      sp,sp,#0x50
0006d2  bd10              POP      {r4,pc}
                  |L8.1748|
0006d4  f89d0038          LDRB     r0,[sp,#0x38]         ;4114
0006d8  f0400001          ORR      r0,r0,#1              ;4114
0006dc  f88d0038          STRB     r0,[sp,#0x38]         ;4114
0006e0  f8bd1038          LDRH     r1,[sp,#0x38]         ;4115
0006e4  f24070fe          MOV      r0,#0x7fe             ;4115
0006e8  4301              ORRS     r1,r1,r0              ;4115
0006ea  f8ad1038          STRH     r1,[sp,#0x38]         ;4115
0006ee  f89d1039          LDRB     r1,[sp,#0x39]         ;4116
0006f2  f0410108          ORR      r1,r1,#8              ;4116
0006f6  f88d1039          STRB     r1,[sp,#0x39]         ;4116
0006fa  f8bd2039          LDRH     r2,[sp,#0x39]         ;4117
0006fe  1081              ASRS     r1,r0,#2              ;4117
000700  f361120d          BFI      r2,r1,#4,#10          ;4117
000704  f8ad2039          STRH     r2,[sp,#0x39]         ;4117
000708  f89d203c          LDRB     r2,[sp,#0x3c]         ;4119
00070c  f0420201          ORR      r2,r2,#1              ;4119
000710  f88d203c          STRB     r2,[sp,#0x3c]         ;4119
000714  f8bd203c          LDRH     r2,[sp,#0x3c]         ;4120
000718  4310              ORRS     r0,r0,r2              ;4120
00071a  f8ad003c          STRH     r0,[sp,#0x3c]         ;4120
00071e  f89d003d          LDRB     r0,[sp,#0x3d]         ;4121
000722  f0400008          ORR      r0,r0,#8              ;4121
000726  f88d003d          STRB     r0,[sp,#0x3d]         ;4121
00072a  f8bd003d          LDRH     r0,[sp,#0x3d]         ;4122
00072e  f361100d          BFI      r0,r1,#4,#10          ;4122
000732  f8ad003d          STRH     r0,[sp,#0x3d]         ;4122
000736  990e              LDR      r1,[sp,#0x38]         ;4124
000738  f44f7005          MOV      r0,#0x214             ;4124
00073c  f7fffffe          BL       MSPI_RegisterWrite
000740  990f              LDR      r1,[sp,#0x3c]         ;4125
000742  f44f7045          MOV      r0,#0x314             ;4125
000746  e7c1              B        |L8.1740|
                  |L8.1864|
000748  48fe              LDR      r0,|L8.2884|
00074a  f8501ffc          LDR      r1,[r0,#0xfc]!        ;4130
00074e  f0210101          BIC      r1,r1,#1              ;4130
000752  f840197c          STR      r1,[r0],#-0x7c        ;4130
000756  6801              LDR      r1,[r0,#0]            ;4131
000758  f0410140          ORR      r1,r1,#0x40           ;4131
00075c  6001              STR      r1,[r0,#0]            ;4131
00075e  6801              LDR      r1,[r0,#0]            ;4132
000760  f4417100          ORR      r1,r1,#0x200          ;4132
000764  6001              STR      r1,[r0,#0]            ;4132
000766  4cf8              LDR      r4,|L8.2888|
000768  6820              LDR      r0,[r4,#0]            ;4134  ; s_pktmoduleSRICCommonConf
00076a  f8d0114c          LDR      r1,[r0,#0x14c]        ;4134
00076e  f44f7005          MOV      r0,#0x214             ;4134
000772  f7fffffe          BL       MSPI_RegisterWrite
000776  6820              LDR      r0,[r4,#0]            ;4135  ; s_pktmoduleSRICCommonConf
000778  f8d012d0          LDR      r1,[r0,#0x2d0]        ;4135
00077c  f44f7045          MOV      r0,#0x314             ;4135
000780  f7fffffe          BL       MSPI_RegisterWrite
000784  6820              LDR      r0,[r4,#0]            ;4136  ; s_pktmoduleSRICCommonConf
000786  f5007111          ADD      r1,r0,#0x244          ;4136
00078a  f44f7016          MOV      r0,#0x258             ;4136
00078e  f7fffffe          BL       MSPI_RegisterMultiWrite
000792  6820              LDR      r0,[r4,#0]            ;4138  ; s_pktmoduleSRICCommonConf
000794  f5007172          ADD      r1,r0,#0x3c8          ;4138
000798  f44f7056          MOV      r0,#0x358             ;4138
00079c  f7fffffe          BL       MSPI_RegisterMultiWrite
0007a0  6820              LDR      r0,[r4,#0]            ;4141  ; s_pktmoduleSRICCommonConf
0007a2  f8d01284          LDR      r1,[r0,#0x284]        ;4141
0007a6  f44f7020          MOV      r0,#0x280             ;4141
0007aa  f7fffffe          BL       MSPI_RegisterWrite
0007ae  6820              LDR      r0,[r4,#0]            ;4142  ; s_pktmoduleSRICCommonConf
0007b0  f8d01408          LDR      r1,[r0,#0x408]        ;4142
0007b4  f44f7060          MOV      r0,#0x380             ;4142
0007b8  f7fffffe          BL       MSPI_RegisterWrite
0007bc  6820              LDR      r0,[r4,#0]            ;4143  ; s_pktmoduleSRICCommonConf
0007be  f8d01288          LDR      r1,[r0,#0x288]        ;4143
0007c2  f44f7021          MOV      r0,#0x284             ;4143
0007c6  f7fffffe          BL       MSPI_RegisterWrite
0007ca  6820              LDR      r0,[r4,#0]            ;4144  ; s_pktmoduleSRICCommonConf
0007cc  f8d0140c          LDR      r1,[r0,#0x40c]        ;4144
0007d0  f44f7061          MOV      r0,#0x384             ;4144
0007d4  f7fffffe          BL       MSPI_RegisterWrite
0007d8  6820              LDR      r0,[r4,#0]            ;4145  ; s_pktmoduleSRICCommonConf
0007da  f8d0128c          LDR      r1,[r0,#0x28c]        ;4145
0007de  f44f7022          MOV      r0,#0x288             ;4145
0007e2  f7fffffe          BL       MSPI_RegisterWrite
0007e6  6820              LDR      r0,[r4,#0]            ;4146  ; s_pktmoduleSRICCommonConf
0007e8  f8d01410          LDR      r1,[r0,#0x410]        ;4146
0007ec  f44f7062          MOV      r0,#0x388             ;4146
0007f0  f7fffffe          BL       MSPI_RegisterWrite
0007f4  6820              LDR      r0,[r4,#0]            ;4147  ; s_pktmoduleSRICCommonConf
0007f6  f8d01298          LDR      r1,[r0,#0x298]        ;4147
0007fa  f44f7025          MOV      r0,#0x294             ;4147
0007fe  f7fffffe          BL       MSPI_RegisterWrite
000802  6820              LDR      r0,[r4,#0]            ;4148  ; s_pktmoduleSRICCommonConf
000804  f8d0141c          LDR      r1,[r0,#0x41c]        ;4148
000808  f000bac6          B.W      |L8.3480|
                  |L8.2060|
00080c  48cd              LDR      r0,|L8.2884|
00080e  f8501ffc          LDR      r1,[r0,#0xfc]!        ;4154
000812  f0210101          BIC      r1,r1,#1              ;4154
000816  f840197c          STR      r1,[r0],#-0x7c        ;4154
00081a  6801              LDR      r1,[r0,#0]            ;4155
00081c  f0210140          BIC      r1,r1,#0x40           ;4155
000820  6001              STR      r1,[r0,#0]            ;4155
000822  6801              LDR      r1,[r0,#0]            ;4156
000824  f4217100          BIC      r1,r1,#0x200          ;4156
000828  6001              STR      r1,[r0,#0]            ;4156
00082a  4cc7              LDR      r4,|L8.2888|
00082c  6820              LDR      r0,[r4,#0]            ;4158  ; s_pktmoduleSRICCommonConf
00082e  f8d0113c          LDR      r1,[r0,#0x13c]        ;4158
000832  910f              STR      r1,[sp,#0x3c]         ;4158
000834  f89d103c          LDRB     r1,[sp,#0x3c]         ;4159
000838  f021011f          BIC      r1,r1,#0x1f           ;4159
00083c  f88d103c          STRB     r1,[sp,#0x3c]         ;4159
000840  f8d012c0          LDR      r1,[r0,#0x2c0]        ;4161
000844  9111              STR      r1,[sp,#0x44]         ;4161
000846  f89d1044          LDRB     r1,[sp,#0x44]         ;4162
00084a  f021011f          BIC      r1,r1,#0x1f           ;4162
00084e  f88d1044          STRB     r1,[sp,#0x44]         ;4162
000852  f89d1000          LDRB     r1,[sp,#0]            ;4164
000856  f0410107          ORR      r1,r1,#7              ;4164
00085a  f88d1000          STRB     r1,[sp,#0]            ;4164
00085e  f89d1000          LDRB     r1,[sp,#0]            ;4165
000862  f0410138          ORR      r1,r1,#0x38           ;4165
000866  f88d1000          STRB     r1,[sp,#0]            ;4165
00086a  f8bd1000          LDRH     r1,[sp,#0]            ;4166
00086e  f44171e0          ORR      r1,r1,#0x1c0          ;4166
000872  f8ad1000          STRH     r1,[sp,#0]            ;4166
000876  f89d1001          LDRB     r1,[sp,#1]            ;4167
00087a  f041010e          ORR      r1,r1,#0xe            ;4167
00087e  f88d1001          STRB     r1,[sp,#1]            ;4167
000882  f89d1001          LDRB     r1,[sp,#1]            ;4168
000886  f0410170          ORR      r1,r1,#0x70           ;4168
00088a  f88d1001          STRB     r1,[sp,#1]            ;4168
00088e  f8bd1001          LDRH     r1,[sp,#1]            ;4169
000892  f4417160          ORR      r1,r1,#0x380          ;4169
000896  f8ad1001          STRH     r1,[sp,#1]            ;4169
00089a  f89d1002          LDRB     r1,[sp,#2]            ;4170
00089e  f041011c          ORR      r1,r1,#0x1c           ;4170
0008a2  f88d1002          STRB     r1,[sp,#2]            ;4170
0008a6  f89d1002          LDRB     r1,[sp,#2]            ;4171
0008aa  f04101e0          ORR      r1,r1,#0xe0           ;4171
0008ae  f88d1002          STRB     r1,[sp,#2]            ;4171
0008b2  f89d1003          LDRB     r1,[sp,#3]            ;4172
0008b6  f0410107          ORR      r1,r1,#7              ;4172
0008ba  f88d1003          STRB     r1,[sp,#3]            ;4172
0008be  f89d1003          LDRB     r1,[sp,#3]            ;4173
0008c2  f0410138          ORR      r1,r1,#0x38           ;4173
0008c6  f88d1003          STRB     r1,[sp,#3]            ;4173
0008ca  f89d1004          LDRB     r1,[sp,#4]            ;4175
0008ce  f0410107          ORR      r1,r1,#7              ;4175
0008d2  f88d1004          STRB     r1,[sp,#4]            ;4175
0008d6  f89d1004          LDRB     r1,[sp,#4]            ;4176
0008da  f0410138          ORR      r1,r1,#0x38           ;4176
0008de  f88d1004          STRB     r1,[sp,#4]            ;4176
0008e2  f8bd1004          LDRH     r1,[sp,#4]            ;4177
0008e6  f44171e0          ORR      r1,r1,#0x1c0          ;4177
0008ea  f8ad1004          STRH     r1,[sp,#4]            ;4177
0008ee  f89d1005          LDRB     r1,[sp,#5]            ;4178
0008f2  f041010e          ORR      r1,r1,#0xe            ;4178
0008f6  f88d1005          STRB     r1,[sp,#5]            ;4178
0008fa  f89d1005          LDRB     r1,[sp,#5]            ;4179
0008fe  f0410170          ORR      r1,r1,#0x70           ;4179
000902  f88d1005          STRB     r1,[sp,#5]            ;4179
000906  f8bd1005          LDRH     r1,[sp,#5]            ;4180
00090a  f4417160          ORR      r1,r1,#0x380          ;4180
00090e  f8ad1005          STRH     r1,[sp,#5]            ;4180
000912  f89d1006          LDRB     r1,[sp,#6]            ;4181
000916  f041011c          ORR      r1,r1,#0x1c           ;4181
00091a  f88d1006          STRB     r1,[sp,#6]            ;4181
00091e  f89d1006          LDRB     r1,[sp,#6]            ;4182
000922  f04101e0          ORR      r1,r1,#0xe0           ;4182
000926  f88d1006          STRB     r1,[sp,#6]            ;4182
00092a  f89d1007          LDRB     r1,[sp,#7]            ;4183
00092e  f0410107          ORR      r1,r1,#7              ;4183
000932  f88d1007          STRB     r1,[sp,#7]            ;4183
000936  f89d1007          LDRB     r1,[sp,#7]            ;4184
00093a  f0410138          ORR      r1,r1,#0x38           ;4184
00093e  f88d1007          STRB     r1,[sp,#7]            ;4184
000942  6e81              LDR      r1,[r0,#0x68]         ;4186
000944  910e              STR      r1,[sp,#0x38]         ;4186
000946  f89d1038          LDRB     r1,[sp,#0x38]         ;4187
00094a  f021017f          BIC      r1,r1,#0x7f           ;4187
00094e  1c89              ADDS     r1,r1,#2              ;4187
000950  f88d1038          STRB     r1,[sp,#0x38]         ;4187
000954  f89d103a          LDRB     r1,[sp,#0x3a]         ;4188
000958  f02101e0          BIC      r1,r1,#0xe0           ;4188
00095c  3140              ADDS     r1,r1,#0x40           ;4188
00095e  f88d103a          STRB     r1,[sp,#0x3a]         ;4188
000962  f8d0129c          LDR      r1,[r0,#0x29c]        ;4192
000966  9102              STR      r1,[sp,#8]            ;4192
000968  f8d01420          LDR      r1,[r0,#0x420]        ;4193
00096c  9106              STR      r1,[sp,#0x18]         ;4193
00096e  f89d1008          LDRB     r1,[sp,#8]            ;4194
000972  f0210120          BIC      r1,r1,#0x20           ;4194
000976  f88d1008          STRB     r1,[sp,#8]            ;4194
00097a  f89d1008          LDRB     r1,[sp,#8]            ;4195
00097e  f0410110          ORR      r1,r1,#0x10           ;4195
000982  f88d1008          STRB     r1,[sp,#8]            ;4195
000986  f89d1018          LDRB     r1,[sp,#0x18]         ;4196
00098a  f0210120          BIC      r1,r1,#0x20           ;4196
00098e  f88d1018          STRB     r1,[sp,#0x18]         ;4196
000992  f89d1018          LDRB     r1,[sp,#0x18]         ;4197
000996  f0410110          ORR      r1,r1,#0x10           ;4197
00099a  f88d1018          STRB     r1,[sp,#0x18]         ;4197
00099e  f8d0129c          LDR      r1,[r0,#0x29c]        ;4192
0009a2  9103              STR      r1,[sp,#0xc]          ;4192
0009a4  f8d01420          LDR      r1,[r0,#0x420]        ;4193
0009a8  9107              STR      r1,[sp,#0x1c]         ;4193
0009aa  f89d100c          LDRB     r1,[sp,#0xc]          ;4194
0009ae  f0410120          ORR      r1,r1,#0x20           ;4194
0009b2  f88d100c          STRB     r1,[sp,#0xc]          ;4194
0009b6  f89d100c          LDRB     r1,[sp,#0xc]          ;4195
0009ba  f0210110          BIC      r1,r1,#0x10           ;4195
0009be  f88d100c          STRB     r1,[sp,#0xc]          ;4195
0009c2  f89d101c          LDRB     r1,[sp,#0x1c]         ;4196
0009c6  f0410120          ORR      r1,r1,#0x20           ;4196
0009ca  f88d101c          STRB     r1,[sp,#0x1c]         ;4196
0009ce  f89d101c          LDRB     r1,[sp,#0x1c]         ;4197
0009d2  f0210110          BIC      r1,r1,#0x10           ;4197
0009d6  f88d101c          STRB     r1,[sp,#0x1c]         ;4197
0009da  f8d0129c          LDR      r1,[r0,#0x29c]        ;4192
0009de  9104              STR      r1,[sp,#0x10]         ;4192
0009e0  f8d01420          LDR      r1,[r0,#0x420]        ;4193
0009e4  9108              STR      r1,[sp,#0x20]         ;4193
0009e6  f89d1010          LDRB     r1,[sp,#0x10]         ;4194
0009ea  e003              B        |L8.2548|
                  |L8.2540|
0009ec  e161              B        |L8.3250|
                  |L8.2542|
0009ee  e0da              B        |L8.2982|
                  |L8.2544|
0009f0  e369              B        |L8.4294|
                  |L8.2546|
0009f2  e1d4              B        |L8.3486|
                  |L8.2548|
0009f4  f0210120          BIC      r1,r1,#0x20           ;4194
0009f8  f88d1010          STRB     r1,[sp,#0x10]         ;4194
0009fc  f89d1010          LDRB     r1,[sp,#0x10]         ;4195
000a00  f0410110          ORR      r1,r1,#0x10           ;4195
000a04  f88d1010          STRB     r1,[sp,#0x10]         ;4195
000a08  f89d1020          LDRB     r1,[sp,#0x20]         ;4196
000a0c  f0210120          BIC      r1,r1,#0x20           ;4196
000a10  f88d1020          STRB     r1,[sp,#0x20]         ;4196
000a14  f89d1020          LDRB     r1,[sp,#0x20]         ;4197
000a18  f0410110          ORR      r1,r1,#0x10           ;4197
000a1c  f88d1020          STRB     r1,[sp,#0x20]         ;4197
000a20  f8d0129c          LDR      r1,[r0,#0x29c]        ;4192
000a24  9105              STR      r1,[sp,#0x14]         ;4192
000a26  f8d00420          LDR      r0,[r0,#0x420]        ;4193
000a2a  9009              STR      r0,[sp,#0x24]         ;4193
000a2c  f89d0014          LDRB     r0,[sp,#0x14]         ;4194
000a30  f0400020          ORR      r0,r0,#0x20           ;4194
000a34  f88d0014          STRB     r0,[sp,#0x14]         ;4194
000a38  f89d0014          LDRB     r0,[sp,#0x14]         ;4195
000a3c  f0200010          BIC      r0,r0,#0x10           ;4195
000a40  f88d0014          STRB     r0,[sp,#0x14]         ;4195
000a44  f89d0024          LDRB     r0,[sp,#0x24]         ;4196
000a48  f0400020          ORR      r0,r0,#0x20           ;4196
000a4c  f88d0024          STRB     r0,[sp,#0x24]         ;4196
000a50  f89d0024          LDRB     r0,[sp,#0x24]         ;4197
000a54  f0200010          BIC      r0,r0,#0x10           ;4197
000a58  f88d0024          STRB     r0,[sp,#0x24]         ;4197
000a5c  990f              LDR      r1,[sp,#0x3c]         ;4201
000a5e  f44f7001          MOV      r0,#0x204             ;4201
000a62  f7fffffe          BL       MSPI_RegisterWrite
000a66  9911              LDR      r1,[sp,#0x44]         ;4202
000a68  f44f7041          MOV      r0,#0x304             ;4202
000a6c  f7fffffe          BL       MSPI_RegisterWrite
000a70  9900              LDR      r1,[sp,#0]            ;4203
000a72  f44f7016          MOV      r0,#0x258             ;4203
000a76  f7fffffe          BL       MSPI_RegisterWrite
000a7a  9901              LDR      r1,[sp,#4]            ;4204
000a7c  f44f7056          MOV      r0,#0x358             ;4204
000a80  f7fffffe          BL       MSPI_RegisterWrite
000a84  990e              LDR      r1,[sp,#0x38]         ;4205
000a86  205c              MOVS     r0,#0x5c              ;4205
000a88  f7fffffe          BL       MSPI_RegisterWrite
000a8c  a902              ADD      r1,sp,#8              ;4206
000a8e  f44f7026          MOV      r0,#0x298             ;4206
000a92  f7fffffe          BL       MSPI_RegisterMultiWrite
000a96  a906              ADD      r1,sp,#0x18           ;4207
000a98  f44f7066          MOV      r0,#0x398             ;4207
000a9c  f7fffffe          BL       MSPI_RegisterMultiWrite
000aa0  6820              LDR      r0,[r4,#0]            ;4210  ; s_pktmoduleSRICCommonConf
000aa2  f8d01284          LDR      r1,[r0,#0x284]        ;4210
000aa6  9110              STR      r1,[sp,#0x40]         ;4210
000aa8  f8d01408          LDR      r1,[r0,#0x408]        ;4211
000aac  9111              STR      r1,[sp,#0x44]         ;4211
000aae  f8d01288          LDR      r1,[r0,#0x288]        ;4213
000ab2  9112              STR      r1,[sp,#0x48]         ;4213
000ab4  f8d0140c          LDR      r1,[r0,#0x40c]        ;4214
000ab8  9113              STR      r1,[sp,#0x4c]         ;4214
000aba  f8d0128c          LDR      r1,[r0,#0x28c]        ;4216
000abe  910f              STR      r1,[sp,#0x3c]         ;4216
000ac0  f8d01410          LDR      r1,[r0,#0x410]        ;4217
000ac4  910e              STR      r1,[sp,#0x38]         ;4217
000ac6  f8d01298          LDR      r1,[r0,#0x298]        ;4219
000aca  9100              STR      r1,[sp,#0]            ;4219
000acc  f8d0041c          LDR      r0,[r0,#0x41c]        ;4220
000ad0  9001              STR      r0,[sp,#4]            ;4220
000ad2  f89d0040          LDRB     r0,[sp,#0x40]         ;4222
000ad6  f0200003          BIC      r0,r0,#3              ;4222
000ada  f88d0040          STRB     r0,[sp,#0x40]         ;4222
000ade  f89d0048          LDRB     r0,[sp,#0x48]         ;4223
000ae2  f0400003          ORR      r0,r0,#3              ;4223
000ae6  f88d0048          STRB     r0,[sp,#0x48]         ;4223
000aea  f89d003c          LDRB     r0,[sp,#0x3c]         ;4224
000aee  f0400003          ORR      r0,r0,#3              ;4224
000af2  f88d003c          STRB     r0,[sp,#0x3c]         ;4224
000af6  f89d003d          LDRB     r0,[sp,#0x3d]         ;4225
000afa  f0400040          ORR      r0,r0,#0x40           ;4225
000afe  f88d003d          STRB     r0,[sp,#0x3d]         ;4225
000b02  f89d0044          LDRB     r0,[sp,#0x44]         ;4227
000b06  f0200003          BIC      r0,r0,#3              ;4227
000b0a  f88d0044          STRB     r0,[sp,#0x44]         ;4227
000b0e  f89d004c          LDRB     r0,[sp,#0x4c]         ;4228
000b12  f0400003          ORR      r0,r0,#3              ;4228
000b16  f88d004c          STRB     r0,[sp,#0x4c]         ;4228
000b1a  f89d0038          LDRB     r0,[sp,#0x38]         ;4229
000b1e  f0400003          ORR      r0,r0,#3              ;4229
000b22  f88d0038          STRB     r0,[sp,#0x38]         ;4229
000b26  f89d0039          LDRB     r0,[sp,#0x39]         ;4230
000b2a  f0400040          ORR      r0,r0,#0x40           ;4230
000b2e  f88d0039          STRB     r0,[sp,#0x39]         ;4230
000b32  f89d0001          LDRB     r0,[sp,#1]            ;4232
000b36  f0200030          BIC      r0,r0,#0x30           ;4232
000b3a  3010              ADDS     r0,r0,#0x10           ;4232
000b3c  f88d0001          STRB     r0,[sp,#1]            ;4232
000b40  e004              B        |L8.2892|
000b42  0000              DCW      0x0000
                  |L8.2884|
                          DCD      0x40002000
                  |L8.2888|
                          DCD      ||.data||
                  |L8.2892|
000b4c  f89d0005          LDRB     r0,[sp,#5]            ;4233
000b50  f0200030          BIC      r0,r0,#0x30           ;4233
000b54  3010              ADDS     r0,r0,#0x10           ;4233
000b56  f88d0005          STRB     r0,[sp,#5]            ;4233
000b5a  9910              LDR      r1,[sp,#0x40]         ;4235
000b5c  f44f7020          MOV      r0,#0x280             ;4235
000b60  f7fffffe          BL       MSPI_RegisterWrite
000b64  9911              LDR      r1,[sp,#0x44]         ;4236
000b66  f44f7060          MOV      r0,#0x380             ;4236
000b6a  f7fffffe          BL       MSPI_RegisterWrite
000b6e  9912              LDR      r1,[sp,#0x48]         ;4237
000b70  f44f7021          MOV      r0,#0x284             ;4237
000b74  f7fffffe          BL       MSPI_RegisterWrite
000b78  9913              LDR      r1,[sp,#0x4c]         ;4238
000b7a  f44f7061          MOV      r0,#0x384             ;4238
000b7e  f7fffffe          BL       MSPI_RegisterWrite
000b82  990f              LDR      r1,[sp,#0x3c]         ;4239
000b84  f44f7022          MOV      r0,#0x288             ;4239
000b88  f7fffffe          BL       MSPI_RegisterWrite
000b8c  990e              LDR      r1,[sp,#0x38]         ;4240
000b8e  f44f7062          MOV      r0,#0x388             ;4240
000b92  f7fffffe          BL       MSPI_RegisterWrite
000b96  9900              LDR      r1,[sp,#0]            ;4241
000b98  f44f7025          MOV      r0,#0x294             ;4241
000b9c  f7fffffe          BL       MSPI_RegisterWrite
000ba0  9901              LDR      r1,[sp,#4]            ;4242
000ba2  f000b8f9          B.W      |L8.3480|
                  |L8.2982|
000ba6  48fe              LDR      r0,|L8.4000|
000ba8  6800              LDR      r0,[r0,#0]            ;4250  ; s_pktmoduleSRICCommonConf
000baa  f8d0129c          LDR      r1,[r0,#0x29c]        ;4250
000bae  9102              STR      r1,[sp,#8]            ;4250
000bb0  f8d01420          LDR      r1,[r0,#0x420]        ;4251
000bb4  9106              STR      r1,[sp,#0x18]         ;4251
000bb6  f89d1008          LDRB     r1,[sp,#8]            ;4252
000bba  f0410120          ORR      r1,r1,#0x20           ;4252
000bbe  f88d1008          STRB     r1,[sp,#8]            ;4252
000bc2  f89d1008          LDRB     r1,[sp,#8]            ;4253
000bc6  f0210110          BIC      r1,r1,#0x10           ;4253
000bca  f88d1008          STRB     r1,[sp,#8]            ;4253
000bce  f89d1018          LDRB     r1,[sp,#0x18]         ;4254
000bd2  f0410120          ORR      r1,r1,#0x20           ;4254
000bd6  f88d1018          STRB     r1,[sp,#0x18]         ;4254
000bda  f89d1018          LDRB     r1,[sp,#0x18]         ;4255
000bde  f0210110          BIC      r1,r1,#0x10           ;4255
000be2  f88d1018          STRB     r1,[sp,#0x18]         ;4255
000be6  f8d0129c          LDR      r1,[r0,#0x29c]        ;4250
000bea  9103              STR      r1,[sp,#0xc]          ;4250
000bec  f8d01420          LDR      r1,[r0,#0x420]        ;4251
000bf0  9107              STR      r1,[sp,#0x1c]         ;4251
000bf2  f89d100c          LDRB     r1,[sp,#0xc]          ;4252
000bf6  f0210120          BIC      r1,r1,#0x20           ;4252
000bfa  f88d100c          STRB     r1,[sp,#0xc]          ;4252
000bfe  f89d100c          LDRB     r1,[sp,#0xc]          ;4253
000c02  f0410110          ORR      r1,r1,#0x10           ;4253
000c06  f88d100c          STRB     r1,[sp,#0xc]          ;4253
000c0a  f89d101c          LDRB     r1,[sp,#0x1c]         ;4254
000c0e  f0210120          BIC      r1,r1,#0x20           ;4254
000c12  f88d101c          STRB     r1,[sp,#0x1c]         ;4254
000c16  f89d101c          LDRB     r1,[sp,#0x1c]         ;4255
000c1a  f0410110          ORR      r1,r1,#0x10           ;4255
000c1e  f88d101c          STRB     r1,[sp,#0x1c]         ;4255
000c22  f8d0129c          LDR      r1,[r0,#0x29c]        ;4250
000c26  9104              STR      r1,[sp,#0x10]         ;4250
000c28  f8d01420          LDR      r1,[r0,#0x420]        ;4251
000c2c  9108              STR      r1,[sp,#0x20]         ;4251
000c2e  f89d1010          LDRB     r1,[sp,#0x10]         ;4252
000c32  f0410120          ORR      r1,r1,#0x20           ;4252
000c36  f88d1010          STRB     r1,[sp,#0x10]         ;4252
000c3a  f89d1010          LDRB     r1,[sp,#0x10]         ;4253
000c3e  f0210110          BIC      r1,r1,#0x10           ;4253
000c42  f88d1010          STRB     r1,[sp,#0x10]         ;4253
000c46  f89d1020          LDRB     r1,[sp,#0x20]         ;4254
000c4a  f0410120          ORR      r1,r1,#0x20           ;4254
000c4e  f88d1020          STRB     r1,[sp,#0x20]         ;4254
000c52  f89d1020          LDRB     r1,[sp,#0x20]         ;4255
000c56  f0210110          BIC      r1,r1,#0x10           ;4255
000c5a  f88d1020          STRB     r1,[sp,#0x20]         ;4255
000c5e  f8d0129c          LDR      r1,[r0,#0x29c]        ;4250
000c62  9105              STR      r1,[sp,#0x14]         ;4250
000c64  f8d00420          LDR      r0,[r0,#0x420]        ;4251
000c68  9009              STR      r0,[sp,#0x24]         ;4251
000c6a  f89d0014          LDRB     r0,[sp,#0x14]         ;4252
000c6e  f0200020          BIC      r0,r0,#0x20           ;4252
000c72  f88d0014          STRB     r0,[sp,#0x14]         ;4252
000c76  f89d0014          LDRB     r0,[sp,#0x14]         ;4253
000c7a  f0400010          ORR      r0,r0,#0x10           ;4253
000c7e  f88d0014          STRB     r0,[sp,#0x14]         ;4253
000c82  f89d0024          LDRB     r0,[sp,#0x24]         ;4254
000c86  f0200020          BIC      r0,r0,#0x20           ;4254
000c8a  f88d0024          STRB     r0,[sp,#0x24]         ;4254
000c8e  f89d0024          LDRB     r0,[sp,#0x24]         ;4255
000c92  f0400010          ORR      r0,r0,#0x10           ;4255
000c96  f88d0024          STRB     r0,[sp,#0x24]         ;4255
000c9a  a902              ADD      r1,sp,#8              ;4258
000c9c  f44f7026          MOV      r0,#0x298             ;4258
000ca0  f7fffffe          BL       MSPI_RegisterMultiWrite
000ca4  a906              ADD      r1,sp,#0x18           ;4259
000ca6  f44f7066          MOV      r0,#0x398             ;4259
000caa  f7fffffe          BL       MSPI_RegisterMultiWrite
000cae  b014              ADD      sp,sp,#0x50
000cb0  bd10              POP      {r4,pc}
                  |L8.3250|
000cb2  48bc              LDR      r0,|L8.4004|
000cb4  f8501ffc          LDR      r1,[r0,#0xfc]!        ;4264
000cb8  f0210101          BIC      r1,r1,#1              ;4264
000cbc  f840197c          STR      r1,[r0],#-0x7c        ;4264
000cc0  6801              LDR      r1,[r0,#0]            ;4265
000cc2  f0410140          ORR      r1,r1,#0x40           ;4265
000cc6  6001              STR      r1,[r0,#0]            ;4265
000cc8  6801              LDR      r1,[r0,#0]            ;4266
000cca  f4417100          ORR      r1,r1,#0x200          ;4266
000cce  6001              STR      r1,[r0,#0]            ;4266
000cd0  4cb3              LDR      r4,|L8.4000|
000cd2  6820              LDR      r0,[r4,#0]            ;4268  ; s_pktmoduleSRICCommonConf
000cd4  f8d0129c          LDR      r1,[r0,#0x29c]        ;4268
000cd8  f44f7026          MOV      r0,#0x298             ;4268
000cdc  f7fffffe          BL       MSPI_RegisterWrite
000ce0  6820              LDR      r0,[r4,#0]            ;4269  ; s_pktmoduleSRICCommonConf
000ce2  f8d01420          LDR      r1,[r0,#0x420]        ;4269
000ce6  f44f7066          MOV      r0,#0x398             ;4269
000cea  f7fffffe          BL       MSPI_RegisterWrite
000cee  6820              LDR      r0,[r4,#0]            ;4271  ; s_pktmoduleSRICCommonConf
000cf0  f5007111          ADD      r1,r0,#0x244          ;4271
000cf4  f44f7016          MOV      r0,#0x258             ;4271
000cf8  f7fffffe          BL       MSPI_RegisterMultiWrite
000cfc  6820              LDR      r0,[r4,#0]            ;4273  ; s_pktmoduleSRICCommonConf
000cfe  f5007172          ADD      r1,r0,#0x3c8          ;4273
000d02  f44f7056          MOV      r0,#0x358             ;4273
000d06  f7fffffe          BL       MSPI_RegisterMultiWrite
000d0a  6820              LDR      r0,[r4,#0]            ;4276  ; s_pktmoduleSRICCommonConf
000d0c  f8d0113c          LDR      r1,[r0,#0x13c]        ;4276
000d10  f44f7001          MOV      r0,#0x204             ;4276
000d14  f7fffffe          BL       MSPI_RegisterWrite
000d18  6820              LDR      r0,[r4,#0]            ;4277  ; s_pktmoduleSRICCommonConf
000d1a  f8d012c0          LDR      r1,[r0,#0x2c0]        ;4277
000d1e  f44f7041          MOV      r0,#0x304             ;4277
000d22  f7fffffe          BL       MSPI_RegisterWrite
000d26  6820              LDR      r0,[r4,#0]            ;4279  ; s_pktmoduleSRICCommonConf
000d28  6e81              LDR      r1,[r0,#0x68]         ;4279
000d2a  205c              MOVS     r0,#0x5c              ;4279
000d2c  f7fffffe          BL       MSPI_RegisterWrite
000d30  6820              LDR      r0,[r4,#0]            ;4281  ; s_pktmoduleSRICCommonConf
000d32  f8d01284          LDR      r1,[r0,#0x284]        ;4281
000d36  f44f7020          MOV      r0,#0x280             ;4281
000d3a  f7fffffe          BL       MSPI_RegisterWrite
000d3e  6820              LDR      r0,[r4,#0]            ;4282  ; s_pktmoduleSRICCommonConf
000d40  f8d01408          LDR      r1,[r0,#0x408]        ;4282
000d44  f44f7060          MOV      r0,#0x380             ;4282
000d48  f7fffffe          BL       MSPI_RegisterWrite
000d4c  6820              LDR      r0,[r4,#0]            ;4283  ; s_pktmoduleSRICCommonConf
000d4e  f8d01288          LDR      r1,[r0,#0x288]        ;4283
000d52  f44f7021          MOV      r0,#0x284             ;4283
000d56  f7fffffe          BL       MSPI_RegisterWrite
000d5a  6820              LDR      r0,[r4,#0]            ;4284  ; s_pktmoduleSRICCommonConf
000d5c  f8d0140c          LDR      r1,[r0,#0x40c]        ;4284
000d60  f44f7061          MOV      r0,#0x384             ;4284
000d64  f7fffffe          BL       MSPI_RegisterWrite
000d68  6820              LDR      r0,[r4,#0]            ;4285  ; s_pktmoduleSRICCommonConf
000d6a  f8d0128c          LDR      r1,[r0,#0x28c]        ;4285
000d6e  f44f7022          MOV      r0,#0x288             ;4285
000d72  f7fffffe          BL       MSPI_RegisterWrite
000d76  6820              LDR      r0,[r4,#0]            ;4286  ; s_pktmoduleSRICCommonConf
000d78  f8d01410          LDR      r1,[r0,#0x410]        ;4286
000d7c  f44f7062          MOV      r0,#0x388             ;4286
000d80  f7fffffe          BL       MSPI_RegisterWrite
000d84  6820              LDR      r0,[r4,#0]            ;4287  ; s_pktmoduleSRICCommonConf
000d86  f8d01298          LDR      r1,[r0,#0x298]        ;4287
000d8a  f44f7025          MOV      r0,#0x294             ;4287
000d8e  f7fffffe          BL       MSPI_RegisterWrite
000d92  6820              LDR      r0,[r4,#0]            ;4288  ; s_pktmoduleSRICCommonConf
000d94  f8d0141c          LDR      r1,[r0,#0x41c]        ;4288
                  |L8.3480|
000d98  f44f7065          MOV      r0,#0x394             ;4288
000d9c  e496              B        |L8.1740|
                  |L8.3486|
000d9e  4880              LDR      r0,|L8.4000|
000da0  6800              LDR      r0,[r0,#0]            ;4294  ; s_pktmoduleSRICCommonConf
000da2  6a81              LDR      r1,[r0,#0x28]         ;4294
000da4  910a              STR      r1,[sp,#0x28]         ;4294
000da6  6ac1              LDR      r1,[r0,#0x2c]         ;4294
000da8  910b              STR      r1,[sp,#0x2c]         ;4294
000daa  6b01              LDR      r1,[r0,#0x30]         ;4294
000dac  910c              STR      r1,[sp,#0x30]         ;4294
000dae  6b41              LDR      r1,[r0,#0x34]         ;4294
000db0  910d              STR      r1,[sp,#0x34]         ;4294
000db2  f89d1029          LDRB     r1,[sp,#0x29]         ;4297
000db6  f0410108          ORR      r1,r1,#8              ;4297
000dba  f88d1029          STRB     r1,[sp,#0x29]         ;4297
000dbe  f89d102a          LDRB     r1,[sp,#0x2a]         ;4298
000dc2  f021010c          BIC      r1,r1,#0xc            ;4298
000dc6  1d09              ADDS     r1,r1,#4              ;4298
000dc8  f88d102a          STRB     r1,[sp,#0x2a]         ;4298
000dcc  f89d102a          LDRB     r1,[sp,#0x2a]         ;4299
000dd0  f0210130          BIC      r1,r1,#0x30           ;4299
000dd4  3110              ADDS     r1,r1,#0x10           ;4299
000dd6  f88d102a          STRB     r1,[sp,#0x2a]         ;4299
000dda  f89d1029          LDRB     r1,[sp,#0x29]         ;4300
000dde  f02101c0          BIC      r1,r1,#0xc0           ;4300
000de2  3140              ADDS     r1,r1,#0x40           ;4300
000de4  f88d1029          STRB     r1,[sp,#0x29]         ;4300
000de8  f89d102a          LDRB     r1,[sp,#0x2a]         ;4301
000dec  f0210103          BIC      r1,r1,#3              ;4301
000df0  1c49              ADDS     r1,r1,#1              ;4301
000df2  f88d102a          STRB     r1,[sp,#0x2a]         ;4301
000df6  f89d102d          LDRB     r1,[sp,#0x2d]         ;4297
000dfa  f0410108          ORR      r1,r1,#8              ;4297
000dfe  f88d102d          STRB     r1,[sp,#0x2d]         ;4297
000e02  f89d102e          LDRB     r1,[sp,#0x2e]         ;4298
000e06  f021010c          BIC      r1,r1,#0xc            ;4298
000e0a  1d09              ADDS     r1,r1,#4              ;4298
000e0c  f88d102e          STRB     r1,[sp,#0x2e]         ;4298
000e10  f89d102e          LDRB     r1,[sp,#0x2e]         ;4299
000e14  f0210130          BIC      r1,r1,#0x30           ;4299
000e18  3110              ADDS     r1,r1,#0x10           ;4299
000e1a  f88d102e          STRB     r1,[sp,#0x2e]         ;4299
000e1e  f89d102d          LDRB     r1,[sp,#0x2d]         ;4300
000e22  f02101c0          BIC      r1,r1,#0xc0           ;4300
000e26  3140              ADDS     r1,r1,#0x40           ;4300
000e28  f88d102d          STRB     r1,[sp,#0x2d]         ;4300
000e2c  f89d102e          LDRB     r1,[sp,#0x2e]         ;4301
000e30  f0210103          BIC      r1,r1,#3              ;4301
000e34  1c49              ADDS     r1,r1,#1              ;4301
000e36  f88d102e          STRB     r1,[sp,#0x2e]         ;4301
000e3a  f89d1031          LDRB     r1,[sp,#0x31]         ;4297
000e3e  f0410108          ORR      r1,r1,#8              ;4297
000e42  f88d1031          STRB     r1,[sp,#0x31]         ;4297
000e46  f89d1032          LDRB     r1,[sp,#0x32]         ;4298
000e4a  f021010c          BIC      r1,r1,#0xc            ;4298
000e4e  1d09              ADDS     r1,r1,#4              ;4298
000e50  f88d1032          STRB     r1,[sp,#0x32]         ;4298
000e54  f89d1032          LDRB     r1,[sp,#0x32]         ;4299
000e58  f0210130          BIC      r1,r1,#0x30           ;4299
000e5c  3110              ADDS     r1,r1,#0x10           ;4299
000e5e  f88d1032          STRB     r1,[sp,#0x32]         ;4299
000e62  f89d1031          LDRB     r1,[sp,#0x31]         ;4300
000e66  f02101c0          BIC      r1,r1,#0xc0           ;4300
000e6a  3140              ADDS     r1,r1,#0x40           ;4300
000e6c  f88d1031          STRB     r1,[sp,#0x31]         ;4300
000e70  f89d1032          LDRB     r1,[sp,#0x32]         ;4301
000e74  f0210103          BIC      r1,r1,#3              ;4301
000e78  1c49              ADDS     r1,r1,#1              ;4301
000e7a  f88d1032          STRB     r1,[sp,#0x32]         ;4301
000e7e  f89d1035          LDRB     r1,[sp,#0x35]         ;4297
000e82  f0410108          ORR      r1,r1,#8              ;4297
000e86  f88d1035          STRB     r1,[sp,#0x35]         ;4297
000e8a  f89d1036          LDRB     r1,[sp,#0x36]         ;4298
000e8e  f021010c          BIC      r1,r1,#0xc            ;4298
000e92  1d09              ADDS     r1,r1,#4              ;4298
000e94  f88d1036          STRB     r1,[sp,#0x36]         ;4298
000e98  f89d1036          LDRB     r1,[sp,#0x36]         ;4299
000e9c  f0210130          BIC      r1,r1,#0x30           ;4299
000ea0  3110              ADDS     r1,r1,#0x10           ;4299
000ea2  f88d1036          STRB     r1,[sp,#0x36]         ;4299
000ea6  f89d1035          LDRB     r1,[sp,#0x35]         ;4300
000eaa  f02101c0          BIC      r1,r1,#0xc0           ;4300
000eae  3140              ADDS     r1,r1,#0x40           ;4300
000eb0  f88d1035          STRB     r1,[sp,#0x35]         ;4300
000eb4  f89d1036          LDRB     r1,[sp,#0x36]         ;4301
000eb8  f0210103          BIC      r1,r1,#3              ;4301
000ebc  1c49              ADDS     r1,r1,#1              ;4301
000ebe  f88d1036          STRB     r1,[sp,#0x36]         ;4301
000ec2  f89d1000          LDRB     r1,[sp,#0]            ;4304
000ec6  f0210107          BIC      r1,r1,#7              ;4304
000eca  1d89              ADDS     r1,r1,#6              ;4304
000ecc  f88d1000          STRB     r1,[sp,#0]            ;4304
000ed0  f89d1000          LDRB     r1,[sp,#0]            ;4305
000ed4  f0210138          BIC      r1,r1,#0x38           ;4305
000ed8  3130              ADDS     r1,r1,#0x30           ;4305
000eda  f88d1000          STRB     r1,[sp,#0]            ;4305
000ede  f8bd1000          LDRH     r1,[sp,#0]            ;4306
000ee2  f42171e0          BIC      r1,r1,#0x1c0          ;4306
000ee6  f50171c0          ADD      r1,r1,#0x180          ;4306
000eea  f8ad1000          STRH     r1,[sp,#0]            ;4306
000eee  f89d1001          LDRB     r1,[sp,#1]            ;4307
000ef2  f021010e          BIC      r1,r1,#0xe            ;4307
000ef6  310c              ADDS     r1,r1,#0xc            ;4307
000ef8  f88d1001          STRB     r1,[sp,#1]            ;4307
000efc  f89d1001          LDRB     r1,[sp,#1]            ;4308
000f00  f0210170          BIC      r1,r1,#0x70           ;4308
000f04  3160              ADDS     r1,r1,#0x60           ;4308
000f06  f88d1001          STRB     r1,[sp,#1]            ;4308
000f0a  f8bd1001          LDRH     r1,[sp,#1]            ;4309
000f0e  f4217160          BIC      r1,r1,#0x380          ;4309
000f12  f5017140          ADD      r1,r1,#0x300          ;4309
000f16  f8ad1001          STRH     r1,[sp,#1]            ;4309
000f1a  f89d1002          LDRB     r1,[sp,#2]            ;4310
000f1e  f021011c          BIC      r1,r1,#0x1c           ;4310
000f22  3118              ADDS     r1,r1,#0x18           ;4310
000f24  f88d1002          STRB     r1,[sp,#2]            ;4310
000f28  f89d1002          LDRB     r1,[sp,#2]            ;4311
000f2c  f02101e0          BIC      r1,r1,#0xe0           ;4311
000f30  31c0              ADDS     r1,r1,#0xc0           ;4311
000f32  f88d1002          STRB     r1,[sp,#2]            ;4311
000f36  f89d1003          LDRB     r1,[sp,#3]            ;4312
000f3a  f0210107          BIC      r1,r1,#7              ;4312
000f3e  1d89              ADDS     r1,r1,#6              ;4312
000f40  f88d1003          STRB     r1,[sp,#3]            ;4312
000f44  f89d1003          LDRB     r1,[sp,#3]            ;4313
000f48  f0210138          BIC      r1,r1,#0x38           ;4313
000f4c  3130              ADDS     r1,r1,#0x30           ;4313
000f4e  f88d1003          STRB     r1,[sp,#3]            ;4313
000f52  f89d1004          LDRB     r1,[sp,#4]            ;4315
000f56  f0210107          BIC      r1,r1,#7              ;4315
000f5a  1d89              ADDS     r1,r1,#6              ;4315
000f5c  f88d1004          STRB     r1,[sp,#4]            ;4315
000f60  f89d1004          LDRB     r1,[sp,#4]            ;4316
000f64  f0210138          BIC      r1,r1,#0x38           ;4316
000f68  3130              ADDS     r1,r1,#0x30           ;4316
000f6a  f88d1004          STRB     r1,[sp,#4]            ;4316
000f6e  f8bd1004          LDRH     r1,[sp,#4]            ;4317
000f72  f42171e0          BIC      r1,r1,#0x1c0          ;4317
000f76  f50171c0          ADD      r1,r1,#0x180          ;4317
000f7a  f8ad1004          STRH     r1,[sp,#4]            ;4317
000f7e  f89d1005          LDRB     r1,[sp,#5]            ;4318
000f82  f021010e          BIC      r1,r1,#0xe            ;4318
000f86  310c              ADDS     r1,r1,#0xc            ;4318
000f88  f88d1005          STRB     r1,[sp,#5]            ;4318
000f8c  f89d1005          LDRB     r1,[sp,#5]            ;4319
000f90  f0210170          BIC      r1,r1,#0x70           ;4319
000f94  3160              ADDS     r1,r1,#0x60           ;4319
000f96  f88d1005          STRB     r1,[sp,#5]            ;4319
000f9a  f8bd1005          LDRH     r1,[sp,#5]            ;4320
000f9e  e003              B        |L8.4008|
                  |L8.4000|
                          DCD      ||.data||
                  |L8.4004|
                          DCD      0x40002000
                  |L8.4008|
000fa8  f4217160          BIC      r1,r1,#0x380          ;4320
000fac  f5017140          ADD      r1,r1,#0x300          ;4320
000fb0  f8ad1005          STRH     r1,[sp,#5]            ;4320
000fb4  f89d1006          LDRB     r1,[sp,#6]            ;4321
000fb8  f021011c          BIC      r1,r1,#0x1c           ;4321
000fbc  3118              ADDS     r1,r1,#0x18           ;4321
000fbe  f88d1006          STRB     r1,[sp,#6]            ;4321
000fc2  f89d1006          LDRB     r1,[sp,#6]            ;4322
000fc6  f02101e0          BIC      r1,r1,#0xe0           ;4322
000fca  31c0              ADDS     r1,r1,#0xc0           ;4322
000fcc  f88d1006          STRB     r1,[sp,#6]            ;4322
000fd0  f89d1007          LDRB     r1,[sp,#7]            ;4323
000fd4  f0210107          BIC      r1,r1,#7              ;4323
000fd8  1d89              ADDS     r1,r1,#6              ;4323
000fda  f88d1007          STRB     r1,[sp,#7]            ;4323
000fde  f89d1007          LDRB     r1,[sp,#7]            ;4324
000fe2  f0210138          BIC      r1,r1,#0x38           ;4324
000fe6  3130              ADDS     r1,r1,#0x30           ;4324
000fe8  f88d1007          STRB     r1,[sp,#7]            ;4324
000fec  f8d01284          LDR      r1,[r0,#0x284]        ;4326
000ff0  9110              STR      r1,[sp,#0x40]         ;4326
000ff2  f8d01408          LDR      r1,[r0,#0x408]        ;4327
000ff6  9111              STR      r1,[sp,#0x44]         ;4327
000ff8  f8d01288          LDR      r1,[r0,#0x288]        ;4329
000ffc  9112              STR      r1,[sp,#0x48]         ;4329
000ffe  f8d0140c          LDR      r1,[r0,#0x40c]        ;4330
001002  9113              STR      r1,[sp,#0x4c]         ;4330
001004  f8d0128c          LDR      r1,[r0,#0x28c]        ;4332
001008  910f              STR      r1,[sp,#0x3c]         ;4332
00100a  f8d00410          LDR      r0,[r0,#0x410]        ;4333
00100e  900e              STR      r0,[sp,#0x38]         ;4333
001010  f89d0040          LDRB     r0,[sp,#0x40]         ;4335
001014  f0200003          BIC      r0,r0,#3              ;4335
001018  1c80              ADDS     r0,r0,#2              ;4335
00101a  f88d0040          STRB     r0,[sp,#0x40]         ;4335
00101e  f89d0044          LDRB     r0,[sp,#0x44]         ;4336
001022  f0200003          BIC      r0,r0,#3              ;4336
001026  1c80              ADDS     r0,r0,#2              ;4336
001028  f88d0044          STRB     r0,[sp,#0x44]         ;4336
00102c  f89d0048          LDRB     r0,[sp,#0x48]         ;4337
001030  f0400003          ORR      r0,r0,#3              ;4337
001034  f88d0048          STRB     r0,[sp,#0x48]         ;4337
001038  f89d004c          LDRB     r0,[sp,#0x4c]         ;4338
00103c  f0400003          ORR      r0,r0,#3              ;4338
001040  f88d004c          STRB     r0,[sp,#0x4c]         ;4338
001044  f89d003c          LDRB     r0,[sp,#0x3c]         ;4339
001048  f0400003          ORR      r0,r0,#3              ;4339
00104c  f88d003c          STRB     r0,[sp,#0x3c]         ;4339
001050  f89d003d          LDRB     r0,[sp,#0x3d]         ;4340
001054  f0400040          ORR      r0,r0,#0x40           ;4340
001058  f88d003d          STRB     r0,[sp,#0x3d]         ;4340
00105c  f89d0038          LDRB     r0,[sp,#0x38]         ;4341
001060  f0400003          ORR      r0,r0,#3              ;4341
001064  f88d0038          STRB     r0,[sp,#0x38]         ;4341
001068  f89d0039          LDRB     r0,[sp,#0x39]         ;4342
00106c  f0400040          ORR      r0,r0,#0x40           ;4342
001070  f88d0039          STRB     r0,[sp,#0x39]         ;4342
001074  a90a              ADD      r1,sp,#0x28           ;4344
001076  2028              MOVS     r0,#0x28              ;4344
001078  f7fffffe          BL       MSPI_RegisterMultiWrite
00107c  9900              LDR      r1,[sp,#0]            ;4345
00107e  f44f7016          MOV      r0,#0x258             ;4345
001082  f7fffffe          BL       MSPI_RegisterWrite
001086  9901              LDR      r1,[sp,#4]            ;4346
001088  f44f7056          MOV      r0,#0x358             ;4346
00108c  f7fffffe          BL       MSPI_RegisterWrite
001090  9910              LDR      r1,[sp,#0x40]         ;4348
001092  f44f7020          MOV      r0,#0x280             ;4348
001096  f7fffffe          BL       MSPI_RegisterWrite
00109a  9911              LDR      r1,[sp,#0x44]         ;4349
00109c  f44f7060          MOV      r0,#0x380             ;4349
0010a0  f7fffffe          BL       MSPI_RegisterWrite
0010a4  9912              LDR      r1,[sp,#0x48]         ;4351
0010a6  f44f7021          MOV      r0,#0x284             ;4351
0010aa  f7fffffe          BL       MSPI_RegisterWrite
0010ae  9913              LDR      r1,[sp,#0x4c]         ;4352
0010b0  f44f7061          MOV      r0,#0x384             ;4352
0010b4  f7fffffe          BL       MSPI_RegisterWrite
0010b8  990f              LDR      r1,[sp,#0x3c]         ;4354
0010ba  f44f7022          MOV      r0,#0x288             ;4354
0010be  f7fffffe          BL       MSPI_RegisterWrite
0010c2  990e              LDR      r1,[sp,#0x38]         ;4355
0010c4  e03a              B        |L8.4412|
                  |L8.4294|
0010c6  4c1f              LDR      r4,|L8.4420|
0010c8  6820              LDR      r0,[r4,#0]            ;4360  ; s_pktmoduleSRICCommonConf
0010ca  f1000128          ADD      r1,r0,#0x28           ;4360
0010ce  2028              MOVS     r0,#0x28              ;4360
0010d0  f7fffffe          BL       MSPI_RegisterMultiWrite
0010d4  6820              LDR      r0,[r4,#0]            ;4362  ; s_pktmoduleSRICCommonConf
0010d6  f5007111          ADD      r1,r0,#0x244          ;4362
0010da  f44f7016          MOV      r0,#0x258             ;4362
0010de  f7fffffe          BL       MSPI_RegisterMultiWrite
0010e2  6820              LDR      r0,[r4,#0]            ;4364  ; s_pktmoduleSRICCommonConf
0010e4  f5007172          ADD      r1,r0,#0x3c8          ;4364
0010e8  f44f7056          MOV      r0,#0x358             ;4364
0010ec  f7fffffe          BL       MSPI_RegisterMultiWrite
0010f0  6820              LDR      r0,[r4,#0]            ;4367  ; s_pktmoduleSRICCommonConf
0010f2  f8d01284          LDR      r1,[r0,#0x284]        ;4367
0010f6  f44f7020          MOV      r0,#0x280             ;4367
0010fa  f7fffffe          BL       MSPI_RegisterWrite
0010fe  6820              LDR      r0,[r4,#0]            ;4368  ; s_pktmoduleSRICCommonConf
001100  f8d01408          LDR      r1,[r0,#0x408]        ;4368
001104  f44f7060          MOV      r0,#0x380             ;4368
001108  f7fffffe          BL       MSPI_RegisterWrite
00110c  6820              LDR      r0,[r4,#0]            ;4370  ; s_pktmoduleSRICCommonConf
00110e  f8d01288          LDR      r1,[r0,#0x288]        ;4370
001112  f44f7021          MOV      r0,#0x284             ;4370
001116  f7fffffe          BL       MSPI_RegisterWrite
00111a  6820              LDR      r0,[r4,#0]            ;4371  ; s_pktmoduleSRICCommonConf
00111c  f8d0140c          LDR      r1,[r0,#0x40c]        ;4371
001120  f44f7061          MOV      r0,#0x384             ;4371
001124  f7fffffe          BL       MSPI_RegisterWrite
001128  6820              LDR      r0,[r4,#0]            ;4373  ; s_pktmoduleSRICCommonConf
00112a  f8d0128c          LDR      r1,[r0,#0x28c]        ;4373
00112e  f44f7022          MOV      r0,#0x288             ;4373
001132  f7fffffe          BL       MSPI_RegisterWrite
001136  6820              LDR      r0,[r4,#0]            ;4374  ; s_pktmoduleSRICCommonConf
001138  f8d01410          LDR      r1,[r0,#0x410]        ;4374
                  |L8.4412|
00113c  f44f7062          MOV      r0,#0x388             ;4374
001140  f7ffbac4          B        |L8.1740|
;;;4382   
                          ENDP

                  |L8.4420|
                          DCD      ||.data||

                          AREA ||i.SW92513_SetIdleOperationMode||, CODE, READONLY, ALIGN=1

                  SW92513_SetIdleOperationMode PROC
;;;2307   
;;;2308   void SW92513_SetIdleOperationMode(void)
000000  4770              BX       lr
;;;2309   {
;;;2310   //	if((PARAMSET_PWMDRV_TSYNC_IDLE_BITMASK & 0x1) && 0x1)
;;;2311   //	{
;;;2312   //		tCFGR_PEN_POS1_t tCFGR_PEN_POS1;
;;;2313   //		tCFGR_PEN_POS1.ulBulk = s_pktmoduleSRICCommonConf->CFGR_PEN_POS1.ulBulk;
;;;2314   //		tCFGR_PEN_POS1.tBit.lhb_type = 1; // Finger2
;;;2315   //		MSPI_RegisterWrite(0x406, tCFGR_PEN_POS1.ulBulk);
;;;2316   //	}
;;;2317   //
;;;2318   ////	tCFGR_LHB_CFG1_t tCFGR_LHB_CFG1;
;;;2319   ////	tCFGR_LHB_CFG1.ulBulk = s_pktmoduleSRICCommonConf->CFGR_LHB_CFG1.ulBulk;
;;;2320   ////	tCFGR_LHB_CFG1.tBit.md2_lhb_mux = 1;
;;;2321   ////	MSPI_RegisterWrite(0x49E, tCFGR_LHB_CFG1.ulBulk);
;;;2322   //
;;;2323   //	tCFGR_LHB_CFG2_t tCFGR_LHB_CFG2;
;;;2324   //	tCFGR_LHB_CFG2.ulBulk = s_pktmoduleSRICCommonConf->CFGR_LHB_CFG2.ulBulk;
;;;2325   //	tCFGR_LHB_CFG2.tBit.end_mux_num = 1;
;;;2326   //	MSPI_RegisterWrite(0x4A0, tCFGR_LHB_CFG2.ulBulk);
;;;2327   	
;;;2328   //	uint16_t tCFGR_MD2_MUX_SEL1;
;;;2329   //	tCFGR_MD2_MUX_SEL1 = 0x0FFF;
;;;2330   //	MSPI_RegisterWrite(0x484, tCFGR_MD2_MUX_SEL1);
;;;2331   }
;;;2332   
                          ENDP


                          AREA ||i.SW92513_SetLocalIndex||, CODE, READONLY, ALIGN=1

                  SW92513_SetLocalIndex PROC
;;;2195   extern int8_t sensingRowStart_Tilt_Offset;
;;;2196   void SW92513_SetLocalIndex(uint32_t ulIdx)
000000  4770              BX       lr
;;;2197   {
;;;2198   //#if IS_WGPUHDPEN_PROTOCOL_OPERATION
;;;2199   // 	uint32_t ulLocalIndex;
;;;2200   // 	uint32_t ulMSPIIndex;
;;;2201   // 	tPEN_POS1_LHB_CFG_t tCHFG_PP_LHB_CFG;
;;;2202   // 	tPEN_DAT1_LHB_CFG_t tCHFG_PD_LHB_CFG;
;;;2203   //
;;;2204   // 	ulLocalIndex = (uint32_t)((ulIdx)&(0xFFFF));
;;;2205   //	#ifdef TILT_ON
;;;2206   //		ulMSPIIndex = (uint32_t)((ulIdx)>>16);
;;;2207   //	#endif
;;;2208   //
;;;2209   //	tHalIntrHandle.ulLocalSensingDoneRowIdx = ulLocalIndex;
;;;2210   //	tCHFG_PD_LHB_CFG.ulBulk = s_pktmoduleSRICCommonConf->PEN_DAT1_LHB_CFG.ulBulk;
;;;2211   //	tCHFG_PD_LHB_CFG.tBit.pen_dat1_mux_cfg0 = ulLocalIndex;
;;;2212   //	tCHFG_PD_LHB_CFG.tBit.pen_dat1_mux_cfg1 = ulLocalIndex;
;;;2213   //	tCHFG_PD_LHB_CFG.tBit.pen_dat1_mux_cfg2 = ulLocalIndex;
;;;2214   //	tCHFG_PD_LHB_CFG.tBit.pen_dat1_mux_cfg3 = ulLocalIndex;
;;;2215   //	MSPI_RegisterWrite((uint32_t)(0x00C0), tCHFG_PD_LHB_CFG.ulBulk);
;;;2216   //
;;;2217   //	#ifdef TILT_ON
;;;2218   //	{
;;;2219   //		{
;;;2220   //		#if USED_WGP_PEN_UHD_16LHB_OPERATION
;;;2221   //			if(ulMSPIIndex == 0 || ulMSPIIndex == 7)
;;;2222   //		#else /* USED_WGP_PEN_UHD_16LHB_OPERATION */
;;;2223   //			if(ulMSPIIndex == 0)
;;;2224   //		#endif /* USED_WGP_PEN_UHD_16LHB_OPERATION */
;;;2225   //			{
;;;2226   //				tHalIntrHandle.ulLocalSensingDoneRowIdx_Tilt = sensingRowStart_Tilt;// = MAX(0,MIN(ROW_MAX-PEN_COORD_ROW_MAX,(int)(ulLocalIndex + sensingRowStart_Tilt_Offset)));
;;;2227   //				tCHFG_PP_LHB_CFG.ulBulk = s_pktmoduleSRICCommonConf->PEN_POS1_LHB_CFG.ulBulk;
;;;2228   //				tCHFG_PP_LHB_CFG.tBit.pen_pos1_mux_cfg0 = sensingRowStart_Tilt;
;;;2229   //				tCHFG_PP_LHB_CFG.tBit.pen_pos1_mux_cfg1 = sensingRowStart_Tilt;
;;;2230   //				MSPI_RegisterWrite((uint32_t)(0x00BC), tCHFG_PP_LHB_CFG.ulBulk);
;;;2231   //			}
;;;2232   //		}
;;;2233   //	}
;;;2234   //	#endif /* TILT_ON */
;;;2235   //#else
;;;2236   //	{
;;;2237   //	#ifdef TILT_ON
;;;2238   //		bool_t bIsTiltMSPIIdx = NO;
;;;2239   //		uint32_t ulMSPIIndex;
;;;2240   //	#endif
;;;2241   //		uint32_t ulLocalIndex;
;;;2242   //
;;;2243   //		tPEN_POS1_LHB_CFG_t tCHFG_PP_LHB_CFG;
;;;2244   //		tPEN_DAT1_LHB_CFG_t tCHFG_PD_LHB_CFG;
;;;2245   //
;;;2246   //		ulLocalIndex = (uint32_t)((ulIdx)&(0xFFFF));
;;;2247   //	#ifdef TILT_ON
;;;2248   //		ulMSPIIndex = (uint32_t)((ulIdx)>>16);
;;;2249   //	#endif
;;;2250   //
;;;2251   //		tHalIntrHandle.ulLocalSensingDoneRowIdx = ulLocalIndex;
;;;2252   //
;;;2253   //	#ifdef TILT_ON
;;;2254   //		#if IS_MULTI_PROTOCOL_OPERATION
;;;2255   //		{
;;;2256   //			if(hal_Info_GetControlActivePenSettingType() == ACTIVEPEN_TYPE_LOCAL_WGP &&
;;;2257   //				(ulMSPIIndex == 1 || ulMSPIIndex == 9))
;;;2258   //			{
;;;2259   //				tHalIntrHandle.ulLocalSensingDoneRowIdx_Tilt = sensingRowStart_Tilt = MAX(0,MIN(ROW_MAX-PEN_COORD_ROW_MAX,(int)(ulLocalIndex + sensingRowStart_Tilt_Offset)));
;;;2260   //				ulLocalIndex = sensingRowStart_Tilt;
;;;2261   //				bIsTiltMSPIIdx = YES;
;;;2262   //			}
;;;2263   //			else if(hal_Info_GetControlActivePenSettingType() == ACTIVEPEN_TYPE_LOCAL_MS &&
;;;2264   //				(ulMSPIIndex == 0 || ulMSPIIndex == 6))
;;;2265   //			{
;;;2266   //				sensingRowStart_Tilt = tHalIntrHandle.ulLocalSensingDoneRowIdx_Tilt = MAX(0,MIN(ROW_MAX-PEN_COORD_ROW_MAX,(int)(ulLocalIndex + sensingRowStart_Tilt_Offset)));
;;;2267   //			}
;;;2268   //		}
;;;2269   //		#else /* IS_MULTI_PROTOCOL_OPERATION */
;;;2270   //		{
;;;2271   //			#if IS_WGPPEN_PROTOCOL_OPERATION
;;;2272   //				if(ulMSPIIndex == 1 || ulMSPIIndex == 9)
;;;2273   //				{
;;;2274   //					tHalIntrHandle.ulLocalSensingDoneRowIdx_Tilt = sensingRowStart_Tilt = MAX(0,MIN(ROW_MAX-PEN_COORD_ROW_MAX,(int)(ulLocalIndex + sensingRowStart_Tilt_Offset)));
;;;2275   //					ulLocalIndex = sensingRowStart_Tilt;
;;;2276   //					bIsTiltMSPIIdx = YES;
;;;2277   //				}
;;;2278   //			#elif IS_MSPEN_PROTOCOL_OPERATION
;;;2279   //				if(ulMSPIIndex == 0 || ulMSPIIndex == 6)
;;;2280   //				{
;;;2281   //					sensingRowStart_Tilt = tHalIntrHandle.ulLocalSensingDoneRowIdx_Tilt = MAX(0,MIN(ROW_MAX-PEN_COORD_ROW_MAX,(int)(ulLocalIndex + sensingRowStart_Tilt_Offset)));
;;;2282   //				}
;;;2283   //			#endif /* IS_WGPPEN_PROTOCOL_OPERATION */
;;;2284   //		}
;;;2285   //		#endif /* IS_MULTI_PROTOCOL_OPERATION */
;;;2286   //	#endif /* TILT_ON */
;;;2287   //
;;;2288   //	#ifdef TILT_ON
;;;2289   //		if(bIsTiltMSPIIdx == NO)
;;;2290   //	#endif
;;;2291   //		{
;;;2292   //			tCHFG_PD_LHB_CFG.ulBulk = s_pktmoduleSRICCommonConf->PEN_DAT1_LHB_CFG.ulBulk;
;;;2293   //			tCHFG_PD_LHB_CFG.tBit.pen_dat1_mux_cfg0 = ulLocalIndex;
;;;2294   //			tCHFG_PD_LHB_CFG.tBit.pen_dat1_mux_cfg1 = ulLocalIndex;
;;;2295   //			tCHFG_PD_LHB_CFG.tBit.pen_dat1_mux_cfg2 = ulLocalIndex;
;;;2296   //			tCHFG_PD_LHB_CFG.tBit.pen_dat1_mux_cfg3 = ulLocalIndex;
;;;2297   //			MSPI_RegisterWrite((uint32_t)(0x00C0), tCHFG_PD_LHB_CFG.ulBulk);
;;;2298   //		}
;;;2299   //
;;;2300   //		tCHFG_PP_LHB_CFG.ulBulk = s_pktmoduleSRICCommonConf->PEN_POS1_LHB_CFG.ulBulk;
;;;2301   //		tCHFG_PP_LHB_CFG.tBit.pen_pos1_mux_cfg0 = ulLocalIndex;
;;;2302   //		tCHFG_PP_LHB_CFG.tBit.pen_pos1_mux_cfg1 = ulLocalIndex;
;;;2303   //		MSPI_RegisterWrite((uint32_t)(0x00BC), tCHFG_PP_LHB_CFG.ulBulk);
;;;2304   //	}
;;;2305   //#endif
;;;2306   }
;;;2307   
                          ENDP


                          AREA ||i.SW92513_SetRuntimeChangeRegister||, CODE, READONLY, ALIGN=2

                  SW92513_SetRuntimeChangeRegister PROC
;;;2838   
;;;2839   void SW92513_SetRuntimeChangeRegister(eROIC_REG_SET_CHANGE_MODE_t eMode)
000000  b510              PUSH     {r4,lr}
;;;2840   {
000002  b082              SUB      sp,sp,#8
;;;2841   	switch(eMode)
000004  2812              CMP      r0,#0x12
;;;2842   	{
;;;2843   		case ROIC_REG_SET_CHANGE_MUX_REMAP:
;;;2844   		{
;;;2845   			break;
;;;2846   		}
;;;2847   		case ROIC_REG_SET_CHAGNE_CR_TUNE:
;;;2848   		{
;;;2849   			SW92513_Reg_CRTuneSetting(CRTUNE_TYPE_INIT);
;;;2850   			break;
;;;2851   		}
;;;2852   		case ROIC_REG_SET_CHAGNE_WGPPen_Local_Setting: // WGP Local
;;;2853   		{
;;;2854   #if (USED_PEN_PROTOCOL == PEN_PROTOCOL_MSnWGP_PEN)
;;;2855   			MSPI_RegisterWrite((uint32_t)(0x0034), tSW92512ActivePen_Runtime_Change_WGP_Local_Reg.CFGR_PWM_CTL.ulBulk);
;;;2856   			MSPI_RegisterWrite((uint32_t)(0x0038), tSW92512ActivePen_Runtime_Change_WGP_Local_Reg.CFGR_PWM_POS_CTL.ulBulk);
;;;2857   			MSPI_RegisterWrite((uint32_t)(0x003C), tSW92512ActivePen_Runtime_Change_WGP_Local_Reg.CFGR_PWM_DAT_CTL.ulBulk);
;;;2858   			MSPI_RegisterWrite((uint32_t)(0x0040), tSW92512ActivePen_Runtime_Change_WGP_Local_Reg.ND_CTRL.ulBulk);
;;;2859   			MSPI_RegisterWrite((uint32_t)(0x0044), tSW92512ActivePen_Runtime_Change_WGP_Local_Reg.CFGR_PWM_PRD.ulBulk);
;;;2860   			MSPI_RegisterWrite((uint32_t)(0x004C), tSW92512ActivePen_Runtime_Change_WGP_Local_Reg.CFGR_RSTP_NUM1.ulBulk);
;;;2861   			MSPI_RegisterWrite((uint32_t)(0x0050), tSW92512ActivePen_Runtime_Change_WGP_Local_Reg.CFGR_PHTCR_NUM1.ulBulk);
;;;2862   			MSPI_RegisterWrite((uint32_t)(0x0054), tSW92512ActivePen_Runtime_Change_WGP_Local_Reg.CFGR_PHTCR_NUM2.ulBulk);
;;;2863   			MSPI_RegisterWrite((uint32_t)(0x0058), tSW92512ActivePen_Runtime_Change_WGP_Local_Reg.CFGR_VCR_NUM1.ulBulk);
;;;2864   			MSPI_RegisterWrite((uint32_t)(0x005C), tSW92512ActivePen_Runtime_Change_WGP_Local_Reg.CFGR_VCR_EN_NUM1.ulBulk);
;;;2865   			MSPI_RegisterWrite((uint32_t)(0x0064), tSW92512ActivePen_Runtime_Change_WGP_Local_Reg.CFGR_PHTH0_NUM1.ulBulk);
;;;2866   			MSPI_RegisterWrite((uint32_t)(0x0068), tSW92512ActivePen_Runtime_Change_WGP_Local_Reg.CFGR_PHTH1_NUM1.ulBulk);
;;;2867   			MSPI_RegisterWrite((uint32_t)(0x006C), tSW92512ActivePen_Runtime_Change_WGP_Local_Reg.CFGR_PHTH_NUM2.ulBulk);
;;;2868   			MSPI_RegisterWrite((uint32_t)(0x0074), tSW92512ActivePen_Runtime_Change_WGP_Local_Reg.CFGR_PHT_NUM1.ulBulk);
;;;2869   			MSPI_RegisterWrite((uint32_t)(0x00DC), tSW92512ActivePen_Runtime_Change_WGP_Local_Reg.CFGR_PWM_SET_EN_BIT.ulBulk);
;;;2870   			SW92512_Reg_LHBSetting_ByChangeMode(ROIC_REG_SET_CHAGNE_WGPPen_Local_Setting);
;;;2871   			MSPI_RegisterWrite((uint32_t)(0x01B8), tSW92512ActivePen_Runtime_Change_WGP_Local_Reg.CFGR_SENSE_CTRL.ulBulk);
;;;2872   #endif /* (USED_PEN_PROTOCOL == PEN_PROTOCOL_MSnWGP_PEN) */
;;;2873   			break;
;;;2874   		}
;;;2875   		case ROIC_REG_SET_CHAGNE_WGPPen_Full_Setting: // WGP Full
;;;2876   		{
;;;2877   			break;
;;;2878   		}
;;;2879   		case ROIC_REG_SET_CHAGNE_MSPen_Local_Setting: // MS Local
;;;2880   		{
;;;2881   #if (USED_PEN_PROTOCOL == PEN_PROTOCOL_MSnWGP_PEN)
;;;2882   			MSPI_RegisterWrite((uint32_t)(0x0034), tSW92512ActivePen_Runtime_Change_MPP25_Local_Reg.CFGR_PWM_CTL.ulBulk);
;;;2883   			MSPI_RegisterWrite((uint32_t)(0x0038), tSW92512ActivePen_Runtime_Change_MPP25_Local_Reg.CFGR_PWM_POS_CTL.ulBulk);
;;;2884   			MSPI_RegisterWrite((uint32_t)(0x003C), tSW92512ActivePen_Runtime_Change_MPP25_Local_Reg.CFGR_PWM_DAT_CTL.ulBulk);
;;;2885   			MSPI_RegisterWrite((uint32_t)(0x0040), tSW92512ActivePen_Runtime_Change_MPP25_Local_Reg.ND_CTRL.ulBulk);
;;;2886   			MSPI_RegisterWrite((uint32_t)(0x0044), tSW92512ActivePen_Runtime_Change_MPP25_Local_Reg.CFGR_PWM_PRD.ulBulk);
;;;2887   			MSPI_RegisterWrite((uint32_t)(0x004C), tSW92512ActivePen_Runtime_Change_MPP25_Local_Reg.CFGR_RSTP_NUM1.ulBulk);
;;;2888   			MSPI_RegisterWrite((uint32_t)(0x0050), tSW92512ActivePen_Runtime_Change_MPP25_Local_Reg.CFGR_PHTCR_NUM1.ulBulk);
;;;2889   			MSPI_RegisterWrite((uint32_t)(0x0054), tSW92512ActivePen_Runtime_Change_MPP25_Local_Reg.CFGR_PHTCR_NUM2.ulBulk);
;;;2890   			MSPI_RegisterWrite((uint32_t)(0x0058), tSW92512ActivePen_Runtime_Change_MPP25_Local_Reg.CFGR_VCR_NUM1.ulBulk);
;;;2891   			MSPI_RegisterWrite((uint32_t)(0x005C), tSW92512ActivePen_Runtime_Change_MPP25_Local_Reg.CFGR_VCR_EN_NUM1.ulBulk);
;;;2892   			MSPI_RegisterWrite((uint32_t)(0x0064), tSW92512ActivePen_Runtime_Change_MPP25_Local_Reg.CFGR_PHTH0_NUM1.ulBulk);
;;;2893   			MSPI_RegisterWrite((uint32_t)(0x0068), tSW92512ActivePen_Runtime_Change_MPP25_Local_Reg.CFGR_PHTH1_NUM1.ulBulk);
;;;2894   			MSPI_RegisterWrite((uint32_t)(0x006C), tSW92512ActivePen_Runtime_Change_MPP25_Local_Reg.CFGR_PHTH_NUM2.ulBulk);
;;;2895   			MSPI_RegisterWrite((uint32_t)(0x0074), tSW92512ActivePen_Runtime_Change_MPP25_Local_Reg.CFGR_PHT_NUM1.ulBulk);
;;;2896   			MSPI_RegisterWrite((uint32_t)(0x00DC), tSW92512ActivePen_Runtime_Change_MPP25_Local_Reg.CFGR_PWM_SET_EN_BIT.ulBulk);
;;;2897   			SW92512_Reg_LHBSetting_ByChangeMode(ROIC_REG_SET_CHAGNE_MSPen_Local_Setting);
;;;2898   			MSPI_RegisterWrite((uint32_t)(0x01B8), tSW92512ActivePen_Runtime_Change_MPP25_Local_Reg.CFGR_SENSE_CTRL.ulBulk);
;;;2899   #endif /* (USED_PEN_PROTOCOL == PEN_PROTOCOL_MSnWGP_PEN) */
;;;2900   			break;
;;;2901   		}
;;;2902   		case ROIC_REG_SET_CHAGNE_MSPen_Full_Setting: // MS Full
;;;2903   		{
;;;2904   			break;
;;;2905   		}
;;;2906   #if USED_PEN_MODE_OPERATION
;;;2907   		case ROIC_REG_SET_CHANGE_Full_To_Local:
;;;2908   		{
;;;2909   			SW92513_Reg_LHBSetting(PWM_LOCAL_PEN_MODE);
;;;2910   
;;;2911   			break;
;;;2912   		}
;;;2913   		case ROIC_REG_SET_CHANGE_Local_To_Full:
;;;2914   		{
;;;2915   			SW92513_Reg_LHBSetting(PWM_FULL_FINGER_MODE);
;;;2916   
;;;2917   			break;
;;;2918   		}
;;;2919   #endif /* USED_PEN_MODE_OPERATION */
;;;2920   #if USED_IDLE_MODE_CONTROL
;;;2921   		case ROIC_REG_SET_CHANGE_Full_To_FullIdle:
;;;2922   		{
;;;2923   			SW92513_Reg_LHBSetting(PWM_FULL_FINGER_IDLE_MODE);
;;;2924   			MSPI_RegisterMultiWrite((uint32_t)(0x0258), (uint32_t *)&t_IDLE_R0_CR_GTUNE1[0].ulBulk);  // R/W
;;;2925   			MSPI_RegisterMultiWrite((uint32_t)(0x0358), (uint32_t *)&t_IDLE_R1_CR_GTUNE1[0].ulBulk);  // R/W
;;;2926   
;;;2927   		    MSPI_RegisterMultiWrite((uint32_t)(0x021C), (uint32_t *)&tIDLE_R0_CR_R1G_MUX1_2[0].ulBulk);  // R/W
;;;2928   		    MSPI_RegisterMultiWrite((uint32_t)(0x0220), (uint32_t *)&tIDLE_R0_CR_R2G_MUX1_2[0].ulBulk);  // R/W
;;;2929   		    MSPI_RegisterMultiWrite((uint32_t)(0x0224), (uint32_t *)&tIDLE_R0_CR_R3G_MUX1_2[0].ulBulk);  // R/W
;;;2930   
;;;2931   		    MSPI_RegisterMultiWrite((uint32_t)(0x031C), (uint32_t *)&tIDLE_R1_CR_R1G_MUX1_2[0].ulBulk);  // R/W
;;;2932   		    MSPI_RegisterMultiWrite((uint32_t)(0x0320), (uint32_t *)&tIDLE_R1_CR_R2G_MUX1_2[0].ulBulk);  // R/W
;;;2933   		    MSPI_RegisterMultiWrite((uint32_t)(0x0324), (uint32_t *)&tIDLE_R1_CR_R3G_MUX1_2[0].ulBulk);  // R/W
;;;2934   
;;;2935   //		    MSPI_RegisterWrite((uint32_t)(0x0254), tR0_TUNE_IDLE_ROW_MUX1_2.ulBulk);  // R/W
;;;2936   //		    MSPI_RegisterWrite((uint32_t)(0x0354), tR1_TUNE_IDLE_ROW_MUX1_2.ulBulk);  // R/W
;;;2937   
;;;2938   			MSPI_RegisterWrite((uint32_t)(0x001C), tIdle_CH_MUX_NUM.ulBulk);  // R/W
;;;2939   			MSPI_RegisterWrite((uint32_t)(0x00B8), tIdle_FIG_MUX_CFG_00.ulBulk);  // R/W
;;;2940   			MSPI_RegisterWrite((uint32_t)(0x002C), tIdle_PWM_FIG_CTL.ulBulk);  // R/W
;;;2941   			MSPI_RegisterWrite((uint32_t)(0x0218), tIdle_R0_LHB_MUX_CTL.ulBulk);  // R/W
;;;2942   			MSPI_RegisterWrite((uint32_t)(0x0318), tIdle_R1_LHB_MUX_CTL.ulBulk);  // R/W
;;;2943   			MSPI_RegisterWrite((uint32_t)(0x005C), tIdle_SMPL_CTL.ulBulk);  // R/W
;;;2944   
;;;2945   	#if (LHB_NUM != LOCAL_IDLE_LHB_NUM)
;;;2946   			MSPI_RegisterWrite((uint32_t)(0x00C0), tIdle_RCOM_LHB_CFG.ulBulk);  // R/W
;;;2947   	#endif /* (LHB_NUM != LOCAL_IDLE_LHB_NUM) */
;;;2948   
;;;2949   	#if USED_IDLE_MODE_30Hz_CONTROL || USED_IDLE_MODE_20Hz_CONTROL
;;;2950   			/*
;;;2951   			 * Dummy Write to finish the write in the tsync high section.
;;;2952   			 */
;;;2953   			{
;;;2954   				MSPI_RegisterWrite((uint32_t)(0x009C), tIdle_FIG_MUX_CFG_00.ulBulk);  // R/W
;;;2955   				MSPI_RegisterWrite((uint32_t)(0x0034), tIdle_PWM_FIG_CTL.ulBulk);  // R/W
;;;2956   				MSPI_RegisterWrite((uint32_t)(0x02B8), tIdle_R0_LHB_MUX_CTL.ulBulk);  // R/W
;;;2957   				MSPI_RegisterWrite((uint32_t)(0x03B8), tIdle_R1_LHB_MUX_CTL.ulBulk);  // R/W
;;;2958   				MSPI_RegisterWrite((uint32_t)(0x0048), tIdle_SMPL_CTL.ulBulk);  // R/W
;;;2959   				MSPI_RegisterWrite((uint32_t)(0x00A4), tIdle_RCOM_LHB_CFG.ulBulk);  // R/W
;;;2960   				MSPI_RegisterWrite((uint32_t)(0x03B8), tIdle_R1_LHB_MUX_CTL.ulBulk);  // R/W
;;;2961   				MSPI_RegisterWrite((uint32_t)(0x0048), tIdle_SMPL_CTL.ulBulk);  // R/W
;;;2962   				MSPI_RegisterWrite((uint32_t)(0x00A4), tIdle_RCOM_LHB_CFG.ulBulk);  // R/W
;;;2963   			}
;;;2964   	#endif /* USED_IDLE_MODE_30Hz_CONTROL */
;;;2965   
;;;2966   //			MSPI_RegisterWrite((uint32_t)(0x0034), CFGR_Idle_PWM_CTL.ulBulk);
;;;2967   //			MSPI_RegisterWrite((uint32_t)(0x00EC), CFGR_PEN_IDLE_MUX_BIT_EN.ulBulk);
;;;2968   
;;;2969   	#if USED_IDLE_MODE_30Hz_CONTROL || USED_IDLE_MODE_20Hz_CONTROL
;;;2970   			/*
;;;2971   			 * Must write in the tsync high section
;;;2972   			 */
;;;2973   			{
;;;2974   				tSYS_CFG_t tSYS_CFG;
;;;2975   				tSYS_CFG.ulBulk = s_pktmoduleSRICCommonConf->SYS_CFG.ulBulk;
;;;2976   				tSYS_CFG.tBit.tg_reset = 1;
;;;2977   				MSPI_RegisterWrite((uint32_t)(0x0014), tSYS_CFG.ulBulk);
;;;2978   				tSYS_CFG.tBit.tg_reset = 0;
;;;2979   				MSPI_RegisterWrite((uint32_t)(0x0014), tSYS_CFG.ulBulk);
;;;2980   			}
;;;2981   	#endif /* USED_IDLE_MODE_30Hz_CONTROL */
;;;2982   			break;
;;;2983   		}
;;;2984   #endif /* USED_IDLE_MODE_CONTROL */
;;;2985   #if USED_LOCAL_IDLE_MODE_CONTROL
;;;2986   		case ROIC_REG_SET_CHANGE_Local_To_LocalIdle:
;;;2987   		{
;;;2988   			SW92513_Reg_LHBSetting(PWM_LOCAL_PEN_IDLE_MODE);
;;;2989   
;;;2990   
;;;2991   			MSPI_RegisterMultiWrite((uint32_t)(0x0250), (uint32_t *)&t_IDLE_R0_CR_GTUNE[0].ulBulk);  // R/W
;;;2992   			MSPI_RegisterMultiWrite((uint32_t)(0x0350), (uint32_t *)&t_IDLE_R1_CR_GTUNE[0].ulBulk);  // R/W
;;;2993   
;;;2994   		    MSPI_RegisterMultiWrite((uint32_t)(0x0214), (uint32_t *)&tIDLE_R0_CR_R1G_MUX1_2[0].ulBulk);  // R/W
;;;2995   		    MSPI_RegisterMultiWrite((uint32_t)(0x0218), (uint32_t *)&tIDLE_R0_CR_R2G_MUX1_2[0].ulBulk);  // R/W
;;;2996   		    MSPI_RegisterMultiWrite((uint32_t)(0x021C), (uint32_t *)&tIDLE_R0_CR_R3G_MUX1_2[0].ulBulk);  // R/W
;;;2997   
;;;2998   		    MSPI_RegisterMultiWrite((uint32_t)(0x0314), (uint32_t *)&tIDLE_R1_CR_R1G_MUX1_2[0].ulBulk);  // R/W
;;;2999   		    MSPI_RegisterMultiWrite((uint32_t)(0x0318), (uint32_t *)&tIDLE_R1_CR_R2G_MUX1_2[0].ulBulk);  // R/W
;;;3000   		    MSPI_RegisterMultiWrite((uint32_t)(0x031C), (uint32_t *)&tIDLE_R1_CR_R3G_MUX1_2[0].ulBulk);  // R/W
;;;3001   
;;;3002   		    MSPI_RegisterWrite((uint32_t)(0x0254), tR0_TUNE_IDLE_ROW_MUX1_2.ulBulk);  // R/W
;;;3003   		    MSPI_RegisterWrite((uint32_t)(0x0354), tR1_TUNE_IDLE_ROW_MUX1_2.ulBulk);  // R/W
;;;3004   
;;;3005   			MSPI_RegisterWrite((uint32_t)(0x0020), tIdle_MUX_CTL.ulBulk);  // R/W
;;;3006   			MSPI_RegisterWrite((uint32_t)(0x009C), tIdle_FIG_MUX_CFG_00.ulBulk);  // R/W
;;;3007   			MSPI_RegisterWrite((uint32_t)(0x0034), tIdle_PWM_FIG_CTL.ulBulk);  // R/W
;;;3008   		    MSPI_RegisterWrite((uint32_t)(0x0038), tIdle_PWM_PEN_POS_CTL.ulBulk);  // R/W
;;;3009   			MSPI_RegisterWrite((uint32_t)(0x02B8), tIdle_R0_LHB_MUX_CTL.ulBulk);  // R/W
;;;3010   			MSPI_RegisterWrite((uint32_t)(0x03B8), tIdle_R1_LHB_MUX_CTL.ulBulk);  // R/W
;;;3011   			MSPI_RegisterWrite((uint32_t)(0x0048), tIdle_SMPL_CTL.ulBulk);  // R/W
;;;3012   
;;;3013   
;;;3014   			{
;;;3015   			 	tPEN_POS1_LHB_CFG_t tCHFG_PP_LHB_CFG;
;;;3016   				tCHFG_PP_LHB_CFG.tBit.pen_pos1_mux_cfg0 = 62;
;;;3017   				tCHFG_PP_LHB_CFG.tBit.pen_pos1_mux_cfg1 = 63;
;;;3018   				MSPI_RegisterWrite((uint32_t)(0x00BC), tCHFG_PP_LHB_CFG.ulBulk);
;;;3019   			}
;;;3020   
;;;3021   
;;;3022   
;;;3023   
;;;3024   
;;;3025   			MSPI_RegisterWrite((uint32_t)(0x00A4), tIdle_RCOM_LHB_CFG.ulBulk);  // R/W
;;;3026   
;;;3027   			break;
;;;3028   		}
;;;3029   #endif /* USED_LOCAL_IDLE_MODE_CONTROL */
;;;3030   #if USED_IDLE_MODE_CONTROL
;;;3031   		case ROIC_REG_SET_CHANGE_FullIdle_To_Full:
;;;3032   		{
;;;3033   			SW92513_Reg_LHBSetting(PWM_FULL_FINGER_MODE);
;;;3034   			MSPI_RegisterMultiWrite((uint32_t)(0x0258), (uint32_t *)&s_pktmoduleSRICCommonConf->R0_CR_GTUNE1[0].ulBulk);  // R/W
;;;3035   			MSPI_RegisterMultiWrite((uint32_t)(0x0358), (uint32_t *)&s_pktmoduleSRICCommonConf->R1_CR_GTUNE1[0].ulBulk);  // R/W
;;;3036   
;;;3037   		    MSPI_RegisterMultiWrite((uint32_t)(0x021C), (uint32_t *)&s_pktmoduleSRICCommonConf->R0_CR_R1G_MUX1_2[0].ulBulk);  // R/W
;;;3038   		    MSPI_RegisterMultiWrite((uint32_t)(0x0220), (uint32_t *)&s_pktmoduleSRICCommonConf->R0_CR_R2G_MUX1_2[0].ulBulk);  // R/W
;;;3039   		    MSPI_RegisterMultiWrite((uint32_t)(0x0224), (uint32_t *)&s_pktmoduleSRICCommonConf->R0_CR_R3G_MUX1_2[0].ulBulk);  // R/W
;;;3040   
;;;3041   		    MSPI_RegisterMultiWrite((uint32_t)(0x031C), (uint32_t *)&s_pktmoduleSRICCommonConf->R1_CR_R1G_MUX1_2[0].ulBulk);  // R/W
;;;3042   		    MSPI_RegisterMultiWrite((uint32_t)(0x0320), (uint32_t *)&s_pktmoduleSRICCommonConf->R1_CR_R2G_MUX1_2[0].ulBulk);  // R/W
;;;3043   		    MSPI_RegisterMultiWrite((uint32_t)(0x0324), (uint32_t *)&s_pktmoduleSRICCommonConf->R1_CR_R3G_MUX1_2[0].ulBulk);  // R/W
;;;3044   
;;;3045   //		    MSPI_RegisterWrite((uint32_t)(0x0254), s_pktmoduleSRICCommonConf->R0_TUNE_ROW_MUX1_2.ulBulk);  // R/W
;;;3046   //		    MSPI_RegisterWrite((uint32_t)(0x0354), s_pktmoduleSRICCommonConf->R1_TUNE_ROW_MUX1_2.ulBulk);  // R/W
;;;3047   
;;;3048   			MSPI_RegisterWrite((uint32_t)(0x001C), s_pktmoduleSRICCommonConf->CH_MUX_NUM.ulBulk);  // R/W
;;;3049   			MSPI_RegisterWrite((uint32_t)(0x00B8), s_pktmoduleSRICCommonConf->FIG_MUX_CFG_00.ulBulk);  // R/W
;;;3050   			MSPI_RegisterWrite((uint32_t)(0x002C), s_pktmoduleSRICCommonConf->PWM_FIG_CTL.ulBulk);  // R/W
;;;3051   			MSPI_RegisterWrite((uint32_t)(0x0218), s_pktmoduleSRICCommonConf->R0_LHB_MUX_CTL.ulBulk);  // R/W
;;;3052   			MSPI_RegisterWrite((uint32_t)(0x0318), s_pktmoduleSRICCommonConf->R1_LHB_MUX_CTL.ulBulk);  // R/W
;;;3053   			MSPI_RegisterWrite((uint32_t)(0x005C), s_pktmoduleSRICCommonConf->SMPL_CTL.ulBulk);  // R/W
;;;3054   	#if (LHB_NUM != LOCAL_IDLE_LHB_NUM)
;;;3055   			MSPI_RegisterWrite((uint32_t)(0x00C0), s_pktmoduleSRICCommonConf->RCOM_LHB_CFG.ulBulk);  // R/W
;;;3056   	#endif /* (LHB_NUM != LOCAL_IDLE_LHB_NUM) */
;;;3057   
;;;3058   	#if USED_IDLE_MODE_30Hz_CONTROL || USED_IDLE_MODE_20Hz_CONTROL
;;;3059   			/*
;;;3060   			 * Dummy Write to finish the write in the tsync high section.
;;;3061   			 */
;;;3062   			{
;;;3063   				MSPI_RegisterWrite((uint32_t)(0x009C), s_pktmoduleSRICCommonConf->FIG_MUX_CFG_00.ulBulk);  // R/W
;;;3064   				MSPI_RegisterWrite((uint32_t)(0x0034), s_pktmoduleSRICCommonConf->PWM_FIG_CTL.ulBulk);  // R/W
;;;3065   				MSPI_RegisterWrite((uint32_t)(0x02B8), s_pktmoduleSRICCommonConf->R0_LHB_MUX_CTL.ulBulk);  // R/W
;;;3066   				MSPI_RegisterWrite((uint32_t)(0x03B8), s_pktmoduleSRICCommonConf->R1_LHB_MUX_CTL.ulBulk);  // R/W
;;;3067   				MSPI_RegisterWrite((uint32_t)(0x0048), s_pktmoduleSRICCommonConf->SMPL_CTL.ulBulk);  // R/W
;;;3068   				MSPI_RegisterWrite((uint32_t)(0x00A4), s_pktmoduleSRICCommonConf->RCOM_LHB_CFG.ulBulk);  // R/W
;;;3069   				MSPI_RegisterWrite((uint32_t)(0x009C), s_pktmoduleSRICCommonConf->FIG_MUX_CFG_00.ulBulk);  // R/W
;;;3070   				MSPI_RegisterWrite((uint32_t)(0x0034), s_pktmoduleSRICCommonConf->PWM_FIG_CTL.ulBulk);  // R/W
;;;3071   				MSPI_RegisterWrite((uint32_t)(0x0048), s_pktmoduleSRICCommonConf->SMPL_CTL.ulBulk);  // R/W
;;;3072   				MSPI_RegisterWrite((uint32_t)(0x00A4), s_pktmoduleSRICCommonConf->RCOM_LHB_CFG.ulBulk);  // R/W
;;;3073   				MSPI_RegisterWrite((uint32_t)(0x009C), s_pktmoduleSRICCommonConf->FIG_MUX_CFG_00.ulBulk);  // R/W
;;;3074   				MSPI_RegisterWrite((uint32_t)(0x0034), s_pktmoduleSRICCommonConf->PWM_FIG_CTL.ulBulk);  // R/W
;;;3075   			}
;;;3076   	#endif /* USED_IDLE_MODE_30Hz_CONTROL */
;;;3077   
;;;3078   //			MSPI_RegisterWrite((uint32_t)(0x0034), s_pktmoduleSRICCommonConf->CFGR_PWM_CTL.ulBulk);
;;;3079   //			MSPI_RegisterWrite((uint32_t)(0x00EC), s_pktmoduleSRICCommonConf->CFGR_PEN_MUX_BIT_EN.ulBulk);
;;;3080   
;;;3081   	#if USED_IDLE_MODE_30Hz_CONTROL || USED_IDLE_MODE_20Hz_CONTROL
;;;3082   			/*
;;;3083   			 * Must write in the tsync high section
;;;3084   			 */
;;;3085   			{
;;;3086   				tSYS_CFG_t tSYS_CFG;
;;;3087   				tSYS_CFG.ulBulk = s_pktmoduleSRICCommonConf->SYS_CFG.ulBulk;
;;;3088   				tSYS_CFG.tBit.tg_reset = 1;
;;;3089   				MSPI_RegisterWrite((uint32_t)(0x0014), tSYS_CFG.ulBulk);
;;;3090   				tSYS_CFG.tBit.tg_reset = 0;
;;;3091   				MSPI_RegisterWrite((uint32_t)(0x0014), tSYS_CFG.ulBulk);
;;;3092   			}
;;;3093   	#endif /* USED_IDLE_MODE_30Hz_CONTROL */
;;;3094   			break;
;;;3095   		}
;;;3096   #endif /* USED_IDLE_MODE_CONTROL */
;;;3097   #if USED_LOCAL_IDLE_MODE_CONTROL
;;;3098   		case ROIC_REG_SET_CHANGE_LocalIdle_To_Local:
;;;3099   		{
;;;3100   			SW92513_Reg_LHBSetting(PWM_LOCAL_PEN_MODE);
;;;3101   			MSPI_RegisterMultiWrite((uint32_t)(0x0250), (uint32_t *)&s_pktmoduleSRICCommonConf->R0_CR_GTUNE[0].ulBulk);  // R/W
;;;3102   			MSPI_RegisterMultiWrite((uint32_t)(0x0350), (uint32_t *)&s_pktmoduleSRICCommonConf->R1_CR_GTUNE[0].ulBulk);  // R/W
;;;3103   
;;;3104   		    MSPI_RegisterMultiWrite((uint32_t)(0x0214), (uint32_t *)&s_pktmoduleSRICCommonConf->R0_CR_R1G_MUX1_2[0].ulBulk);  // R/W
;;;3105   		    MSPI_RegisterMultiWrite((uint32_t)(0x0218), (uint32_t *)&s_pktmoduleSRICCommonConf->R0_CR_R2G_MUX1_2[0].ulBulk);  // R/W
;;;3106   		    MSPI_RegisterMultiWrite((uint32_t)(0x021C), (uint32_t *)&s_pktmoduleSRICCommonConf->R0_CR_R3G_MUX1_2[0].ulBulk);  // R/W
;;;3107   
;;;3108   		    MSPI_RegisterMultiWrite((uint32_t)(0x0314), (uint32_t *)&s_pktmoduleSRICCommonConf->R1_CR_R1G_MUX1_2[0].ulBulk);  // R/W
;;;3109   		    MSPI_RegisterMultiWrite((uint32_t)(0x0318), (uint32_t *)&s_pktmoduleSRICCommonConf->R1_CR_R2G_MUX1_2[0].ulBulk);  // R/W
;;;3110   		    MSPI_RegisterMultiWrite((uint32_t)(0x031C), (uint32_t *)&s_pktmoduleSRICCommonConf->R1_CR_R3G_MUX1_2[0].ulBulk);  // R/W
;;;3111   
;;;3112   		    MSPI_RegisterWrite((uint32_t)(0x0254), s_pktmoduleSRICCommonConf->R0_TUNE_ROW_MUX1_2.ulBulk);  // R/W
;;;3113   		    MSPI_RegisterWrite((uint32_t)(0x0354), s_pktmoduleSRICCommonConf->R1_TUNE_ROW_MUX1_2.ulBulk);  // R/W
;;;3114   
;;;3115   			MSPI_RegisterWrite((uint32_t)(0x0020), s_pktmoduleSRICCommonConf->MUX_CTL.ulBulk);  // R/W
;;;3116   			MSPI_RegisterWrite((uint32_t)(0x009C), s_pktmoduleSRICCommonConf->FIG_MUX_CFG_00.ulBulk);  // R/W
;;;3117   			MSPI_RegisterWrite((uint32_t)(0x0034), s_pktmoduleSRICCommonConf->PWM_FIG_CTL.ulBulk);  // R/W
;;;3118   		    MSPI_RegisterWrite((uint32_t)(0x0038), s_pktmoduleSRICCommonConf->PWM_POS_CTL.ulBulk);  // R/W
;;;3119   			MSPI_RegisterWrite((uint32_t)(0x02B8), s_pktmoduleSRICCommonConf->R0_LHB_MUX_CTL.ulBulk);  // R/W
;;;3120   			MSPI_RegisterWrite((uint32_t)(0x03B8), s_pktmoduleSRICCommonConf->R1_LHB_MUX_CTL.ulBulk);  // R/W
;;;3121   			MSPI_RegisterWrite((uint32_t)(0x0048), s_pktmoduleSRICCommonConf->SMPL_CTL.ulBulk);  // R/W
;;;3122   			MSPI_RegisterWrite((uint32_t)(0x00A4), s_pktmoduleSRICCommonConf->RCOM_LHB_CFG.ulBulk);  // R/W
;;;3123   
;;;3124   			break;
;;;3125   		}
;;;3126   		case ROIC_REG_SET_CHANGE_LocalIdle_To_Full:
;;;3127   		{
;;;3128   			SW92513_Reg_LHBSetting(PWM_FULL_FINGER_MODE);
;;;3129   			break;
;;;3130   		}
;;;3131   #endif /* USED_LOCAL_IDLE_MODE_CONTROL */
;;;3132   #if USED_NOISE_HOPPING_FREQ
;;;3133   		case ROIC_REG_SET_FreHopp_CHANGE_Main_Freq:
;;;3134   		{
;;;3135   			MSPI_RegisterWrite((uint32_t)(0x002C), s_pktmoduleSRICCommonConf->PWM_FIG_CTL.ulBulk);
;;;3136   	#if USED_ESD_RECOVERY_SENSING_WITHOUT_MODULATION
;;;3137   			MSPI_RegisterWrite((uint32_t)(0x0030), s_pktmoduleSRICCommonConf->PWM_POS_CTL.ulBulk);
;;;3138   	#endif
;;;3139   	#if USED_PEN_MODE_OPERATION
;;;3140   			MSPI_RegisterWrite((uint32_t)(0x0030), s_pktmoduleSRICCommonConf->PWM_POS_CTL.ulBulk);
;;;3141   			MSPI_RegisterWrite((uint32_t)(0x0034), s_pktmoduleSRICCommonConf->PWM_DAT_CTL.ulBulk);
;;;3142   			MSPI_RegisterWrite((uint32_t)(0x0038), s_pktmoduleSRICCommonConf->PWM_TILT_CTL.ulBulk);
;;;3143   	#endif /* USED_PEN_MODE_OPERATION */
;;;3144   
;;;3145   			SW92513_Reg_AFESetting(SM_FINGER_ONLY_ACTIVE_FRQ_MAIN_MODE);
;;;3146   //			SW92513_Reg_CRTuneSetting(CRTUNE_TYPE_MAIN_FRQ);
;;;3147   //			_gT(_GPIO_TP_INTR);
;;;3148   //			_gT(_GPIO_TP_INTR);
;;;3149   			break;
;;;3150   		}
;;;3151   		case ROIC_REG_SET_FreHopp_CHANGE_Hopp1_Freq:
;;;3152   		{
;;;3153   			tPWM_FIG_CTL_t tTempPWM_FIG_CTL;
;;;3154   			tTempPWM_FIG_CTL.tBit.pwm_fig_act_num = PARAMSET_ROIC_CFGR_PWM_FIG_HOPPFRQ_CTL_pwm_act_num;
;;;3155   			tTempPWM_FIG_CTL.tBit.pwm_fig_mgap_num = PARAMSET_ROIC_CFGR_PWM_FIG_HOPPFRQ_CTL_pwm_mgap_num;
;;;3156   			tTempPWM_FIG_CTL.tBit.pwm_fig_dum_num = PARAMSET_ROIC_CFGR_PWM_FIG_HOPPFRQ_CTL_pwm_dum_num + PARAMSET_ROIC_CFGR_PWM_FIG_HOPPFRQ_CTL_pwm_set_num;
;;;3157   			MSPI_RegisterWrite((uint32_t)(0x002C), tTempPWM_FIG_CTL.ulBulk);
;;;3158   
;;;3159   	#if USED_ESD_RECOVERY_SENSING_WITHOUT_MODULATION
;;;3160   			tPWM_POS_CTL_t tTempPWM_POS_CTL;
;;;3161   			tTempPWM_POS_CTL.tBit.pwm_pos_pdrv_num = PARAMSET_ROIC_CFGR_PWM_POS_HOPPFRQ_CTL_pwm_pdrv_num;
;;;3162   			tTempPWM_POS_CTL.tBit.pwm_pos_mux1_act_num = PARAMSET_ROIC_CFGR_PWM_POS_HOPPFRQ_CTL_pwm_mux1_act_num;
;;;3163   			tTempPWM_POS_CTL.tBit.pwm_pos_act_num = PARAMSET_ROIC_CFGR_PWM_POS_HOPPFRQ_CTL_pwm_act_num;
;;;3164   			tTempPWM_POS_CTL.tBit.pwm_pos_mgap_num = PARAMSET_ROIC_CFGR_PWM_POS_HOPPFRQ_CTL_pwm_mgap_num;
;;;3165   			tTempPWM_POS_CTL.tBit.pwm_pos_dum_num = PARAMSET_ROIC_CFGR_PWM_POS_HOPPFRQ_CTL_pwm_dum_num + PARAMSET_ROIC_CFGR_PWM_POS_HOPPFRQ_CTL_pwm_set_num;
;;;3166   			MSPI_RegisterWrite((uint32_t)(0x0030), tTempPWM_POS_CTL.ulBulk);
;;;3167   	#endif
;;;3168   
;;;3169   	#if USED_PEN_MODE_OPERATION
;;;3170   			{
;;;3171   				tPWM_POS_CTL_t tTempPWM_POS_CTL;
;;;3172   				tPWM_DAT_CTL_t tTempPWM_DAT_CTL;
;;;3173   				tPWM_TILT_CTL_t tTempPWM_TILT_CTL;
;;;3174   
;;;3175   				tTempPWM_POS_CTL.tBit.pwm_pos_pdrv_num = PARAMSET_ROIC_CFGR_PWM_POS_HOPPFRQ_CTL_pwm_pdrv_num;
;;;3176   				tTempPWM_POS_CTL.tBit.pwm_pos_mux1_act_num = PARAMSET_ROIC_CFGR_PWM_POS_HOPPFRQ_CTL_pwm_mux1_act_num;
;;;3177   				tTempPWM_POS_CTL.tBit.pwm_pos_act_num = PARAMSET_ROIC_CFGR_PWM_POS_HOPPFRQ_CTL_pwm_act_num;
;;;3178   				tTempPWM_POS_CTL.tBit.pwm_pos_mgap_num = PARAMSET_ROIC_CFGR_PWM_POS_HOPPFRQ_CTL_pwm_mgap_num;
;;;3179   				tTempPWM_POS_CTL.tBit.pwm_pos_dum_num = PARAMSET_ROIC_CFGR_PWM_POS_HOPPFRQ_CTL_pwm_dum_num + PARAMSET_ROIC_CFGR_PWM_POS_HOPPFRQ_CTL_pwm_set_num;
;;;3180   				MSPI_RegisterWrite((uint32_t)(0x0030), tTempPWM_POS_CTL.ulBulk);
;;;3181   
;;;3182   				tTempPWM_DAT_CTL.tBit.pwm_dat_pdrv_num = PARAMSET_ROIC_CFGR_PWM_DATA_HOPPFRQ_CTL_pwm_pdrv_num;
;;;3183   				tTempPWM_DAT_CTL.tBit.pwm_dat_mux1_act_num = PARAMSET_ROIC_CFGR_PWM_DATA_HOPPFRQ_CTL_pwm_mux1_act_num;
;;;3184   				tTempPWM_DAT_CTL.tBit.pwm_dat_mux2_act_num = PARAMSET_ROIC_CFGR_PWM_DATA_HOPPFRQ_CTL_pwm_mux2_act_num;
;;;3185   				tTempPWM_DAT_CTL.tBit.pwm_dat_act_num = PARAMSET_ROIC_CFGR_PWM_DATA_HOPPFRQ_CTL_pwm_act_num;
;;;3186   				tTempPWM_DAT_CTL.tBit.pwm_dat_mgap_num = PARAMSET_ROIC_CFGR_PWM_DATA_HOPPFRQ_CTL_pwm_mgap_num;
;;;3187   				tTempPWM_DAT_CTL.tBit.pwm_dat_dum_num = PARAMSET_ROIC_CFGR_PWM_DATA_HOPPFRQ_CTL_pwm_dum_num + PARAMSET_ROIC_CFGR_PWM_DATA_HOPPFRQ_CTL_pwm_set_num;
;;;3188   				MSPI_RegisterWrite((uint32_t)(0x0034), tTempPWM_DAT_CTL.ulBulk);
;;;3189   
;;;3190   				tTempPWM_TILT_CTL.tBit.pwm_tilt_pdrv_num = PARAMSET_ROIC_CFGR_PWM_TILT_HOPPFRQ_CTL_pwm_pdrv_num;
;;;3191   				tTempPWM_TILT_CTL.tBit.pwm_tilt_mux1_act_num = PARAMSET_ROIC_CFGR_PWM_TILT_HOPPFRQ_CTL_pwm_mux1_act_num;
;;;3192   				tTempPWM_TILT_CTL.tBit.pwm_tilt_act_num = PARAMSET_ROIC_CFGR_PWM_TILT_HOPPFRQ_CTL_pwm_act_num;
;;;3193   				tTempPWM_TILT_CTL.tBit.pwm_tilt_mgap_num = PARAMSET_ROIC_CFGR_PWM_TILT_HOPPFRQ_CTL_pwm_mgap_num;
;;;3194   				tTempPWM_TILT_CTL.tBit.pwm_tilt_dum_num = PARAMSET_ROIC_CFGR_PWM_TILT_HOPPFRQ_CTL_pwm_dum_num + PARAMSET_ROIC_CFGR_PWM_TILT_HOPPFRQ_CTL_pwm_set_num;
;;;3195   				MSPI_RegisterWrite((uint32_t)(0x0038), tTempPWM_TILT_CTL.ulBulk);
;;;3196   			}
;;;3197   	#endif /* USED_PEN_MODE_OPERATION */
;;;3198   
;;;3199   			SW92513_Reg_AFESetting(SM_FINGER_ONLY_ACTIVE_FRQ_HOP1_MODE);
;;;3200   //			SW92513_Reg_CRTuneSetting(CRTUNE_TYPE_HOPP1_FRQ);
;;;3201   //			_gT(_GPIO_TP_INTR);
;;;3202   			break;
;;;3203   		}
;;;3204   #endif /* USED_NOISE_HOPPING_FREQ */
;;;3205   	}
;;;3206   }
000006  bf24              ITT      CS
000008  b002              ADDCS    sp,sp,#8
00000a  bd10              POPCS    {r4,pc}
00000c  e8dff000          TBB      [pc,r0]
000010  fd09fdfd          DCB      0xfd,0x09,0xfd,0xfd
000014  fdfdfdfd          DCB      0xfd,0xfd,0xfd,0xfd
000018  fdfdfd0f          DCB      0xfd,0xfd,0xfd,0x0f
00001c  fd80fdfd          DCB      0xfd,0x80,0xfd,0xfd
000020  f7fc              DCB      0xf7,0xfc
000022  2000              MOVS     r0,#0                 ;2849
000024  b002              ADD      sp,sp,#8              ;2849
000026  e8bd4010          POP      {r4,lr}               ;2849
00002a  f7ffbffe          B.W      SW92513_Reg_CRTuneSetting
00002e  4ca2              LDR      r4,|L11.696|
000030  6820              LDR      r0,[r4,#0]            ;2849  ; s_pktmoduleSRICCommonConf
000032  f8d010d8          LDR      r1,[r0,#0xd8]         ;2849
000036  20c4              MOVS     r0,#0xc4              ;2849
000038  f7fffffe          BL       MSPI_RegisterWrite
00003c  6820              LDR      r0,[r4,#0]            ;2849  ; s_pktmoduleSRICCommonConf
00003e  f8d010e4          LDR      r1,[r0,#0xe4]         ;2849
000042  20c8              MOVS     r0,#0xc8              ;2849
000044  f7fffffe          BL       MSPI_RegisterWrite
000048  6820              LDR      r0,[r4,#0]            ;2849  ; s_pktmoduleSRICCommonConf
00004a  f8d010f0          LDR      r1,[r0,#0xf0]         ;2849
00004e  20cc              MOVS     r0,#0xcc              ;2849
000050  f7fffffe          BL       MSPI_RegisterWrite
000054  6820              LDR      r0,[r4,#0]            ;2849  ; s_pktmoduleSRICCommonConf
000056  f8d010fc          LDR      r1,[r0,#0xfc]         ;2849
00005a  20d0              MOVS     r0,#0xd0              ;2849
00005c  f7fffffe          BL       MSPI_RegisterWrite
000060  f1040174          ADD      r1,r4,#0x74           ;2924
000064  f44f7016          MOV      r0,#0x258             ;2924
000068  f7fffffe          BL       MSPI_RegisterMultiWrite
00006c  f104018c          ADD      r1,r4,#0x8c           ;2925
000070  f44f7056          MOV      r0,#0x358             ;2925
000074  f7fffffe          BL       MSPI_RegisterMultiWrite
000078  f10401a4          ADD      r1,r4,#0xa4           ;2927
00007c  f44f7007          MOV      r0,#0x21c             ;2927
000080  f7fffffe          BL       MSPI_RegisterMultiWrite
000084  f10401b4          ADD      r1,r4,#0xb4           ;2928
000088  f44f7008          MOV      r0,#0x220             ;2928
00008c  f7fffffe          BL       MSPI_RegisterMultiWrite
000090  f10401cc          ADD      r1,r4,#0xcc           ;2929
000094  f44f7009          MOV      r0,#0x224             ;2929
000098  f7fffffe          BL       MSPI_RegisterMultiWrite
00009c  f10401e4          ADD      r1,r4,#0xe4           ;2931
0000a0  f44f7047          MOV      r0,#0x31c             ;2931
0000a4  f7fffffe          BL       MSPI_RegisterMultiWrite
0000a8  f10401fc          ADD      r1,r4,#0xfc           ;2932
0000ac  f44f7048          MOV      r0,#0x320             ;2932
0000b0  f7fffffe          BL       MSPI_RegisterMultiWrite
0000b4  f504718a          ADD      r1,r4,#0x114          ;2933
0000b8  f44f7049          MOV      r0,#0x324             ;2933
0000bc  f7fffffe          BL       MSPI_RegisterMultiWrite
0000c0  1d20              ADDS     r0,r4,#4              ;2938
0000c2  6801              LDR      r1,[r0,#0]            ;2938  ; tIdle_CH_MUX_NUM
0000c4  201c              MOVS     r0,#0x1c              ;2938
0000c6  f7fffffe          BL       MSPI_RegisterWrite
0000ca  f1040008          ADD      r0,r4,#8              ;2939
0000ce  6801              LDR      r1,[r0,#0]            ;2939  ; tIdle_FIG_MUX_CFG_00
0000d0  20b8              MOVS     r0,#0xb8              ;2939
0000d2  f7fffffe          BL       MSPI_RegisterWrite
0000d6  f104000c          ADD      r0,r4,#0xc            ;2940
0000da  6801              LDR      r1,[r0,#0]            ;2940  ; tIdle_PWM_FIG_CTL
0000dc  202c              MOVS     r0,#0x2c              ;2940
0000de  f7fffffe          BL       MSPI_RegisterWrite
0000e2  f1040010          ADD      r0,r4,#0x10           ;2941
0000e6  6801              LDR      r1,[r0,#0]            ;2941  ; tIdle_R0_LHB_MUX_CTL
0000e8  f44f7006          MOV      r0,#0x218             ;2941
0000ec  f7fffffe          BL       MSPI_RegisterWrite
0000f0  f1040014          ADD      r0,r4,#0x14           ;2942
0000f4  6801              LDR      r1,[r0,#0]            ;2942  ; tIdle_R1_LHB_MUX_CTL
0000f6  f44f7046          MOV      r0,#0x318             ;2942
0000fa  f7fffffe          BL       MSPI_RegisterWrite
0000fe  f1040018          ADD      r0,r4,#0x18           ;2943
000102  6801              LDR      r1,[r0,#0]            ;2943  ; tIdle_SMPL_CTL
000104  b002              ADD      sp,sp,#8              ;2943
000106  205c              MOVS     r0,#0x5c              ;2943
000108  e8bd4010          POP      {r4,lr}               ;2943
00010c  f7ffbffe          B.W      MSPI_RegisterWrite
000110  4c69              LDR      r4,|L11.696|
000112  6820              LDR      r0,[r4,#0]            ;2943  ; s_pktmoduleSRICCommonConf
000114  f8d010d0          LDR      r1,[r0,#0xd0]         ;2943
000118  20c4              MOVS     r0,#0xc4              ;2943
00011a  f7fffffe          BL       MSPI_RegisterWrite
00011e  6820              LDR      r0,[r4,#0]            ;2943  ; s_pktmoduleSRICCommonConf
000120  f8d010dc          LDR      r1,[r0,#0xdc]         ;2943
000124  20c8              MOVS     r0,#0xc8              ;2943
000126  f7fffffe          BL       MSPI_RegisterWrite
00012a  6820              LDR      r0,[r4,#0]            ;2943  ; s_pktmoduleSRICCommonConf
00012c  f8d010e8          LDR      r1,[r0,#0xe8]         ;2943
000130  20cc              MOVS     r0,#0xcc              ;2943
000132  f7fffffe          BL       MSPI_RegisterWrite
000136  6820              LDR      r0,[r4,#0]            ;2943  ; s_pktmoduleSRICCommonConf
000138  f8d010f4          LDR      r1,[r0,#0xf4]         ;2943
00013c  20d0              MOVS     r0,#0xd0              ;2943
00013e  f7fffffe          BL       MSPI_RegisterWrite
000142  6820              LDR      r0,[r4,#0]            ;3034  ; s_pktmoduleSRICCommonConf
000144  f5007111          ADD      r1,r0,#0x244          ;3034
000148  f44f7016          MOV      r0,#0x258             ;3034
00014c  f7fffffe          BL       MSPI_RegisterMultiWrite
000150  6820              LDR      r0,[r4,#0]            ;3035  ; s_pktmoduleSRICCommonConf
000152  f5007172          ADD      r1,r0,#0x3c8          ;3035
000156  f44f7056          MOV      r0,#0x358             ;3035
00015a  f7fffffe          BL       MSPI_RegisterMultiWrite
00015e  6820              LDR      r0,[r4,#0]            ;3037  ; s_pktmoduleSRICCommonConf
000160  f50071aa          ADD      r1,r0,#0x154          ;3037
000164  f44f7007          MOV      r0,#0x21c             ;3037
000168  f7fffffe          BL       MSPI_RegisterMultiWrite
00016c  6820              LDR      r0,[r4,#0]            ;3038  ; s_pktmoduleSRICCommonConf
00016e  f50071b2          ADD      r1,r0,#0x164          ;3038
000172  f44f7008          MOV      r0,#0x220             ;3038
000176  f7fffffe          BL       MSPI_RegisterMultiWrite
00017a  6820              LDR      r0,[r4,#0]            ;3039  ; s_pktmoduleSRICCommonConf
00017c  f50071ba          ADD      r1,r0,#0x174          ;3039
000180  f44f7009          MOV      r0,#0x224             ;3039
000184  f7fffffe          BL       MSPI_RegisterMultiWrite
000188  6820              LDR      r0,[r4,#0]            ;3041  ; s_pktmoduleSRICCommonConf
00018a  f5007136          ADD      r1,r0,#0x2d8          ;3041
00018e  f44f7047          MOV      r0,#0x31c             ;3041
000192  f7fffffe          BL       MSPI_RegisterMultiWrite
000196  6820              LDR      r0,[r4,#0]            ;3042  ; s_pktmoduleSRICCommonConf
000198  f500713a          ADD      r1,r0,#0x2e8          ;3042
00019c  f44f7048          MOV      r0,#0x320             ;3042
0001a0  f7fffffe          BL       MSPI_RegisterMultiWrite
0001a4  6820              LDR      r0,[r4,#0]            ;3043  ; s_pktmoduleSRICCommonConf
0001a6  f500713e          ADD      r1,r0,#0x2f8          ;3043
0001aa  f44f7049          MOV      r0,#0x324             ;3043
0001ae  f7fffffe          BL       MSPI_RegisterMultiWrite
0001b2  6820              LDR      r0,[r4,#0]            ;3048  ; s_pktmoduleSRICCommonConf
0001b4  69c1              LDR      r1,[r0,#0x1c]         ;3048
0001b6  201c              MOVS     r0,#0x1c              ;3048
0001b8  f7fffffe          BL       MSPI_RegisterWrite
0001bc  6820              LDR      r0,[r4,#0]            ;3049  ; s_pktmoduleSRICCommonConf
0001be  f8d010c4          LDR      r1,[r0,#0xc4]         ;3049
0001c2  20b8              MOVS     r0,#0xb8              ;3049
0001c4  f7fffffe          BL       MSPI_RegisterWrite
0001c8  6820              LDR      r0,[r4,#0]            ;3050  ; s_pktmoduleSRICCommonConf
0001ca  6b81              LDR      r1,[r0,#0x38]         ;3050
0001cc  202c              MOVS     r0,#0x2c              ;3050
0001ce  f7fffffe          BL       MSPI_RegisterWrite
0001d2  6820              LDR      r0,[r4,#0]            ;3051  ; s_pktmoduleSRICCommonConf
0001d4  f8d01150          LDR      r1,[r0,#0x150]        ;3051
0001d8  f44f7006          MOV      r0,#0x218             ;3051
0001dc  f7fffffe          BL       MSPI_RegisterWrite
0001e0  6820              LDR      r0,[r4,#0]            ;3052  ; s_pktmoduleSRICCommonConf
0001e2  f8d012d4          LDR      r1,[r0,#0x2d4]        ;3052
0001e6  f44f7046          MOV      r0,#0x318             ;3052
0001ea  f7fffffe          BL       MSPI_RegisterWrite
0001ee  6820              LDR      r0,[r4,#0]            ;3053  ; s_pktmoduleSRICCommonConf
0001f0  6e81              LDR      r1,[r0,#0x68]         ;3053
0001f2  b002              ADD      sp,sp,#8              ;3053
0001f4  205c              MOVS     r0,#0x5c              ;3053
0001f6  e8bd4010          POP      {r4,lr}               ;3053
0001fa  f7ffbffe          B.W      MSPI_RegisterWrite
0001fe  4c2e              LDR      r4,|L11.696|
000200  6820              LDR      r0,[r4,#0]            ;3135  ; s_pktmoduleSRICCommonConf
000202  6b81              LDR      r1,[r0,#0x38]         ;3135
000204  202c              MOVS     r0,#0x2c              ;3135
000206  e001              B        |L11.524|
000208  e00e              B        |L11.552|
00020a  e053              B        |L11.692|
                  |L11.524|
00020c  f7fffffe          BL       MSPI_RegisterWrite
000210  6820              LDR      r0,[r4,#0]            ;3137  ; s_pktmoduleSRICCommonConf
000212  6bc1              LDR      r1,[r0,#0x3c]         ;3137
000214  2030              MOVS     r0,#0x30              ;3137
000216  f7fffffe          BL       MSPI_RegisterWrite
00021a  b002              ADD      sp,sp,#8              ;3145
00021c  f2410003          MOV      r0,#0x1003            ;3145
000220  e8bd4010          POP      {r4,lr}               ;3145
000224  f7ffbffe          B.W      SW92513_Reg_AFESetting
                  |L11.552|
000228  f89d0004          LDRB     r0,[sp,#4]            ;3154
00022c  f020003f          BIC      r0,r0,#0x3f           ;3154
000230  300e              ADDS     r0,r0,#0xe            ;3154
000232  f88d0004          STRB     r0,[sp,#4]            ;3154
000236  f8bd0004          LDRH     r0,[sp,#4]            ;3155
00023a  f4207070          BIC      r0,r0,#0x3c0          ;3155
00023e  3040              ADDS     r0,r0,#0x40           ;3155
000240  f8ad0004          STRH     r0,[sp,#4]            ;3155
000244  f89d0005          LDRB     r0,[sp,#5]            ;3156
000248  f02000fc          BIC      r0,r0,#0xfc           ;3156
00024c  3010              ADDS     r0,r0,#0x10           ;3156
00024e  f88d0005          STRB     r0,[sp,#5]            ;3156
000252  9901              LDR      r1,[sp,#4]            ;3157
000254  202c              MOVS     r0,#0x2c              ;3157
000256  f7fffffe          BL       MSPI_RegisterWrite
00025a  f89d0000          LDRB     r0,[sp,#0]            ;3161
00025e  f020000f          BIC      r0,r0,#0xf            ;3161
000262  f88d0000          STRB     r0,[sp,#0]            ;3161
000266  f8bd0000          LDRH     r0,[sp,#0]            ;3162
00026a  f420707c          BIC      r0,r0,#0x3f0          ;3162
00026e  30d0              ADDS     r0,r0,#0xd0           ;3162
000270  f8ad0000          STRH     r0,[sp,#0]            ;3162
000274  f89d0001          LDRB     r0,[sp,#1]            ;3163
000278  f02000fc          BIC      r0,r0,#0xfc           ;3163
00027c  3034              ADDS     r0,r0,#0x34           ;3163
00027e  f88d0001          STRB     r0,[sp,#1]            ;3163
000282  f89d0002          LDRB     r0,[sp,#2]            ;3164
000286  f020000f          BIC      r0,r0,#0xf            ;3164
00028a  1c40              ADDS     r0,r0,#1              ;3164
00028c  f88d0002          STRB     r0,[sp,#2]            ;3164
000290  f8bd0002          LDRH     r0,[sp,#2]            ;3165
000294  f420707c          BIC      r0,r0,#0x3f0          ;3165
000298  3040              ADDS     r0,r0,#0x40           ;3165
00029a  f8ad0002          STRH     r0,[sp,#2]            ;3165
00029e  9900              LDR      r1,[sp,#0]            ;3166
0002a0  2030              MOVS     r0,#0x30              ;3166
0002a2  f7fffffe          BL       MSPI_RegisterWrite
0002a6  b002              ADD      sp,sp,#8              ;3199
0002a8  f2410005          MOV      r0,#0x1005            ;3199
0002ac  e8bd4010          POP      {r4,lr}               ;3199
0002b0  f7ffbffe          B.W      SW92513_Reg_AFESetting
                  |L11.692|
0002b4  b002              ADD      sp,sp,#8
0002b6  bd10              POP      {r4,pc}
;;;3207   
                          ENDP

                  |L11.696|
                          DCD      ||.data||

                          AREA ||.bss||, DATA, NOINIT, ALIGN=0

                  tTestProductROICBuf
                          %        16

                          AREA ||.data||, DATA, ALIGN=2

                  s_pktmoduleSRICCommonConf
                          DCD      0x00000000
                  tIdle_CH_MUX_NUM
000004  1cc70500          DCB      0x1c,0xc7,0x05,0x00
                  tIdle_FIG_MUX_CFG_00
000008  cb000000          DCB      0xcb,0x00,0x00,0x00
                  tIdle_PWM_FIG_CTL
00000c  48100000          DCB      0x48,0x10,0x00,0x00
                  tIdle_R0_LHB_MUX_CTL
000010  5555f501          DCB      0x55,0x55,0xf5,0x01
                  tIdle_R1_LHB_MUX_CTL
000014  5555f501          DCB      0x55,0x55,0xf5,0x01
                  tIdle_SMPL_CTL
000018  0ac50000          DCB      0x0a,0xc5,0x00,0x00
                  tSW92513_HoppFreq_AFEReg_CFG
00001c  26262e00          DCB      0x26,0x26,0x2e,0x00
000020  04050f00          DCB      0x04,0x05,0x0f,0x00
000024  17171900          DCB      0x17,0x17,0x19,0x00
000028  23232600          DCB      0x23,0x23,0x26,0x00
00002c  16161700          DCB      0x16,0x16,0x17,0x00
000030  22222600          DCB      0x22,0x22,0x26,0x00
000034  83c10000          DCB      0x83,0xc1,0x00,0x00
000038  240a2800          DCB      0x24,0x0a,0x28,0x00
00003c  180f1e00          DCB      0x18,0x0f,0x1e,0x00
000040  18021e00          DCB      0x18,0x02,0x1e,0x00
000044  1f1f2800          DCB      0x1f,0x1f,0x28,0x00
000048  14141e00          DCB      0x14,0x14,0x1e,0x00
00004c  1b1b2430          DCB      0x1b,0x1b,0x24,0x30
000050  020a0f00          DCB      0x02,0x0a,0x0f,0x00
000054  24242c00          DCB      0x24,0x24,0x2c,0x00
000058  24241a00          DCB      0x24,0x24,0x1a,0x00
00005c  12181900          DCB      0x12,0x18,0x19,0x00
000060  050c1100          DCB      0x05,0x0c,0x11,0x00
000064  050c0a00          DCB      0x05,0x0c,0x0a,0x00
000068  12181e00          DCB      0x12,0x18,0x1e,0x00
00006c  10141800          DCB      0x10,0x14,0x18,0x00
000070  060e1c00          DCB      0x06,0x0e,0x1c,0x00
                  t_IDLE_R0_CR_GTUNE1
000074  12000000          DCB      0x12,0x00,0x00,0x00
000078  12000000          DCB      0x12,0x00,0x00,0x00
00007c  12000000          DCB      0x12,0x00,0x00,0x00
000080  12000000          DCB      0x12,0x00,0x00,0x00
                          %        8
                  t_IDLE_R1_CR_GTUNE1
00008c  12000000          DCB      0x12,0x00,0x00,0x00
000090  12000000          DCB      0x12,0x00,0x00,0x00
000094  12000000          DCB      0x12,0x00,0x00,0x00
000098  12000000          DCB      0x12,0x00,0x00,0x00
                          %        8
                  tIDLE_R0_CR_R1G_MUX1_2
0000a4  a90c5406          DCB      0xa9,0x0c,0x54,0x06
0000a8  a8904408          DCB      0xa8,0x90,0x44,0x08
0000ac  e9107508          DCB      0xe9,0x10,0x75,0x08
0000b0  a4105208          DCB      0xa4,0x10,0x52,0x08
                  tIDLE_R0_CR_R2G_MUX1_2
0000b4  a98c4304          DCB      0xa9,0x8c,0x43,0x04
0000b8  a6905206          DCB      0xa6,0x90,0x52,0x06
0000bc  ca105406          DCB      0xca,0x10,0x54,0x06
0000c0  a7905206          DCB      0xa7,0x90,0x52,0x06
                          %        8
                  tIDLE_R0_CR_R3G_MUX1_2
0000cc  a5944108          DCB      0xa5,0x94,0x41,0x08
0000d0  a6103204          DCB      0xa6,0x10,0x32,0x04
0000d4  c6105206          DCB      0xc6,0x10,0x52,0x06
0000d8  a8904206          DCB      0xa8,0x90,0x42,0x06
                          %        8
                  tIDLE_R1_CR_R1G_MUX1_2
0000e4  a6105308          DCB      0xa6,0x10,0x53,0x08
0000e8  a790640a          DCB      0xa7,0x90,0x64,0x0a
0000ec  a514530c          DCB      0xa5,0x14,0x53,0x0c
0000f0  aa14650a          DCB      0xaa,0x14,0x65,0x0a
                          %        8
                  tIDLE_R1_CR_R2G_MUX1_2
0000fc  a6904208          DCB      0xa6,0x90,0x42,0x08
000100  c8905306          DCB      0xc8,0x90,0x53,0x06
000104  a78c4206          DCB      0xa7,0x8c,0x42,0x06
000108  ca145408          DCB      0xca,0x14,0x54,0x08
                          %        8
                  tIDLE_R1_CR_R3G_MUX1_2
000114  86142206          DCB      0x86,0x14,0x22,0x06
000118  c9905306          DCB      0xc9,0x90,0x53,0x06
00011c  a9942208          DCB      0xa9,0x94,0x22,0x08
000120  c914530a          DCB      0xc9,0x14,0x53,0x0a
                          %        8

                          AREA ||area_number.16||, DATA, ALIGN=0

                          EXPORTAS ||area_number.16||, ||.data||
                  t_IDLE_LHB_MUX_NUM
000000  11170707          DCB      0x11,0x17,0x07,0x07

                          AREA ||area_number.17||, DATA, ALIGN=0

                          EXPORTAS ||area_number.17||, ||.data||
                  tIdle_PWM_PEN_POS_CTL
000000  701c4100          DCB      0x70,0x1c,0x41,0x00

;*** Start embedded assembler ***

#line 1 "..\\..\\Module\\SRIC\\ROIC\\SW92513\\roic_ctrl_sw92513.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___19_roic_ctrl_sw92513_c_24d30887____REV16|
#line 388 "..\\..\\Hal\\system\\CMSIS\\cmsis_armcc.h"
|__asm___19_roic_ctrl_sw92513_c_24d30887____REV16| PROC
#line 389

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___19_roic_ctrl_sw92513_c_24d30887____REVSH|
#line 402
|__asm___19_roic_ctrl_sw92513_c_24d30887____REVSH| PROC
#line 403

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___19_roic_ctrl_sw92513_c_24d30887____RRX|
#line 587
|__asm___19_roic_ctrl_sw92513_c_24d30887____RRX| PROC
#line 588

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
