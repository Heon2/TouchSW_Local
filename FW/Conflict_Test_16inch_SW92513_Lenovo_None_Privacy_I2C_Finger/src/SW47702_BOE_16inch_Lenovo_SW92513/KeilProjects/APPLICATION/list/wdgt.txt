; generated by Component: ARM Compiler 5.06 update 4 (build 422) Tool: ArmCC [4d3604]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o.\bin\wdgt.o --asm_dir=.\list\ --list_dir=.\list\ --depend=.\bin\wdgt.d --cpu=Cortex-M3 --apcs=interwork -O3 -Otime --diag_suppress=9931 -I..\..\App -I..\..\App\Algorithm -I..\..\App\Algorithm\Baseline -I..\..\App\Algorithm\Coord -I..\..\App\Algorithm\Label -I..\..\App\Algorithm\Noise -I..\..\Env -I..\..\Hal -I..\..\Hal\system -I..\..\Hal\system\CMSIS -I..\..\Hal\gpio -I..\..\Hal\i2c -I..\..\Hal\pwmdrv -I..\..\Hal\timer -I..\..\Hal\wdgt -I..\..\Hal\spi -I..\..\Hal\dspA -I..\..\Hal\dspB -I..\..\Hal\scrb -I..\..\Hal\usb -I..\..\Hal\usb\FWOTG210_F000 -I..\..\Hal\usb\FWOTG210_F000\OTG_peripheral -I..\..\Hal\usb\FWOTG210_F000\OTG_peripheral_Config -I..\..\Hal\gdma -I..\..\Hal\flitf -I..\..\Module -I..\..\Module\SRIC -I..\..\Protocol -I..\..\Tool_BinCvt\BinToolApp\src -I..\..\Boot -I..\..\Parameter -I..\..\Hal\dbgserial -I..\..\Hal\tlvds -I..\..\Tuning_process -I.\RTE\_MFTP_FPGA -IC:\Keil_v5\ARM\PACK\ARM\CMSIS\5.0.1\Device\ARM\ARMCM3\Include -IC:\Keil_v5\ARM\CMSIS\Include -D__UVISION_VERSION=523 -DARMCM3 -D_USE_APP_80K_ --wchar32 --omf_browse=.\bin\wdgt.crf ..\..\Hal\wdgt\wdgt.c]
                          THUMB

                          AREA ||i.Hal_Kick_DOG||, CODE, READONLY, ALIGN=1

                  Hal_Kick_DOG PROC
;;;73     
;;;74     void Hal_Kick_DOG(void)
000000  f04f4180          MOV      r1,#0x40000000
;;;75     {
;;;76     	WDT->WDOG_LOAD = WDGT_LOAD_COUNT_NUM;
000004  f06f407f          MVN      r0,#0xff000000
000008  f8c10184          STR      r0,[r1,#0x184]
;;;77     }
00000c  4770              BX       lr
;;;78     
                          ENDP


                          AREA ||i.Hal_Long_Kick_DOG||, CODE, READONLY, ALIGN=1

                  Hal_Long_Kick_DOG PROC
;;;78     
;;;79     void Hal_Long_Kick_DOG(void)
000000  f04f4180          MOV      r1,#0x40000000
;;;80     {
;;;81     	WDT->WDOG_LOAD = WDGT_LONG_LOAD_COUNT_NUM;
000004  f04f30ff          MOV      r0,#0xffffffff
000008  f8c10184          STR      r0,[r1,#0x184]
;;;82     }
00000c  4770              BX       lr
;;;83     
                          ENDP


                          AREA ||i.Hal_WDT_DeInit||, CODE, READONLY, ALIGN=2

                  Hal_WDT_DeInit PROC
;;;90     
;;;91     void Hal_WDT_DeInit(void)
000000  f04f4180          MOV      r1,#0x40000000
000004  2000              MOVS     r0,#0
000006  f8c1017c          STR      r0,[r1,#0x17c]
00000a  f8d12180          LDR      r2,[r1,#0x180]
00000e  f0220201          BIC      r2,r2,#1
000012  f8c12180          STR      r2,[r1,#0x180]
000016  f04f21e0          MOV      r1,#0xe000e000
00001a  2201              MOVS     r2,#1
00001c  f8c12180          STR      r2,[r1,#0x180]
000020  f8c12280          STR      r2,[r1,#0x280]
000024  4902              LDR      r1,|L3.48|
;;;92     {
;;;93     	WDGT_DeInitialize();
;;;94     	wdt_init = FALSE;
000026  6008              STR      r0,[r1,#0]  ; Fncp_WDGT_IRQHandler
000028  4902              LDR      r1,|L3.52|
00002a  7008              STRB     r0,[r1,#0]
;;;95     }
00002c  4770              BX       lr
;;;96     
                          ENDP

00002e  0000              DCW      0x0000
                  |L3.48|
                          DCD      Fncp_WDGT_IRQHandler
                  |L3.52|
                          DCD      ||.data||

                          AREA ||i.Hal_WDT_ForceReset||, CODE, READONLY, ALIGN=2

                  Hal_WDT_ForceReset PROC
;;;96     
;;;97     void Hal_WDT_ForceReset(void)
000000  4915              LDR      r1,|L4.88|
000002  4814              LDR      r0,|L4.84|
000004  6008              STR      r0,[r1,#0]  ; Fncp_WDGT_IRQHandler
000006  f04f20e0          MOV      r0,#0xe000e000
00000a  2101              MOVS     r1,#1
00000c  f8c01280          STR      r1,[r0,#0x280]
000010  22e0              MOVS     r2,#0xe0
000012  f8802400          STRB     r2,[r0,#0x400]
000016  f8c01100          STR      r1,[r0,#0x100]
00001a  f04f4080          MOV      r0,#0x40000000
00001e  f06f417f          MVN      r1,#0xff000000
000022  f8c01184          STR      r1,[r0,#0x184]
000026  f8d0117c          LDR      r1,[r0,#0x17c]
00002a  f0410101          ORR      r1,r1,#1
00002e  f8c0117c          STR      r1,[r0,#0x17c]
000032  f8d0117c          LDR      r1,[r0,#0x17c]
000036  f0410102          ORR      r1,r1,#2
00003a  f8c0117c          STR      r1,[r0,#0x17c]
00003e  f8d01180          LDR      r1,[r0,#0x180]
000042  f0410101          ORR      r1,r1,#1
000046  f8c01180          STR      r1,[r0,#0x180]
;;;98     {
;;;99     	WDGT_Initialize();
;;;100    	WDT->WDOG_LOAD = 10;
00004a  210a              MOVS     r1,#0xa
00004c  f8c01184          STR      r1,[r0,#0x184]
                  |L4.80|
;;;101    	while(1);
000050  e7fe              B        |L4.80|
;;;102    }
                          ENDP

000052  0000              DCW      0x0000
                  |L4.84|
                          DCD      WDGT_InterruptHandler
                  |L4.88|
                          DCD      Fncp_WDGT_IRQHandler

                          AREA ||i.Hal_WDT_Init||, CODE, READONLY, ALIGN=2

                  Hal_WDT_Init PROC
;;;84     __IO bool_t wdt_init = FALSE;
;;;85     void Hal_WDT_Init(void)
000000  4914              LDR      r1,|L5.84|
000002  4813              LDR      r0,|L5.80|
000004  6008              STR      r0,[r1,#0]  ; Fncp_WDGT_IRQHandler
000006  f04f20e0          MOV      r0,#0xe000e000
00000a  2101              MOVS     r1,#1
00000c  f8c01280          STR      r1,[r0,#0x280]
000010  22e0              MOVS     r2,#0xe0
000012  f8802400          STRB     r2,[r0,#0x400]
000016  f8c01100          STR      r1,[r0,#0x100]
00001a  0788              LSLS     r0,r1,#30
00001c  f06f427f          MVN      r2,#0xff000000
000020  f8c02184          STR      r2,[r0,#0x184]
000024  f8d0217c          LDR      r2,[r0,#0x17c]
000028  f0420201          ORR      r2,r2,#1
00002c  f8c0217c          STR      r2,[r0,#0x17c]
000030  f8d0217c          LDR      r2,[r0,#0x17c]
000034  f0420202          ORR      r2,r2,#2
000038  f8c0217c          STR      r2,[r0,#0x17c]
00003c  f8d02180          LDR      r2,[r0,#0x180]
000040  f0420201          ORR      r2,r2,#1
000044  f8c02180          STR      r2,[r0,#0x180]
;;;86     {
;;;87     	WDGT_Initialize();
;;;88     	wdt_init = TRUE;
000048  4803              LDR      r0,|L5.88|
00004a  7001              STRB     r1,[r0,#0]
;;;89     }
00004c  4770              BX       lr
;;;90     
                          ENDP

00004e  0000              DCW      0x0000
                  |L5.80|
                          DCD      WDGT_InterruptHandler
                  |L5.84|
                          DCD      Fncp_WDGT_IRQHandler
                  |L5.88|
                          DCD      ||.data||

                          AREA ||i.WDGT_DeInitialize||, CODE, READONLY, ALIGN=2

                  WDGT_DeInitialize PROC
;;;63     
;;;64     void WDGT_DeInitialize(void)
000000  f04f4080          MOV      r0,#0x40000000
;;;65     {
;;;66     	WDT->WDOG_CONTROL.w = 0;
000004  2100              MOVS     r1,#0
000006  f8c0117c          STR      r1,[r0,#0x17c]
;;;67     	WDT->WDOG_RSTCTRL.tBit.watchdog_reset_en = 0;
00000a  f8d02180          LDR      r2,[r0,#0x180]
00000e  f0220201          BIC      r2,r2,#1
000012  f8c02180          STR      r2,[r0,#0x180]
000016  f04f20e0          MOV      r0,#0xe000e000
00001a  2201              MOVS     r2,#1
00001c  f8c02180          STR      r2,[r0,#0x180]
000020  f8c02280          STR      r2,[r0,#0x280]
;;;68     
;;;69     	NVIC_DisableIRQ(WDGT_IRQn);
;;;70     	NVIC_ClearPendingIRQ(WDGT_IRQn);
;;;71     	Fncp_WDGT_IRQHandler = NULL;
000024  4801              LDR      r0,|L6.44|
000026  6001              STR      r1,[r0,#0]  ; Fncp_WDGT_IRQHandler
;;;72     }
000028  4770              BX       lr
;;;73     
                          ENDP

00002a  0000              DCW      0x0000
                  |L6.44|
                          DCD      Fncp_WDGT_IRQHandler

                          AREA ||i.WDGT_Initialize||, CODE, READONLY, ALIGN=2

                  WDGT_Initialize PROC
;;;47     
;;;48     void WDGT_Initialize(void)
000000  4913              LDR      r1,|L7.80|
;;;49     {
;;;50     	Fncp_WDGT_IRQHandler = &WDGT_InterruptHandler;
000002  4812              LDR      r0,|L7.76|
000004  6008              STR      r0,[r1,#0]  ; Fncp_WDGT_IRQHandler
000006  f04f20e0          MOV      r0,#0xe000e000
00000a  2101              MOVS     r1,#1
00000c  f8c01280          STR      r1,[r0,#0x280]
000010  22e0              MOVS     r2,#0xe0
000012  f8802400          STRB     r2,[r0,#0x400]
000016  f8c01100          STR      r1,[r0,#0x100]
;;;51     
;;;52     	NVIC_ClearPendingIRQ(WDGT_IRQn);
;;;53     	NVIC_SetPriority(WDGT_IRQn, WDGT_IRQn_Priority);
;;;54     	NVIC_EnableIRQ(WDGT_IRQn);
;;;55     
;;;56     	WDT->WDOG_LOAD = WDGT_LOAD_COUNT_NUM;//0xFFFFFFFF;
00001a  f04f4080          MOV      r0,#0x40000000
00001e  f06f417f          MVN      r1,#0xff000000
000022  f8c01184          STR      r1,[r0,#0x184]
;;;57     	
;;;58     	WDT->WDOG_CONTROL.tBit.wdt_int_en = 1;       
000026  f8d0117c          LDR      r1,[r0,#0x17c]
00002a  f0410101          ORR      r1,r1,#1
00002e  f8c0117c          STR      r1,[r0,#0x17c]
;;;59     	WDT->WDOG_CONTROL.tBit.wdt_rst_en = 1;       
000032  f8d0117c          LDR      r1,[r0,#0x17c]
000036  f0410102          ORR      r1,r1,#2
00003a  f8c0117c          STR      r1,[r0,#0x17c]
;;;60     	
;;;61     	WDT->WDOG_RSTCTRL.tBit.watchdog_reset_en = 1;
00003e  f8d01180          LDR      r1,[r0,#0x180]
000042  f0410101          ORR      r1,r1,#1
000046  f8c01180          STR      r1,[r0,#0x180]
;;;62     }
00004a  4770              BX       lr
;;;63     
                          ENDP

                  |L7.76|
                          DCD      WDGT_InterruptHandler
                  |L7.80|
                          DCD      Fncp_WDGT_IRQHandler

                          AREA ||i.WDGT_InterruptHandler||, CODE, READONLY, ALIGN=2

                  WDGT_InterruptHandler PROC
;;;35     
;;;36     void WDGT_InterruptHandler(void)
000000  480e              LDR      r0,|L8.60|
;;;37     {
;;;38     	if(I2C->I2C_GLB_SR.tBit.IspMode)		//	I2C slave case??
000002  f8d00094          LDR      r0,[r0,#0x94]
000006  f0100f04          TST      r0,#4
;;;39     	{
;;;40     		Hal_WDT_DeInit();
;;;41     	}
;;;42     	else
;;;43     	{
;;;44     		// TO_BE_DEFINED watchdog occurred!!!
;;;45     	}
;;;46     }
00000a  bf08              IT       EQ
00000c  4770              BXEQ     lr
00000e  2000              MOVS     r0,#0
000010  f04f4180          MOV      r1,#0x40000000
000014  f8c1017c          STR      r0,[r1,#0x17c]
000018  f8d12180          LDR      r2,[r1,#0x180]
00001c  f0220201          BIC      r2,r2,#1
000020  f8c12180          STR      r2,[r1,#0x180]
000024  f04f21e0          MOV      r1,#0xe000e000
000028  2201              MOVS     r2,#1
00002a  f8c12180          STR      r2,[r1,#0x180]
00002e  f8c12280          STR      r2,[r1,#0x280]
000032  4903              LDR      r1,|L8.64|
000034  6008              STR      r0,[r1,#0]  ; Fncp_WDGT_IRQHandler
000036  4903              LDR      r1,|L8.68|
000038  7008              STRB     r0,[r1,#0]
00003a  4770              BX       lr
;;;47     
                          ENDP

                  |L8.60|
                          DCD      0x40007000
                  |L8.64|
                          DCD      Fncp_WDGT_IRQHandler
                  |L8.68|
                          DCD      ||.data||

                          AREA ||.data||, DATA, ALIGN=0

                  wdt_init
000000  00                DCB      0x00

;*** Start embedded assembler ***

#line 1 "..\\..\\Hal\\wdgt\\wdgt.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___6_wdgt_c_2321e174____REV16|
#line 388 "..\\..\\Hal\\system\\CMSIS\\cmsis_armcc.h"
|__asm___6_wdgt_c_2321e174____REV16| PROC
#line 389

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___6_wdgt_c_2321e174____REVSH|
#line 402
|__asm___6_wdgt_c_2321e174____REVSH| PROC
#line 403

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___6_wdgt_c_2321e174____RRX|
#line 587
|__asm___6_wdgt_c_2321e174____RRX| PROC
#line 588

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
