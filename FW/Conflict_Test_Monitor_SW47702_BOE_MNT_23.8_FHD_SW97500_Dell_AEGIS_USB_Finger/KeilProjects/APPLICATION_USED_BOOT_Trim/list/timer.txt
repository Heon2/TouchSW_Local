; generated by Component: ARM Compiler 5.06 update 4 (build 422) Tool: ArmCC [4d3604]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o.\bin\timer.o --asm_dir=.\list\ --list_dir=.\list\ --depend=.\bin\timer.d --cpu=Cortex-M3 --apcs=interwork -O3 -Otime --diag_suppress=9931 -I..\..\App -I..\..\App\Algorithm -I..\..\App\Algorithm\Baseline -I..\..\App\Algorithm\Coord -I..\..\App\Algorithm\Label -I..\..\App\Algorithm\Noise -I..\..\Env -I..\..\Hal -I..\..\Hal\system -I..\..\Hal\system\CMSIS -I..\..\Hal\gpio -I..\..\Hal\i2c -I..\..\Hal\pwmdrv -I..\..\Hal\timer -I..\..\Hal\wdgt -I..\..\Hal\spi -I..\..\Hal\dspA -I..\..\Hal\dspB -I..\..\Hal\scrb -I..\..\Hal\usb -I..\..\Hal\usb\FWOTG210_F000 -I..\..\Hal\usb\FWOTG210_F000\OTG_peripheral -I..\..\Hal\usb\FWOTG210_F000\OTG_peripheral_Config -I..\..\Hal\gdma -I..\..\Hal\syscfg -I..\..\Hal\flitf -I..\..\Module -I..\..\Module\SRIC -I..\..\Protocol -I..\..\Tool_BinCvt\BinToolApp\src -I..\..\Boot -I..\..\Parameter -I..\..\Hal\dbgserial -I..\..\Hal\tlvds -I..\..\Tuning_process -I.\RTE\_MFTP_FPGA -IC:\Keil_v5\ARM\PACK\ARM\CMSIS\5.0.1\Device\ARM\ARMCM3\Include -IC:\Keil_v5\ARM\CMSIS\Include -D__UVISION_VERSION=523 -DARMCM3 -D_USE_APP_80K_ -D_USE_WITH_BOOT_ --wchar32 --omf_browse=.\bin\timer.crf ..\..\Hal\timer\timer.c]
                          THUMB

                          AREA ||i.TIMER_DeInitialize||, CODE, READONLY, ALIGN=2

                  TIMER_DeInitialize PROC
;;;92     
;;;93     void TIMER_DeInitialize(void)
000000  f04f4180          MOV      r1,#0x40000000
;;;94     {
;;;95         TIMER->TIMER_CTRL.w = 0;
000004  2000              MOVS     r0,#0
000006  f8c1019c          STR      r0,[r1,#0x19c]
00000a  f04f21e0          MOV      r1,#0xe000e000
00000e  2202              MOVS     r2,#2
000010  f8c12180          STR      r2,[r1,#0x180]
000014  f8c12280          STR      r2,[r1,#0x280]
;;;96     
;;;97     	NVIC_DisableIRQ(TIMER_IRQn);
;;;98     	NVIC_ClearPendingIRQ(TIMER_IRQn);
;;;99     	Fncp_TIMER_IRQHandler = NULL;
000018  4901              LDR      r1,|L1.32|
00001a  6008              STR      r0,[r1,#0]  ; Fncp_TIMER_IRQHandler
;;;100    }
00001c  4770              BX       lr
;;;101    
                          ENDP

00001e  0000              DCW      0x0000
                  |L1.32|
                          DCD      Fncp_TIMER_IRQHandler

                          AREA ||i.TIMER_GetLoadCount||, CODE, READONLY, ALIGN=1

                  TIMER_GetLoadCount PROC
;;;263    
;;;264    uint32_t TIMER_GetLoadCount(uint32_t Unit)
000000  0002              MOVS     r2,r0
;;;265    {
;;;266    	uint32_t ulCount = 0;
000002  f04f0000          MOV      r0,#0
;;;267    	switch( Unit ) {
;;;268    	case TIMER_1UNIT: ulCount = TIMER->TIMER_VALUE[0]; break;
000006  f04f4180          MOV      r1,#0x40000000
00000a  bf04              ITT      EQ
00000c  f8d101b8          LDREQ    r0,[r1,#0x1b8]
;;;269    	case TIMER_2UNIT: ulCount = TIMER->TIMER_VALUE[1]; break;
;;;270    	case TIMER_3UNIT: ulCount = TIMER->TIMER_VALUE[2]; break;
;;;271    	case TIMER_4UNIT: ulCount = TIMER->TIMER_VALUE[3]; break;
;;;272    	}
;;;273    
;;;274    	return ulCount;
;;;275    }
000010  4770              BXEQ     lr
000012  2a01              CMP      r2,#1                 ;267
000014  bf04              ITT      EQ                    ;269
000016  f8d101bc          LDREQ    r0,[r1,#0x1bc]        ;269
00001a  4770              BXEQ     lr
00001c  2a02              CMP      r2,#2                 ;267
00001e  bf04              ITT      EQ                    ;270
000020  f8d101c0          LDREQ    r0,[r1,#0x1c0]        ;270
000024  4770              BXEQ     lr
000026  2a03              CMP      r2,#3                 ;267
000028  bf08              IT       EQ                    ;271
00002a  f8d101c4          LDREQ    r0,[r1,#0x1c4]        ;271
00002e  4770              BX       lr
;;;276    
                          ENDP


                          AREA ||i.TIMER_Initialize||, CODE, READONLY, ALIGN=2

                  TIMER_Initialize PROC
;;;73     
;;;74     void TIMER_Initialize(void)
000000  491d              LDR      r1,|L3.120|
;;;75     {
;;;76     	uint32_t ulTimerUnitIdx;
;;;77     
;;;78     	Fncp_TIMER_IRQHandler = &TIMER_InterruptHandler;
000002  481c              LDR      r0,|L3.116|
;;;79     
;;;80     	/*
;;;81     	 * Timer Clock Set 12Mhz
;;;82     	 */
;;;83     	SCRB->SYS_MAINCLK_CFG.tBit.mclkdiv = 0;//12;	//	n+1 divider
000004  6008              STR      r0,[r1,#0]  ; Fncp_TIMER_IRQHandler
000006  f04f4080          MOV      r0,#0x40000000
00000a  f8501f60          LDR      r1,[r0,#0x60]!
00000e  f421417c          BIC      r1,r1,#0xfc00
000012  f8401b60          STR      r1,[r0],#0x60
000016  f04f22e0          MOV      r2,#0xe000e000
00001a  2102              MOVS     r1,#2
00001c  f8c21280          STR      r1,[r2,#0x280]
000020  f1020c01          ADD      r12,r2,#1
000024  23c0              MOVS     r3,#0xc0
000026  f88c3400          STRB     r3,[r12,#0x400]
00002a  f8c21100          STR      r1,[r2,#0x100]
;;;84     
;;;85     	NVIC_ClearPendingIRQ(TIMER_IRQn);
;;;86     	NVIC_SetPriority(TIMER_IRQn, TIMER_IRQn_Priority);
;;;87     	NVIC_EnableIRQ(TIMER_IRQn);
;;;88     
;;;89     	for( ulTimerUnitIdx = 0 ; ulTimerUnitIdx < OPERATION_TIMER_UNITNUM ; ulTimerUnitIdx++ )
;;;90     		TIMER->TIMER_RELOAD[ulTimerUnitIdx].tBit.timer_prev_val = TIMER_CLOCK_DIV_1;
00002e  f8501fe0          LDR      r1,[r0,#0xe0]!
000032  f42101e0          BIC      r1,r1,#0x700000
000036  f8401960          STR      r1,[r0],#-0x60
00003a  6e41              LDR      r1,[r0,#0x64]
00003c  f42101e0          BIC      r1,r1,#0x700000
000040  6641              STR      r1,[r0,#0x64]
000042  6e81              LDR      r1,[r0,#0x68]
000044  f42101e0          BIC      r1,r1,#0x700000
000048  6681              STR      r1,[r0,#0x68]
00004a  6ec1              LDR      r1,[r0,#0x6c]
00004c  f42101e0          BIC      r1,r1,#0x700000
000050  66c1              STR      r1,[r0,#0x6c]
000052  6f01              LDR      r1,[r0,#0x70]
000054  f42101e0          BIC      r1,r1,#0x700000
000058  6701              STR      r1,[r0,#0x70]
00005a  6f41              LDR      r1,[r0,#0x74]
00005c  f42101e0          BIC      r1,r1,#0x700000
000060  6741              STR      r1,[r0,#0x74]
000062  6f81              LDR      r1,[r0,#0x78]
000064  f42101e0          BIC      r1,r1,#0x700000
000068  6781              STR      r1,[r0,#0x78]
00006a  6fc1              LDR      r1,[r0,#0x7c]
00006c  f42101e0          BIC      r1,r1,#0x700000
000070  67c1              STR      r1,[r0,#0x7c]
;;;91     }
000072  4770              BX       lr
;;;92     
                          ENDP

                  |L3.116|
                          DCD      TIMER_InterruptHandler
                  |L3.120|
                          DCD      Fncp_TIMER_IRQHandler

                          AREA ||i.TIMER_InterruptHandler||, CODE, READONLY, ALIGN=2

                  TIMER_InterruptHandler PROC
;;;38     
;;;39     void TIMER_InterruptHandler(void)
000000  b570              PUSH     {r4-r6,lr}
;;;40     {
;;;41     	if(SCRB->SYS_INT_ST.tBit.int_timer0)
000002  f04f4480          MOV      r4,#0x40000000
000006  69a0              LDR      r0,[r4,#0x18]
;;;42     //	if (TIMER->TIMER_STATUS.tBit.timer0_status)
;;;43     	{
;;;44     		ulTimerIRQHandle[TIMER_1UNIT] = 1;
000008  4e1a              LDR      r6,|L4.116|
00000a  f0100f02          TST      r0,#2                 ;41
00000e  f04f0501          MOV      r5,#1
000012  d00b              BEQ      |L4.44|
000014  6035              STR      r5,[r6,#0]  ; ulTimerIRQHandle
;;;45     		if(Fncp_Systick_IRQHandler)
000016  4818              LDR      r0,|L4.120|
000018  6800              LDR      r0,[r0,#0]  ; Fncp_Systick_IRQHandler
00001a  2800              CMP      r0,#0
;;;46     		{
;;;47     			Fncp_Systick_IRQHandler();
00001c  bf18              IT       NE
00001e  4780              BLXNE    r0
;;;48     		}
;;;49     		TIMER->TIMER_INT_CLR.tBit.timer0_int_clr = 1;
000020  f8d401b4          LDR      r0,[r4,#0x1b4]
000024  f0400001          ORR      r0,r0,#1
000028  f8c401b4          STR      r0,[r4,#0x1b4]
                  |L4.44|
;;;50     	}
;;;51     
;;;52     	if(SCRB->SYS_INT_ST.tBit.int_timer1)
00002c  69a0              LDR      r0,[r4,#0x18]
00002e  f0100f04          TST      r0,#4
000032  d006              BEQ      |L4.66|
;;;53     //	if (TIMER->TIMER_STATUS.tBit.timer1_status)
;;;54     	{
;;;55     		ulTimerIRQHandle[TIMER_2UNIT] = 1;
000034  6075              STR      r5,[r6,#4]  ; ulTimerIRQHandle
;;;56     		TIMER->TIMER_INT_CLR.tBit.timer1_int_clr = 1;
000036  f8d401b4          LDR      r0,[r4,#0x1b4]
00003a  f0400002          ORR      r0,r0,#2
00003e  f8c401b4          STR      r0,[r4,#0x1b4]
                  |L4.66|
;;;57     	}
;;;58     
;;;59     	if(SCRB->SYS_INT_ST.tBit.int_timer2)
000042  69a0              LDR      r0,[r4,#0x18]
000044  f0100f08          TST      r0,#8
000048  d006              BEQ      |L4.88|
;;;60     //	if (TIMER->TIMER_STATUS.tBit.timer2_status)
;;;61     	{
;;;62     		ulTimerIRQHandle[TIMER_3UNIT] = 1;
00004a  60b5              STR      r5,[r6,#8]  ; ulTimerIRQHandle
;;;63     		TIMER->TIMER_INT_CLR.tBit.timer2_int_clr = 1;
00004c  f8d401b4          LDR      r0,[r4,#0x1b4]
000050  f0400004          ORR      r0,r0,#4
000054  f8c401b4          STR      r0,[r4,#0x1b4]
                  |L4.88|
;;;64     	}
;;;65     
;;;66     	if(SCRB->SYS_INT_ST.tBit.int_timer3)
000058  69a0              LDR      r0,[r4,#0x18]
00005a  f0100f10          TST      r0,#0x10
;;;67     //	if (TIMER->TIMER_STATUS.tBit.timer3_status)
;;;68     	{
;;;69     		ulTimerIRQHandle[TIMER_4UNIT] = 1;
;;;70     		TIMER->TIMER_INT_CLR.tBit.timer3_int_clr = 1;
;;;71     	}
;;;72     }
00005e  bf08              IT       EQ
000060  bd70              POPEQ    {r4-r6,pc}
000062  60f5              STR      r5,[r6,#0xc]          ;69  ; ulTimerIRQHandle
000064  f8d401b4          LDR      r0,[r4,#0x1b4]        ;70
000068  f0400008          ORR      r0,r0,#8              ;70
00006c  f8c401b4          STR      r0,[r4,#0x1b4]        ;70
000070  bd70              POP      {r4-r6,pc}
;;;73     
                          ENDP

000072  0000              DCW      0x0000
                  |L4.116|
                          DCD      ||.bss||
                  |L4.120|
                          DCD      Fncp_Systick_IRQHandler

                          AREA ||i.TIMER_SetFreeRunningMode||, CODE, READONLY, ALIGN=2

                  TIMER_SetFreeRunningMode PROC
;;;101    
;;;102    void TIMER_SetFreeRunningMode(tTimerOpHandleInfo_t * ptTimerHandle)
000000  f8d0c000          LDR      r12,[r0,#0]
;;;103    {
;;;104    	switch( ptTimerHandle->ulTimerUnit ) {
000004  2200              MOVS     r2,#0
;;;105    	case 0:
;;;106    		TIMER->TIMER_RELOAD[0].tBit.timer_reload_val = ptTimerHandle->ulLoadCount;
;;;107    		SCRB->SYS_CLK_CTL.tBit.timclk0_en = ON;
;;;108    		TIMER->TIMER_CTRL.tBit.int_timer0_en = OFF;
;;;109    		ulTimerOneShotEn[0] = 0;
000006  4b30              LDR      r3,|L5.200|
000008  f04f4180          MOV      r1,#0x40000000        ;106
00000c  f1bc0f00          CMP      r12,#0                ;104
000010  d01d              BEQ      |L5.78|
000012  f1bc0f01          CMP      r12,#1                ;104
000016  d02e              BEQ      |L5.118|
000018  f1bc0f02          CMP      r12,#2                ;104
00001c  d03f              BEQ      |L5.158|
00001e  f1bc0f03          CMP      r12,#3                ;104
;;;110    		break;
;;;111    	case 1:
;;;112    		TIMER->TIMER_RELOAD[1].tBit.timer_reload_val = ptTimerHandle->ulLoadCount;
;;;113    		SCRB->SYS_CLK_CTL.tBit.timclk1_en = ON;
;;;114    		TIMER->TIMER_CTRL.tBit.int_timer1_en = OFF;
;;;115    		ulTimerOneShotEn[1] = 0;
;;;116    		break;
;;;117    	case 2:
;;;118    		TIMER->TIMER_RELOAD[2].tBit.timer_reload_val = ptTimerHandle->ulLoadCount;
;;;119    		SCRB->SYS_CLK_CTL.tBit.timclk2_en = ON;
;;;120    		TIMER->TIMER_CTRL.tBit.int_timer2_en = OFF;
;;;121    		ulTimerOneShotEn[2] = 0;
;;;122    		break;
;;;123    	case 3:
;;;124    		TIMER->TIMER_RELOAD[3].tBit.timer_reload_val = ptTimerHandle->ulLoadCount;
;;;125    		SCRB->SYS_CLK_CTL.tBit.timclk3_en = ON;
;;;126    		TIMER->TIMER_CTRL.tBit.int_timer3_en = OFF;
;;;127    		ulTimerOneShotEn[3] = 0;
;;;128    		break;
;;;129    	}
;;;130    }
000022  bf18              IT       NE
000024  4770              BXNE     lr
000026  f8d0c004          LDR      r12,[r0,#4]           ;124
00002a  f8d101ac          LDR      r0,[r1,#0x1ac]        ;124
00002e  f36c0013          BFI      r0,r12,#0,#20         ;124
000032  f8c101ac          STR      r0,[r1,#0x1ac]        ;124
000036  6888              LDR      r0,[r1,#8]            ;125
000038  f0400010          ORR      r0,r0,#0x10           ;125
00003c  6088              STR      r0,[r1,#8]            ;125
00003e  f8d1019c          LDR      r0,[r1,#0x19c]        ;126
000042  f0200080          BIC      r0,r0,#0x80           ;126
000046  f8c1019c          STR      r0,[r1,#0x19c]        ;126
00004a  70da              STRB     r2,[r3,#3]            ;127
00004c  4770              BX       lr
                  |L5.78|
00004e  f8d0c004          LDR      r12,[r0,#4]           ;106
000052  f8d101a0          LDR      r0,[r1,#0x1a0]        ;106
000056  f36c0013          BFI      r0,r12,#0,#20         ;106
00005a  f8c101a0          STR      r0,[r1,#0x1a0]        ;106
00005e  6888              LDR      r0,[r1,#8]            ;107
000060  f0400002          ORR      r0,r0,#2              ;107
000064  6088              STR      r0,[r1,#8]            ;107
000066  f8d1019c          LDR      r0,[r1,#0x19c]        ;108
00006a  f0200002          BIC      r0,r0,#2              ;108
00006e  f8c1019c          STR      r0,[r1,#0x19c]        ;108
000072  701a              STRB     r2,[r3,#0]            ;109
000074  4770              BX       lr
                  |L5.118|
000076  f8d0c004          LDR      r12,[r0,#4]           ;112
00007a  f8d101a4          LDR      r0,[r1,#0x1a4]        ;112
00007e  f36c0013          BFI      r0,r12,#0,#20         ;112
000082  f8c101a4          STR      r0,[r1,#0x1a4]        ;112
000086  6888              LDR      r0,[r1,#8]            ;113
000088  f0400004          ORR      r0,r0,#4              ;113
00008c  6088              STR      r0,[r1,#8]            ;113
00008e  f8d1019c          LDR      r0,[r1,#0x19c]        ;114
000092  f0200008          BIC      r0,r0,#8              ;114
000096  f8c1019c          STR      r0,[r1,#0x19c]        ;114
00009a  705a              STRB     r2,[r3,#1]            ;115
00009c  4770              BX       lr
                  |L5.158|
00009e  f8d0c004          LDR      r12,[r0,#4]           ;118
0000a2  f8d101a8          LDR      r0,[r1,#0x1a8]        ;118
0000a6  f36c0013          BFI      r0,r12,#0,#20         ;118
0000aa  f8c101a8          STR      r0,[r1,#0x1a8]        ;118
0000ae  6888              LDR      r0,[r1,#8]            ;119
0000b0  f0400008          ORR      r0,r0,#8              ;119
0000b4  6088              STR      r0,[r1,#8]            ;119
0000b6  f8d1019c          LDR      r0,[r1,#0x19c]        ;120
0000ba  f0200020          BIC      r0,r0,#0x20           ;120
0000be  f8c1019c          STR      r0,[r1,#0x19c]        ;120
0000c2  709a              STRB     r2,[r3,#2]            ;121
0000c4  4770              BX       lr
;;;131    
                          ENDP

0000c6  0000              DCW      0x0000
                  |L5.200|
                          DCD      ||.data||

                          AREA ||i.TIMER_SetOneShotMode||, CODE, READONLY, ALIGN=2

                  TIMER_SetOneShotMode PROC
;;;161    
;;;162    void TIMER_SetOneShotMode(tTimerOpHandleInfo_t * ptTimerHandle)
000000  2201              MOVS     r2,#1
;;;163    {
;;;164    	switch( ptTimerHandle->ulTimerUnit ) {
000002  f8d0c000          LDR      r12,[r0,#0]
;;;165    	case TIMER_1UNIT:
;;;166    		TIMER->TIMER_RELOAD[0].tBit.timer_reload_val = ptTimerHandle->ulLoadCount;
000006  0791              LSLS     r1,r2,#30
;;;167    		SCRB->SYS_CLK_CTL.tBit.timclk0_en = ON;
;;;168    		TIMER->TIMER_CTRL.tBit.int_timer0_en = ON;
;;;169    		ulTimerOneShotEn[0] = 1;
000008  4b2e              LDR      r3,|L6.196|
00000a  f1bc0f00          CMP      r12,#0                ;164
00000e  d01d              BEQ      |L6.76|
000010  f1bc0f01          CMP      r12,#1                ;164
000014  d02e              BEQ      |L6.116|
000016  f1bc0f02          CMP      r12,#2                ;164
00001a  d03f              BEQ      |L6.156|
00001c  f1bc0f03          CMP      r12,#3                ;164
;;;170    		break;
;;;171    	case TIMER_2UNIT:
;;;172    		TIMER->TIMER_RELOAD[1].tBit.timer_reload_val = ptTimerHandle->ulLoadCount;
;;;173    		SCRB->SYS_CLK_CTL.tBit.timclk1_en = ON;
;;;174    		TIMER->TIMER_CTRL.tBit.int_timer1_en = ON;
;;;175    		ulTimerOneShotEn[1] = 1;
;;;176    		break;
;;;177    	case TIMER_3UNIT:
;;;178    		TIMER->TIMER_RELOAD[2].tBit.timer_reload_val = ptTimerHandle->ulLoadCount;
;;;179    		SCRB->SYS_CLK_CTL.tBit.timclk2_en = ON;
;;;180    		TIMER->TIMER_CTRL.tBit.int_timer2_en = ON;
;;;181    		ulTimerOneShotEn[2] = 1;
;;;182    		break;
;;;183    	case TIMER_4UNIT:
;;;184    		TIMER->TIMER_RELOAD[3].tBit.timer_reload_val = ptTimerHandle->ulLoadCount;
;;;185    		SCRB->SYS_CLK_CTL.tBit.timclk3_en = ON;
;;;186    		TIMER->TIMER_CTRL.tBit.int_timer3_en = ON;
;;;187    		ulTimerOneShotEn[3] = 1;
;;;188    		break;
;;;189    	}
;;;190    }
000020  bf18              IT       NE
000022  4770              BXNE     lr
000024  f8d0c004          LDR      r12,[r0,#4]           ;184
000028  f8d101ac          LDR      r0,[r1,#0x1ac]        ;184
00002c  f36c0013          BFI      r0,r12,#0,#20         ;184
000030  f8c101ac          STR      r0,[r1,#0x1ac]        ;184
000034  6888              LDR      r0,[r1,#8]            ;185
000036  f0400010          ORR      r0,r0,#0x10           ;185
00003a  6088              STR      r0,[r1,#8]            ;185
00003c  f8d1019c          LDR      r0,[r1,#0x19c]        ;186
000040  f0400080          ORR      r0,r0,#0x80           ;186
000044  f8c1019c          STR      r0,[r1,#0x19c]        ;186
000048  70da              STRB     r2,[r3,#3]            ;187
00004a  4770              BX       lr
                  |L6.76|
00004c  f8d0c004          LDR      r12,[r0,#4]           ;166
000050  f8d101a0          LDR      r0,[r1,#0x1a0]        ;166
000054  f36c0013          BFI      r0,r12,#0,#20         ;166
000058  f8c101a0          STR      r0,[r1,#0x1a0]        ;166
00005c  6888              LDR      r0,[r1,#8]            ;167
00005e  f0400002          ORR      r0,r0,#2              ;167
000062  6088              STR      r0,[r1,#8]            ;167
000064  f8d1019c          LDR      r0,[r1,#0x19c]        ;168
000068  f0400002          ORR      r0,r0,#2              ;168
00006c  f8c1019c          STR      r0,[r1,#0x19c]        ;168
000070  701a              STRB     r2,[r3,#0]            ;169
000072  4770              BX       lr
                  |L6.116|
000074  f8d0c004          LDR      r12,[r0,#4]           ;172
000078  f8d101a4          LDR      r0,[r1,#0x1a4]        ;172
00007c  f36c0013          BFI      r0,r12,#0,#20         ;172
000080  f8c101a4          STR      r0,[r1,#0x1a4]        ;172
000084  6888              LDR      r0,[r1,#8]            ;173
000086  f0400004          ORR      r0,r0,#4              ;173
00008a  6088              STR      r0,[r1,#8]            ;173
00008c  f8d1019c          LDR      r0,[r1,#0x19c]        ;174
000090  f0400008          ORR      r0,r0,#8              ;174
000094  f8c1019c          STR      r0,[r1,#0x19c]        ;174
000098  705a              STRB     r2,[r3,#1]            ;175
00009a  4770              BX       lr
                  |L6.156|
00009c  f8d0c004          LDR      r12,[r0,#4]           ;178
0000a0  f8d101a8          LDR      r0,[r1,#0x1a8]        ;178
0000a4  f36c0013          BFI      r0,r12,#0,#20         ;178
0000a8  f8c101a8          STR      r0,[r1,#0x1a8]        ;178
0000ac  6888              LDR      r0,[r1,#8]            ;179
0000ae  f0400008          ORR      r0,r0,#8              ;179
0000b2  6088              STR      r0,[r1,#8]            ;179
0000b4  f8d1019c          LDR      r0,[r1,#0x19c]        ;180
0000b8  f0400020          ORR      r0,r0,#0x20           ;180
0000bc  f8c1019c          STR      r0,[r1,#0x19c]        ;180
0000c0  709a              STRB     r2,[r3,#2]            ;181
0000c2  4770              BX       lr
;;;191    
                          ENDP

                  |L6.196|
                          DCD      ||.data||

                          AREA ||i.TIMER_SetPeriodicMode||, CODE, READONLY, ALIGN=2

                  TIMER_SetPeriodicMode PROC
;;;131    
;;;132    void TIMER_SetPeriodicMode(tTimerOpHandleInfo_t * ptTimerHandle)
000000  f8d0c000          LDR      r12,[r0,#0]
;;;133    {
;;;134    	switch( ptTimerHandle->ulTimerUnit ) {
000004  2200              MOVS     r2,#0
;;;135    	case 0:
;;;136    		TIMER->TIMER_RELOAD[0].tBit.timer_reload_val = ptTimerHandle->ulLoadCount;
;;;137    		SCRB->SYS_CLK_CTL.tBit.timclk0_en = ON;
;;;138    		TIMER->TIMER_CTRL.tBit.int_timer0_en = ON;
;;;139    		ulTimerOneShotEn[0] = 0;
000006  4b30              LDR      r3,|L7.200|
000008  f04f4180          MOV      r1,#0x40000000        ;136
00000c  f1bc0f00          CMP      r12,#0                ;134
000010  d01d              BEQ      |L7.78|
000012  f1bc0f01          CMP      r12,#1                ;134
000016  d02e              BEQ      |L7.118|
000018  f1bc0f02          CMP      r12,#2                ;134
00001c  d03f              BEQ      |L7.158|
00001e  f1bc0f03          CMP      r12,#3                ;134
;;;140    		break;
;;;141    	case 1:
;;;142    		TIMER->TIMER_RELOAD[1].tBit.timer_reload_val = ptTimerHandle->ulLoadCount;
;;;143    		SCRB->SYS_CLK_CTL.tBit.timclk1_en = ON;
;;;144    		TIMER->TIMER_CTRL.tBit.int_timer1_en = ON;
;;;145    		ulTimerOneShotEn[1] = 0;
;;;146    		break;
;;;147    	case 2:
;;;148    		TIMER->TIMER_RELOAD[2].tBit.timer_reload_val = ptTimerHandle->ulLoadCount;
;;;149    		SCRB->SYS_CLK_CTL.tBit.timclk2_en = ON;
;;;150    		TIMER->TIMER_CTRL.tBit.int_timer2_en = ON;
;;;151    		ulTimerOneShotEn[2] = 0;
;;;152    		break;
;;;153    	case 3:
;;;154    		TIMER->TIMER_RELOAD[3].tBit.timer_reload_val = ptTimerHandle->ulLoadCount;
;;;155    		SCRB->SYS_CLK_CTL.tBit.timclk3_en = ON;
;;;156    		TIMER->TIMER_CTRL.tBit.int_timer3_en = ON;
;;;157    		ulTimerOneShotEn[3] = 0;
;;;158    		break;
;;;159    	}
;;;160    }
000022  bf18              IT       NE
000024  4770              BXNE     lr
000026  f8d0c004          LDR      r12,[r0,#4]           ;154
00002a  f8d101ac          LDR      r0,[r1,#0x1ac]        ;154
00002e  f36c0013          BFI      r0,r12,#0,#20         ;154
000032  f8c101ac          STR      r0,[r1,#0x1ac]        ;154
000036  6888              LDR      r0,[r1,#8]            ;155
000038  f0400010          ORR      r0,r0,#0x10           ;155
00003c  6088              STR      r0,[r1,#8]            ;155
00003e  f8d1019c          LDR      r0,[r1,#0x19c]        ;156
000042  f0400080          ORR      r0,r0,#0x80           ;156
000046  f8c1019c          STR      r0,[r1,#0x19c]        ;156
00004a  70da              STRB     r2,[r3,#3]            ;157
00004c  4770              BX       lr
                  |L7.78|
00004e  f8d0c004          LDR      r12,[r0,#4]           ;136
000052  f8d101a0          LDR      r0,[r1,#0x1a0]        ;136
000056  f36c0013          BFI      r0,r12,#0,#20         ;136
00005a  f8c101a0          STR      r0,[r1,#0x1a0]        ;136
00005e  6888              LDR      r0,[r1,#8]            ;137
000060  f0400002          ORR      r0,r0,#2              ;137
000064  6088              STR      r0,[r1,#8]            ;137
000066  f8d1019c          LDR      r0,[r1,#0x19c]        ;138
00006a  f0400002          ORR      r0,r0,#2              ;138
00006e  f8c1019c          STR      r0,[r1,#0x19c]        ;138
000072  701a              STRB     r2,[r3,#0]            ;139
000074  4770              BX       lr
                  |L7.118|
000076  f8d0c004          LDR      r12,[r0,#4]           ;142
00007a  f8d101a4          LDR      r0,[r1,#0x1a4]        ;142
00007e  f36c0013          BFI      r0,r12,#0,#20         ;142
000082  f8c101a4          STR      r0,[r1,#0x1a4]        ;142
000086  6888              LDR      r0,[r1,#8]            ;143
000088  f0400004          ORR      r0,r0,#4              ;143
00008c  6088              STR      r0,[r1,#8]            ;143
00008e  f8d1019c          LDR      r0,[r1,#0x19c]        ;144
000092  f0400008          ORR      r0,r0,#8              ;144
000096  f8c1019c          STR      r0,[r1,#0x19c]        ;144
00009a  705a              STRB     r2,[r3,#1]            ;145
00009c  4770              BX       lr
                  |L7.158|
00009e  f8d0c004          LDR      r12,[r0,#4]           ;148
0000a2  f8d101a8          LDR      r0,[r1,#0x1a8]        ;148
0000a6  f36c0013          BFI      r0,r12,#0,#20         ;148
0000aa  f8c101a8          STR      r0,[r1,#0x1a8]        ;148
0000ae  6888              LDR      r0,[r1,#8]            ;149
0000b0  f0400008          ORR      r0,r0,#8              ;149
0000b4  6088              STR      r0,[r1,#8]            ;149
0000b6  f8d1019c          LDR      r0,[r1,#0x19c]        ;150
0000ba  f0400020          ORR      r0,r0,#0x20           ;150
0000be  f8c1019c          STR      r0,[r1,#0x19c]        ;150
0000c2  709a              STRB     r2,[r3,#2]            ;151
0000c4  4770              BX       lr
;;;161    
                          ENDP

0000c6  0000              DCW      0x0000
                  |L7.200|
                          DCD      ||.data||

                          AREA ||i.TIMER_StartTimer||, CODE, READONLY, ALIGN=2

                  TIMER_StartTimer PROC
;;;191    
;;;192    void TIMER_StartTimer(uint32_t Unit)
000000  4b25              LDR      r3,|L8.152|
;;;193    {
;;;194    	switch( Unit ) {
;;;195    	case TIMER_1UNIT:
;;;196    		ulTimerIRQHandle[0] = 0;
;;;197    		if( ulTimerOneShotEn[0] ) {
000002  f8dfc098          LDR      r12,|L8.156|
000006  2200              MOVS     r2,#0                 ;193
;;;198    			TIMER->TIMER_OS_START.tBit.timer0_os_start = ON;
000008  f04f4180          MOV      r1,#0x40000000
00000c  b1b8              CBZ      r0,|L8.62|
00000e  2801              CMP      r0,#1                 ;194
000010  d024              BEQ      |L8.92|
000012  2802              CMP      r0,#2                 ;194
000014  d031              BEQ      |L8.122|
000016  2803              CMP      r0,#3                 ;194
;;;199    		}
;;;200    		else {
;;;201    			TIMER->TIMER_CTRL.tBit.timer0_en = ON;
;;;202    		}
;;;203    		break;
;;;204    	case TIMER_2UNIT:
;;;205    		ulTimerIRQHandle[1] = 0;
;;;206    		if( ulTimerOneShotEn[1] ) {
;;;207    			TIMER->TIMER_OS_START.tBit.timer1_os_start = ON;
;;;208    		}
;;;209    		else {
;;;210    			TIMER->TIMER_CTRL.tBit.timer1_en = ON;
;;;211    		}
;;;212    		break;
;;;213    	case TIMER_3UNIT:
;;;214    		ulTimerIRQHandle[2] = 0;
;;;215    		if( ulTimerOneShotEn[2] ) {
;;;216    			TIMER->TIMER_OS_START.tBit.timer2_os_start = ON;
;;;217    		}
;;;218    		else {
;;;219    			TIMER->TIMER_CTRL.tBit.timer2_en = ON;
;;;220    		}
;;;221    		break;
;;;222    	case TIMER_4UNIT:
;;;223    		ulTimerIRQHandle[3] = 0;
;;;224    		if( ulTimerOneShotEn[3] ) {
;;;225    			TIMER->TIMER_OS_START.tBit.timer3_os_start = ON;
;;;226    		}
;;;227    		else {
;;;228    			TIMER->TIMER_CTRL.tBit.timer3_en = ON;
;;;229    		}
;;;230    		break;
;;;231    	}
;;;232    }
000018  bf18              IT       NE
00001a  4770              BXNE     lr
00001c  60da              STR      r2,[r3,#0xc]          ;223  ; ulTimerIRQHandle
00001e  f89c0003          LDRB     r0,[r12,#3]           ;224  ; ulTimerOneShotEn
000022  2800              CMP      r0,#0                 ;224
000024  bf19              ITTEE    NE                    ;225
000026  f8d101b0          LDRNE    r0,[r1,#0x1b0]        ;225
00002a  f0400008          ORRNE    r0,r0,#8              ;225
00002e  f8d1019c          LDREQ    r0,[r1,#0x19c]        ;228
000032  f0400040          ORREQ    r0,r0,#0x40           ;228
000036  d00e              BEQ      |L8.86|
                  |L8.56|
000038  f8c101b0          STR      r0,[r1,#0x1b0]        ;216
00003c  4770              BX       lr
                  |L8.62|
00003e  601a              STR      r2,[r3,#0]            ;196  ; ulTimerIRQHandle
000040  f89c0000          LDRB     r0,[r12,#0]           ;197  ; ulTimerOneShotEn
000044  2800              CMP      r0,#0                 ;197
000046  bf14              ITE      NE                    ;198
000048  f8d101b0          LDRNE    r0,[r1,#0x1b0]        ;198
00004c  f8d1019c          LDREQ    r0,[r1,#0x19c]        ;201
000050  f0400001          ORR      r0,r0,#1              ;201
000054  d1f0              BNE      |L8.56|
                  |L8.86|
000056  f8c1019c          STR      r0,[r1,#0x19c]        ;219
00005a  4770              BX       lr
                  |L8.92|
00005c  605a              STR      r2,[r3,#4]            ;205  ; ulTimerIRQHandle
00005e  f89c0001          LDRB     r0,[r12,#1]           ;206  ; ulTimerOneShotEn
000062  2800              CMP      r0,#0                 ;206
000064  bf19              ITTEE    NE                    ;207
000066  f8d101b0          LDRNE    r0,[r1,#0x1b0]        ;207
00006a  f0400002          ORRNE    r0,r0,#2              ;207
00006e  f8d1019c          LDREQ    r0,[r1,#0x19c]        ;210
000072  f0400004          ORREQ    r0,r0,#4              ;210
000076  d1df              BNE      |L8.56|
000078  e7ed              B        |L8.86|
                  |L8.122|
00007a  609a              STR      r2,[r3,#8]            ;214  ; ulTimerIRQHandle
00007c  f89c0002          LDRB     r0,[r12,#2]           ;215  ; ulTimerOneShotEn
000080  2800              CMP      r0,#0                 ;215
000082  bf19              ITTEE    NE                    ;216
000084  f8d101b0          LDRNE    r0,[r1,#0x1b0]        ;216
000088  f0400004          ORRNE    r0,r0,#4              ;216
00008c  f8d1019c          LDREQ    r0,[r1,#0x19c]        ;219
000090  f0400010          ORREQ    r0,r0,#0x10           ;219
000094  d1d0              BNE      |L8.56|
000096  e7de              B        |L8.86|
;;;233    
                          ENDP

                  |L8.152|
                          DCD      ||.bss||
                  |L8.156|
                          DCD      ||.data||

                          AREA ||i.TIMER_StopTimer||, CODE, READONLY, ALIGN=2

                  TIMER_StopTimer PROC
;;;233    
;;;234    void TIMER_StopTimer(uint32_t Unit)
000000  4b28              LDR      r3,|L9.164|
;;;235    {
000002  2200              MOVS     r2,#0
;;;236    	switch( Unit ) {
;;;237    	case TIMER_1UNIT:
;;;238    		ulTimerIRQHandle[0] = 0;
;;;239    		TIMER->TIMER_CTRL.tBit.int_timer0_en = OFF;
000004  f04f4180          MOV      r1,#0x40000000
000008  b1b8              CBZ      r0,|L9.58|
00000a  2801              CMP      r0,#1                 ;236
00000c  d026              BEQ      |L9.92|
00000e  2802              CMP      r0,#2                 ;236
000010  d036              BEQ      |L9.128|
000012  2803              CMP      r0,#3                 ;236
;;;240    		TIMER->TIMER_CTRL.tBit.timer0_en = OFF;
;;;241    		SCRB->SYS_CLK_CTL.tBit.timclk0_en = OFF;
;;;242    		break;
;;;243    	case TIMER_2UNIT:
;;;244    		ulTimerIRQHandle[1] = 0;
;;;245    		TIMER->TIMER_CTRL.tBit.int_timer1_en = OFF;
;;;246    		TIMER->TIMER_CTRL.tBit.timer1_en = OFF;
;;;247    		SCRB->SYS_CLK_CTL.tBit.timclk1_en = OFF;
;;;248    		break;
;;;249    	case TIMER_3UNIT:
;;;250    		ulTimerIRQHandle[2] = 0;
;;;251    		TIMER->TIMER_CTRL.tBit.int_timer2_en = OFF;
;;;252    		TIMER->TIMER_CTRL.tBit.timer2_en = OFF;
;;;253    		SCRB->SYS_CLK_CTL.tBit.timclk2_en = OFF;
;;;254    		break;
;;;255    	case TIMER_4UNIT:
;;;256    		ulTimerIRQHandle[3] = 0;
;;;257    		TIMER->TIMER_CTRL.tBit.int_timer3_en = OFF;
;;;258    		TIMER->TIMER_CTRL.tBit.timer3_en = OFF;
;;;259    		SCRB->SYS_CLK_CTL.tBit.timclk3_en = OFF;
;;;260    		break;
;;;261    	}
;;;262    }
000014  bf18              IT       NE
000016  4770              BXNE     lr
000018  60da              STR      r2,[r3,#0xc]          ;256  ; ulTimerIRQHandle
00001a  f8d1019c          LDR      r0,[r1,#0x19c]        ;257
00001e  f0200080          BIC      r0,r0,#0x80           ;257
000022  f8c1019c          STR      r0,[r1,#0x19c]        ;257
000026  f8d1019c          LDR      r0,[r1,#0x19c]        ;258
00002a  f0200040          BIC      r0,r0,#0x40           ;258
00002e  f8c1019c          STR      r0,[r1,#0x19c]        ;258
000032  6888              LDR      r0,[r1,#8]            ;259
000034  f0200010          BIC      r0,r0,#0x10           ;259
000038  e020              B        |L9.124|
                  |L9.58|
00003a  601a              STR      r2,[r3,#0]            ;238  ; ulTimerIRQHandle
00003c  f8d1019c          LDR      r0,[r1,#0x19c]        ;239
000040  f0200002          BIC      r0,r0,#2              ;239
000044  f8c1019c          STR      r0,[r1,#0x19c]        ;239
000048  f8d1019c          LDR      r0,[r1,#0x19c]        ;240
00004c  f0200001          BIC      r0,r0,#1              ;240
000050  f8c1019c          STR      r0,[r1,#0x19c]        ;240
000054  6888              LDR      r0,[r1,#8]            ;241
000056  f0200002          BIC      r0,r0,#2              ;241
00005a  e00f              B        |L9.124|
                  |L9.92|
00005c  605a              STR      r2,[r3,#4]            ;244  ; ulTimerIRQHandle
00005e  f8d1019c          LDR      r0,[r1,#0x19c]        ;245
000062  f0200008          BIC      r0,r0,#8              ;245
000066  f8c1019c          STR      r0,[r1,#0x19c]        ;245
00006a  f8d1019c          LDR      r0,[r1,#0x19c]        ;246
00006e  f0200004          BIC      r0,r0,#4              ;246
000072  f8c1019c          STR      r0,[r1,#0x19c]        ;246
000076  6888              LDR      r0,[r1,#8]            ;247
000078  f0200004          BIC      r0,r0,#4              ;247
                  |L9.124|
00007c  6088              STR      r0,[r1,#8]            ;247
00007e  4770              BX       lr
                  |L9.128|
000080  609a              STR      r2,[r3,#8]            ;250  ; ulTimerIRQHandle
000082  f8d1019c          LDR      r0,[r1,#0x19c]        ;251
000086  f0200020          BIC      r0,r0,#0x20           ;251
00008a  f8c1019c          STR      r0,[r1,#0x19c]        ;251
00008e  f8d1019c          LDR      r0,[r1,#0x19c]        ;252
000092  f0200010          BIC      r0,r0,#0x10           ;252
000096  f8c1019c          STR      r0,[r1,#0x19c]        ;252
00009a  6888              LDR      r0,[r1,#8]            ;253
00009c  f0200008          BIC      r0,r0,#8              ;253
0000a0  e7ec              B        |L9.124|
;;;263    
                          ENDP

0000a2  0000              DCW      0x0000
                  |L9.164|
                          DCD      ||.bss||

                          AREA ||i.TIMER_WaitForIrq||, CODE, READONLY, ALIGN=2

                  TIMER_WaitForIrq PROC
;;;276    
;;;277    void TIMER_WaitForIrq(uint32_t Unit)
000000  4904              LDR      r1,|L10.20|
;;;278    {
;;;279    	while(ulTimerIRQHandle[Unit] == 0)
000002  bf00              NOP      
                  |L10.4|
000004  f8512020          LDR      r2,[r1,r0,LSL #2]
000008  2a00              CMP      r2,#0
00000a  d0fb              BEQ      |L10.4|
;;;280    	{
;;;281    //		__WFI();
;;;282    	}
;;;283    	ulTimerIRQHandle[Unit] = 0;
00000c  2200              MOVS     r2,#0
00000e  f8412020          STR      r2,[r1,r0,LSL #2]
;;;284    }
000012  4770              BX       lr
;;;285    
                          ENDP

                  |L10.20|
                          DCD      ||.bss||

                          AREA ||i.medium_delay||, CODE, READONLY, ALIGN=2

                  medium_delay PROC
;;;285    
;;;286    void medium_delay(uint32_t usec)
000000  b081              SUB      sp,sp,#4
;;;287    {
;;;288    	/*
;;;289    	 	Base on 96MHz
;;;290    	 	1 		:    1.43	us
;;;291    		5		:    2.78	us
;;;292    		10 		:    4.58	us
;;;293    		100 	:   36.08	us
;;;294    		1000	:  351.4	us
;;;295    		10000	: 3503.0	us
;;;296    		time(usec) = 2.854 x (Clock) - 3.019
;;;297    	*/
;;;298        __IO uint32_t i = 0;
000002  2100              MOVS     r1,#0
;;;299        uint32_t ulCheckClk;
;;;300        ulCheckClk = ((2854 * usec) - 3019)/1000;
000004  9100              STR      r1,[sp,#0]
000006  f2405193          MOV      r1,#0x593
00000a  4348              MULS     r0,r1,r0
00000c  490a              LDR      r1,|L11.56|
00000e  eb010040          ADD      r0,r1,r0,LSL #1
000012  f44f717a          MOV      r1,#0x3e8
000016  fbb0f0f1          UDIV     r0,r0,r1
;;;301    
;;;302        for (i = 0; i < ulCheckClk; i++)
00001a  2800              CMP      r0,#0
;;;303        {
;;;304            __ISB();
;;;305        }
;;;306    }
00001c  bf9c              ITT      LS
00001e  b001              ADDLS    sp,sp,#4
000020  4770              BXLS     lr
000022  bf00              NOP                            ;304
                  |L11.36|
000024  f3bf8f6f          ISB                            ;304
000028  9900              LDR      r1,[sp,#0]            ;302
00002a  1c49              ADDS     r1,r1,#1              ;302
00002c  9100              STR      r1,[sp,#0]            ;302
00002e  4288              CMP      r0,r1                 ;302
000030  d8f8              BHI      |L11.36|
000032  b001              ADD      sp,sp,#4
000034  4770              BX       lr
                          ENDP

000036  0000              DCW      0x0000
                  |L11.56|
                          DCD      0xfffff435

                          AREA ||.bss||, DATA, NOINIT, ALIGN=2

                  ulTimerIRQHandle
                          %        32

                          AREA ||.data||, DATA, ALIGN=0

                  ulTimerOneShotEn
000000  00000000          DCB      0x00,0x00,0x00,0x00
                          DCDU     0x00000000

;*** Start embedded assembler ***

#line 1 "..\\..\\Hal\\timer\\timer.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___7_timer_c_5b3278fc____REV16|
#line 388 "..\\..\\Hal\\system\\CMSIS\\cmsis_armcc.h"
|__asm___7_timer_c_5b3278fc____REV16| PROC
#line 389

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___7_timer_c_5b3278fc____REVSH|
#line 402
|__asm___7_timer_c_5b3278fc____REVSH| PROC
#line 403

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___7_timer_c_5b3278fc____RRX|
#line 587
|__asm___7_timer_c_5b3278fc____RRX| PROC
#line 588

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
