; generated by Component: ARM Compiler 5.06 update 4 (build 422) Tool: ArmCC [4d3604]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o.\bin\i2cm.o --asm_dir=.\list\ --list_dir=.\list\ --depend=.\bin\i2cm.d --cpu=Cortex-M3 --apcs=interwork -O3 -Otime --diag_suppress=9931 -I..\..\App -I..\..\App\Algorithm -I..\..\App\Algorithm\Baseline -I..\..\App\Algorithm\Coord -I..\..\App\Algorithm\Label -I..\..\App\Algorithm\Noise -I..\..\Env -I..\..\Hal -I..\..\Hal\system -I..\..\Hal\system\CMSIS -I..\..\Hal\gpio -I..\..\Hal\i2c -I..\..\Hal\pwmdrv -I..\..\Hal\timer -I..\..\Hal\wdgt -I..\..\Hal\spi -I..\..\Hal\dspA -I..\..\Hal\dspB -I..\..\Hal\scrb -I..\..\Hal\usb -I..\..\Hal\usb\FWOTG210_F000 -I..\..\Hal\usb\FWOTG210_F000\OTG_peripheral -I..\..\Hal\usb\FWOTG210_F000\OTG_peripheral_Config -I..\..\Hal\gdma -I..\..\Hal\flitf -I..\..\Module -I..\..\Module\SRIC -I..\..\Protocol -I..\..\Tool_BinCvt\BinToolApp\src -I..\..\Boot -I..\..\Parameter -I..\..\Hal\dbgserial -I..\..\Hal\tlvds -I..\..\Tuning_process -I.\RTE\_MFTP_FPGA -IC:\Keil_v5\ARM\PACK\ARM\CMSIS\5.0.1\Device\ARM\ARMCM3\Include -IC:\Keil_v5\ARM\CMSIS\Include -D__UVISION_VERSION=523 -DARMCM3 -D_USE_APP_80K_ --wchar32 --omf_browse=.\bin\i2cm.crf ..\..\Hal\i2c\i2cm.c]
                          THUMB

                          AREA ||i.I2CM_Initialize||, CODE, READONLY, ALIGN=2

                  I2CM_Initialize PROC
;;;46     
;;;47     void I2CM_Initialize(void)
000000  b510              PUSH     {r4,lr}
;;;48     {
;;;49     	GPIO_Set_Mode(_GPIO_MST_SCL, GPIO_MODE_FUNC_1);
000002  2101              MOVS     r1,#1
000004  2037              MOVS     r0,#0x37
000006  f7fffffe          BL       GPIO_Set_Mode
;;;50     	GPIO_Set_Mode(_GPIO_MST_SDA, GPIO_MODE_FUNC_1);
00000a  2101              MOVS     r1,#1
00000c  2038              MOVS     r0,#0x38
00000e  f7fffffe          BL       GPIO_Set_Mode
;;;51     
;;;52     	I2CM->I2C_MST_CR1.tBit.I2cMstClkDiv = (96000/400);	//(system clock / i2c target speed)
000012  4813              LDR      r0,|L1.96|
000014  68c1              LDR      r1,[r0,#0xc]
000016  f36f010f          BFC      r1,#0,#16
00001a  31f0              ADDS     r1,r1,#0xf0
00001c  60c1              STR      r1,[r0,#0xc]
;;;53     	I2CM->I2C_MST_DBG.tBit.I2cMstTrLen = 5;
00001e  6c01              LDR      r1,[r0,#0x40]
000020  f36f010e          BFC      r1,#0,#15
000024  1d49              ADDS     r1,r1,#5
000026  6401              STR      r1,[r0,#0x40]
;;;54     
;;;55     	I2CM->I2C_FIFO_CR.tBit.TxFifoInit = 1;
000028  69c1              LDR      r1,[r0,#0x1c]
00002a  f0410101          ORR      r1,r1,#1
00002e  61c1              STR      r1,[r0,#0x1c]
;;;56     	I2CM->I2C_FIFO_CR.tBit.RxFifoInit = 1;
000030  69c1              LDR      r1,[r0,#0x1c]
000032  f4417180          ORR      r1,r1,#0x100
000036  61c1              STR      r1,[r0,#0x1c]
;;;57     
;;;58     	SCRB->SERIAL_CLK_DIV.tBit.i2cm0_div = 0;
000038  f04f4180          MOV      r1,#0x40000000
00003c  6f4a              LDR      r2,[r1,#0x74]
00003e  f02202f0          BIC      r2,r2,#0xf0
000042  674a              STR      r2,[r1,#0x74]
;;;59     	SCRB->SYS_CLK_CTL.tBit.i2cm0clk_en = 1;		// I2CM0 clock enable
000044  688a              LDR      r2,[r1,#8]
000046  f4424200          ORR      r2,r2,#0x8000
00004a  608a              STR      r2,[r1,#8]
;;;60     	SCRB->SYS_RST_CTL.tBit.i2cm_rst = 0;		// I2CM0 reset
00004c  68ca              LDR      r2,[r1,#0xc]
00004e  f4226200          BIC      r2,r2,#0x800
000052  60ca              STR      r2,[r1,#0xc]
;;;61     
;;;62     //	I2CM->I2C_DEVICE_ADDR.tBit.I2cId = TPIC_I2C_ADDR;//I2C_ADDRESS;
;;;63     	I2CM->I2C_SW_RESET.tBit.I2cSWReset = 1;
000054  6841              LDR      r1,[r0,#4]
000056  f0410101          ORR      r1,r1,#1
00005a  6041              STR      r1,[r0,#4]
;;;64     //	I2CM->I2C_DEVICE_ADDR.tBit.I2cId = TPIC_I2C_ADDR;//I2C_ADDRESS;
;;;65     }
00005c  bd10              POP      {r4,pc}
;;;66     
                          ENDP

00005e  0000              DCW      0x0000
                  |L1.96|
                          DCD      0x40007000

                          AREA ||i.I2CM_RcvByte||, CODE, READONLY, ALIGN=2

                  I2CM_RcvByte PROC
;;;86     
;;;87     void I2CM_RcvByte(uint8_t ulSlaveAddr, uint8_t addr, uint8_t *data, uint32_t length)
000000  b470              PUSH     {r4-r6}
;;;88     {
;;;89     	uint32_t i = 0;
;;;90     
;;;91     	I2CM->I2C_MST_CR2.ulBulk = 0 | (1 << I2C_MST_STR) | (ulSlaveAddr << I2C_MST_DATA_TR);
000002  f8dfc078          LDR      r12,|L2.124|
000006  f4407480          ORR      r4,r0,#0x100
00000a  f8cc4010          STR      r4,[r12,#0x10]
;;;92     
;;;93     	while(I2CM->I2C_GLB_SR.tBit.I2cPacketEn);
00000e  bf00              NOP      
                  |L2.16|
000010  f8dc4014          LDR      r4,[r12,#0x14]
000014  f0140f20          TST      r4,#0x20
000018  d1fa              BNE      |L2.16|
;;;94     
;;;95     	I2CM->I2C_MST_CR2.ulBulk = 0 | (addr<<I2C_MST_DATA_TR);
00001a  f8cc1010          STR      r1,[r12,#0x10]
;;;96     
;;;97     	while(I2CM->I2C_GLB_SR.tBit.I2cPacketEn);
00001e  bf00              NOP      
                  |L2.32|
000020  f8dc1014          LDR      r1,[r12,#0x14]
000024  f0110f20          TST      r1,#0x20
000028  d1fa              BNE      |L2.32|
;;;98     
;;;99     	I2CM->I2C_MST_CR2.ulBulk = 0 | (1 << I2C_MST_STR) | ((ulSlaveAddr | 0x1) << I2C_MST_DATA_TR);
00002a  f2401101          MOV      r1,#0x101
00002e  4308              ORRS     r0,r0,r1
000030  f8cc0010          STR      r0,[r12,#0x10]
                  |L2.52|
;;;100    
;;;101    	while(I2CM->I2C_GLB_SR.tBit.I2cPacketEn);
000034  f8dc0014          LDR      r0,[r12,#0x14]
000038  f0100f20          TST      r0,#0x20
00003c  d1fa              BNE      |L2.52|
;;;102    
;;;103    	for(i = 0; i < length; i++)
00003e  2100              MOVS     r1,#0
000040  2b00              CMP      r3,#0
;;;104    	{
;;;105    		if(i == length-1)
;;;106    			I2CM->I2C_MST_CR2.ulBulk = 0 | (1 << I2C_MST_STOP) | (1 << I2C_MST_RCV_MODE) | (1 << I2C_MST_NACK_TR);
;;;107    		else
;;;108    			I2CM->I2C_MST_CR2.ulBulk = 0 | (1 << I2C_MST_RCV_MODE);
;;;109    
;;;110    		while(I2CM->I2C_GLB_SR.tBit.I2cPacketEn);
;;;111    		data[i] = I2CM->I2C_GLB_SR.tBit.I2cMstDataRcv;
;;;112    	}
;;;113    }
000042  bf9c              ITT      LS
000044  bc70              POPLS    {r4-r6}
000046  4770              BXLS     lr
000048  1e5c              SUBS     r4,r3,#1              ;105
00004a  f44f6560          MOV      r5,#0xe00             ;106
00004e  f44f6680          MOV      r6,#0x400             ;108
                  |L2.82|
000052  42a1              CMP      r1,r4                 ;105
000054  bf0c              ITE      EQ                    ;106
000056  f8cc5010          STREQ    r5,[r12,#0x10]        ;106
00005a  f8cc6010          STRNE    r6,[r12,#0x10]        ;108
                  |L2.94|
00005e  f8dc0014          LDR      r0,[r12,#0x14]        ;110
000062  f0100f20          TST      r0,#0x20              ;110
000066  d1fa              BNE      |L2.94|
000068  f8dc0014          LDR      r0,[r12,#0x14]        ;111
00006c  0a00              LSRS     r0,r0,#8              ;111
00006e  5450              STRB     r0,[r2,r1]            ;111
000070  1c49              ADDS     r1,r1,#1              ;111
000072  4299              CMP      r1,r3                 ;103
000074  d3ed              BCC      |L2.82|
000076  bc70              POP      {r4-r6}
000078  4770              BX       lr
                          ENDP

00007a  0000              DCW      0x0000
                  |L2.124|
                          DCD      0x40007000

                          AREA ||i.I2CM_SendByte||, CODE, READONLY, ALIGN=2

                  I2CM_SendByte PROC
;;;66     
;;;67     void I2CM_SendByte(uint8_t ulSlaveAddr, uint8_t *data, uint16_t length)
000000  f4407380          ORR      r3,r0,#0x100
;;;68     {
;;;69     	uint32_t i = 0;
;;;70     
;;;71     	I2CM->I2C_MST_CR2.ulBulk = 0 | (1 << I2C_MST_STR) | (ulSlaveAddr << I2C_MST_DATA_TR);
000004  4810              LDR      r0,|L3.72|
000006  b410              PUSH     {r4}                  ;68
000008  6103              STR      r3,[r0,#0x10]
                  |L3.10|
;;;72     
;;;73     	while(I2CM->I2C_GLB_SR.tBit.I2cPacketEn);
00000a  6943              LDR      r3,[r0,#0x14]
00000c  f0130f20          TST      r3,#0x20
000010  d1fb              BNE      |L3.10|
;;;74     
;;;75     	for(i = 0; i < length; i++)
000012  2300              MOVS     r3,#0
000014  2a00              CMP      r2,#0
;;;76     	{
;;;77     		if(i == length-1)
000016  bf88              IT       HI
000018  1e54              SUBHI    r4,r2,#1
00001a  d90f              BLS      |L3.60|
                  |L3.28|
;;;78     			I2CM->I2C_MST_CR2.ulBulk = 0 | (1<<I2C_MST_STOP) | (data[i]<<I2C_MST_DATA_TR);
;;;79     		else
;;;80     			I2CM->I2C_MST_CR2.ulBulk = 0 | (data[i]<<I2C_MST_DATA_TR);
00001c  f811c003          LDRB     r12,[r1,r3]
000020  42a3              CMP      r3,r4                 ;77
000022  bf08              IT       EQ                    ;78
000024  f44c7c00          ORREQ    r12,r12,#0x200        ;78
000028  f8c0c010          STR      r12,[r0,#0x10]        ;78
                  |L3.44|
;;;81     
;;;82     		while(I2CM->I2C_GLB_SR.tBit.I2cPacketEn);
00002c  f8d0c014          LDR      r12,[r0,#0x14]
000030  f01c0f20          TST      r12,#0x20
000034  d1fa              BNE      |L3.44|
000036  1c5b              ADDS     r3,r3,#1
000038  4293              CMP      r3,r2                 ;75
00003a  d3ef              BCC      |L3.28|
                  |L3.60|
;;;83     	}
;;;84     	I2CM->I2C_GLB_SR.tBit.I2C_ITRPT = 0;
00003c  6941              LDR      r1,[r0,#0x14]
00003e  f0210101          BIC      r1,r1,#1
000042  6141              STR      r1,[r0,#0x14]
;;;85     }
000044  bc10              POP      {r4}
000046  4770              BX       lr
;;;86     
                          ENDP

                  |L3.72|
                          DCD      0x40007000

;*** Start embedded assembler ***

#line 1 "..\\..\\Hal\\i2c\\i2cm.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___6_i2cm_c_10f50851____REV16|
#line 388 "..\\..\\Hal\\system\\CMSIS\\cmsis_armcc.h"
|__asm___6_i2cm_c_10f50851____REV16| PROC
#line 389

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___6_i2cm_c_10f50851____REVSH|
#line 402
|__asm___6_i2cm_c_10f50851____REVSH| PROC
#line 403

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___6_i2cm_c_10f50851____RRX|
#line 587
|__asm___6_i2cm_c_10f50851____RRX| PROC
#line 588

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
